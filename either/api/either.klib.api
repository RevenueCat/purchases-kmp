// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.revenuecat.purchases:either>
final class com.revenuecat.purchases.kmp.either/FailedPurchase { // com.revenuecat.purchases.kmp.either/FailedPurchase|null[0]
    final val error // com.revenuecat.purchases.kmp.either/FailedPurchase.error|{}error[0]
        final fun <get-error>(): com.revenuecat.purchases.kmp.models/PurchasesError // com.revenuecat.purchases.kmp.either/FailedPurchase.error.<get-error>|<get-error>(){}[0]
    final val userCancelled // com.revenuecat.purchases.kmp.either/FailedPurchase.userCancelled|{}userCancelled[0]
        final fun <get-userCancelled>(): kotlin/Boolean // com.revenuecat.purchases.kmp.either/FailedPurchase.userCancelled.<get-userCancelled>|<get-userCancelled>(){}[0]
}

final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.either/awaitCustomerInfoEither(com.revenuecat.purchases.kmp.models/CacheFetchPolicy = ...): arrow.core/Either<com.revenuecat.purchases.kmp.models/PurchasesError, com.revenuecat.purchases.kmp.models/CustomerInfo> // com.revenuecat.purchases.kmp.either/awaitCustomerInfoEither|awaitCustomerInfoEither@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.CacheFetchPolicy){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.either/awaitEligibleWinBackOffersForPackageEither(com.revenuecat.purchases.kmp.models/Package): arrow.core/Either<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin.collections/List<com.revenuecat.purchases.kmp.models/WinBackOffer>> // com.revenuecat.purchases.kmp.either/awaitEligibleWinBackOffersForPackageEither|awaitEligibleWinBackOffersForPackageEither@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.Package){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.either/awaitEligibleWinBackOffersForProductEither(com.revenuecat.purchases.kmp.models/StoreProduct): arrow.core/Either<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin.collections/List<com.revenuecat.purchases.kmp.models/WinBackOffer>> // com.revenuecat.purchases.kmp.either/awaitEligibleWinBackOffersForProductEither|awaitEligibleWinBackOffersForProductEither@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.StoreProduct){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.either/awaitGetProductsEither(kotlin.collections/List<kotlin/String>): arrow.core/Either<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin.collections/List<com.revenuecat.purchases.kmp.models/StoreProduct>> // com.revenuecat.purchases.kmp.either/awaitGetProductsEither|awaitGetProductsEither@com.revenuecat.purchases.kmp.Purchases(kotlin.collections.List<kotlin.String>){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.either/awaitLogInEither(kotlin/String): arrow.core/Either<com.revenuecat.purchases.kmp.models/PurchasesError, com.revenuecat.purchases.kmp.ktx/SuccessfulLogin> // com.revenuecat.purchases.kmp.either/awaitLogInEither|awaitLogInEither@com.revenuecat.purchases.kmp.Purchases(kotlin.String){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.either/awaitLogOutEither(): arrow.core/Either<com.revenuecat.purchases.kmp.models/PurchasesError, com.revenuecat.purchases.kmp.models/CustomerInfo> // com.revenuecat.purchases.kmp.either/awaitLogOutEither|awaitLogOutEither@com.revenuecat.purchases.kmp.Purchases(){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.either/awaitOfferingsEither(): arrow.core/Either<com.revenuecat.purchases.kmp.models/PurchasesError, com.revenuecat.purchases.kmp.models/Offerings> // com.revenuecat.purchases.kmp.either/awaitOfferingsEither|awaitOfferingsEither@com.revenuecat.purchases.kmp.Purchases(){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.either/awaitPromotionalOfferEither(com.revenuecat.purchases.kmp.models/StoreProductDiscount, com.revenuecat.purchases.kmp.models/StoreProduct): arrow.core/Either<com.revenuecat.purchases.kmp.models/PurchasesError, com.revenuecat.purchases.kmp.models/PromotionalOffer> // com.revenuecat.purchases.kmp.either/awaitPromotionalOfferEither|awaitPromotionalOfferEither@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.StoreProductDiscount;com.revenuecat.purchases.kmp.models.StoreProduct){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.either/awaitPurchaseEither(com.revenuecat.purchases.kmp.models/Package, com.revenuecat.purchases.kmp.models/PromotionalOffer): arrow.core/Either<com.revenuecat.purchases.kmp.either/FailedPurchase, com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase> // com.revenuecat.purchases.kmp.either/awaitPurchaseEither|awaitPurchaseEither@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.Package;com.revenuecat.purchases.kmp.models.PromotionalOffer){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.either/awaitPurchaseEither(com.revenuecat.purchases.kmp.models/Package, com.revenuecat.purchases.kmp.models/WinBackOffer): arrow.core/Either<com.revenuecat.purchases.kmp.either/FailedPurchase, com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase> // com.revenuecat.purchases.kmp.either/awaitPurchaseEither|awaitPurchaseEither@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.Package;com.revenuecat.purchases.kmp.models.WinBackOffer){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.either/awaitPurchaseEither(com.revenuecat.purchases.kmp.models/Package, kotlin/Boolean? = ..., kotlin/String? = ..., com.revenuecat.purchases.kmp.models/GoogleReplacementMode = ...): arrow.core/Either<com.revenuecat.purchases.kmp.either/FailedPurchase, com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase> // com.revenuecat.purchases.kmp.either/awaitPurchaseEither|awaitPurchaseEither@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.Package;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.GoogleReplacementMode){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.either/awaitPurchaseEither(com.revenuecat.purchases.kmp.models/StoreProduct, com.revenuecat.purchases.kmp.models/PromotionalOffer): arrow.core/Either<com.revenuecat.purchases.kmp.either/FailedPurchase, com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase> // com.revenuecat.purchases.kmp.either/awaitPurchaseEither|awaitPurchaseEither@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.StoreProduct;com.revenuecat.purchases.kmp.models.PromotionalOffer){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.either/awaitPurchaseEither(com.revenuecat.purchases.kmp.models/StoreProduct, com.revenuecat.purchases.kmp.models/WinBackOffer): arrow.core/Either<com.revenuecat.purchases.kmp.either/FailedPurchase, com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase> // com.revenuecat.purchases.kmp.either/awaitPurchaseEither|awaitPurchaseEither@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.StoreProduct;com.revenuecat.purchases.kmp.models.WinBackOffer){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.either/awaitPurchaseEither(com.revenuecat.purchases.kmp.models/StoreProduct, kotlin/Boolean? = ..., kotlin/String? = ..., com.revenuecat.purchases.kmp.models/GoogleReplacementMode = ...): arrow.core/Either<com.revenuecat.purchases.kmp.either/FailedPurchase, com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase> // com.revenuecat.purchases.kmp.either/awaitPurchaseEither|awaitPurchaseEither@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.StoreProduct;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.GoogleReplacementMode){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.either/awaitPurchaseEither(com.revenuecat.purchases.kmp.models/SubscriptionOption, kotlin/Boolean? = ..., kotlin/String? = ..., com.revenuecat.purchases.kmp.models/GoogleReplacementMode = ...): arrow.core/Either<com.revenuecat.purchases.kmp.either/FailedPurchase, com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase> // com.revenuecat.purchases.kmp.either/awaitPurchaseEither|awaitPurchaseEither@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.SubscriptionOption;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.GoogleReplacementMode){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.either/awaitRestoreEither(): arrow.core/Either<com.revenuecat.purchases.kmp.models/PurchasesError, com.revenuecat.purchases.kmp.models/CustomerInfo> // com.revenuecat.purchases.kmp.either/awaitRestoreEither|awaitRestoreEither@com.revenuecat.purchases.kmp.Purchases(){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.either/awaitSyncAttributesAndOfferingsIfNeededEither(): arrow.core/Either<com.revenuecat.purchases.kmp.models/PurchasesError, com.revenuecat.purchases.kmp.models/Offerings> // com.revenuecat.purchases.kmp.either/awaitSyncAttributesAndOfferingsIfNeededEither|awaitSyncAttributesAndOfferingsIfNeededEither@com.revenuecat.purchases.kmp.Purchases(){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.either/awaitSyncPurchasesEither(): arrow.core/Either<com.revenuecat.purchases.kmp.models/PurchasesError, com.revenuecat.purchases.kmp.models/CustomerInfo> // com.revenuecat.purchases.kmp.either/awaitSyncPurchasesEither|awaitSyncPurchasesEither@com.revenuecat.purchases.kmp.Purchases(){}[0]
