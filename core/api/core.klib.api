// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.revenuecat.purchases:core>
abstract interface com.revenuecat.purchases.kmp.models/PurchasingData { // com.revenuecat.purchases.kmp.models/PurchasingData|null[0]
    abstract val productId // com.revenuecat.purchases.kmp.models/PurchasingData.productId|{}productId[0]
        abstract fun <get-productId>(): kotlin/String // com.revenuecat.purchases.kmp.models/PurchasingData.productId.<get-productId>|<get-productId>(){}[0]
    abstract val productType // com.revenuecat.purchases.kmp.models/PurchasingData.productType|{}productType[0]
        abstract fun <get-productType>(): com.revenuecat.purchases.kmp/ProductType // com.revenuecat.purchases.kmp.models/PurchasingData.productType.<get-productType>|<get-productType>(){}[0]
}
abstract interface com.revenuecat.purchases.kmp.models/SubscriptionOption { // com.revenuecat.purchases.kmp.models/SubscriptionOption|null[0]
    abstract val id // com.revenuecat.purchases.kmp.models/SubscriptionOption.id|{}id[0]
        abstract fun <get-id>(): kotlin/String // com.revenuecat.purchases.kmp.models/SubscriptionOption.id.<get-id>|<get-id>(){}[0]
    abstract val presentedOfferingContext // com.revenuecat.purchases.kmp.models/SubscriptionOption.presentedOfferingContext|{}presentedOfferingContext[0]
        abstract fun <get-presentedOfferingContext>(): cocoapods.PurchasesHybridCommon/RCPresentedOfferingContext? // com.revenuecat.purchases.kmp.models/SubscriptionOption.presentedOfferingContext.<get-presentedOfferingContext>|<get-presentedOfferingContext>(){}[0]
    abstract val presentedOfferingIdentifier // com.revenuecat.purchases.kmp.models/SubscriptionOption.presentedOfferingIdentifier|{}presentedOfferingIdentifier[0]
        abstract fun <get-presentedOfferingIdentifier>(): kotlin/String? // com.revenuecat.purchases.kmp.models/SubscriptionOption.presentedOfferingIdentifier.<get-presentedOfferingIdentifier>|<get-presentedOfferingIdentifier>(){}[0]
    abstract val pricingPhases // com.revenuecat.purchases.kmp.models/SubscriptionOption.pricingPhases|{}pricingPhases[0]
        abstract fun <get-pricingPhases>(): kotlin.collections/List<com.revenuecat.purchases.kmp.models/PricingPhase> // com.revenuecat.purchases.kmp.models/SubscriptionOption.pricingPhases.<get-pricingPhases>|<get-pricingPhases>(){}[0]
    abstract val purchasingData // com.revenuecat.purchases.kmp.models/SubscriptionOption.purchasingData|{}purchasingData[0]
        abstract fun <get-purchasingData>(): com.revenuecat.purchases.kmp.models/PurchasingData // com.revenuecat.purchases.kmp.models/SubscriptionOption.purchasingData.<get-purchasingData>|<get-purchasingData>(){}[0]
    abstract val tags // com.revenuecat.purchases.kmp.models/SubscriptionOption.tags|{}tags[0]
        abstract fun <get-tags>(): kotlin.collections/List<kotlin/String> // com.revenuecat.purchases.kmp.models/SubscriptionOption.tags.<get-tags>|<get-tags>(){}[0]
}
abstract interface com.revenuecat.purchases.kmp/LogHandler { // com.revenuecat.purchases.kmp/LogHandler|null[0]
    abstract fun d(kotlin/String, kotlin/String) // com.revenuecat.purchases.kmp/LogHandler.d|d(kotlin.String;kotlin.String){}[0]
    abstract fun e(kotlin/String, kotlin/String, kotlin/Throwable?) // com.revenuecat.purchases.kmp/LogHandler.e|e(kotlin.String;kotlin.String;kotlin.Throwable?){}[0]
    abstract fun i(kotlin/String, kotlin/String) // com.revenuecat.purchases.kmp/LogHandler.i|i(kotlin.String;kotlin.String){}[0]
    abstract fun v(kotlin/String, kotlin/String) // com.revenuecat.purchases.kmp/LogHandler.v|v(kotlin.String;kotlin.String){}[0]
    abstract fun w(kotlin/String, kotlin/String) // com.revenuecat.purchases.kmp/LogHandler.w|w(kotlin.String;kotlin.String){}[0]
}
abstract interface com.revenuecat.purchases.kmp/PurchasesDelegate { // com.revenuecat.purchases.kmp/PurchasesDelegate|null[0]
    abstract fun onCustomerInfoUpdated(cocoapods.PurchasesHybridCommon/RCCustomerInfo) // com.revenuecat.purchases.kmp/PurchasesDelegate.onCustomerInfoUpdated|onCustomerInfoUpdated(cocoapods.PurchasesHybridCommon.RCCustomerInfo){}[0]
    abstract fun onPurchasePromoProduct(cocoapods.PurchasesHybridCommon/RCStoreProduct, kotlin/Function2<kotlin/Function2<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Boolean, kotlin/Unit>, kotlin/Function2<cocoapods.PurchasesHybridCommon/RCStoreTransaction, cocoapods.PurchasesHybridCommon/RCCustomerInfo, kotlin/Unit>, kotlin/Unit>) // com.revenuecat.purchases.kmp/PurchasesDelegate.onPurchasePromoProduct|onPurchasePromoProduct(cocoapods.PurchasesHybridCommon.RCStoreProduct;kotlin.Function2<kotlin.Function2<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Boolean,kotlin.Unit>,kotlin.Function2<cocoapods.PurchasesHybridCommon.RCStoreTransaction,cocoapods.PurchasesHybridCommon.RCCustomerInfo,kotlin.Unit>,kotlin.Unit>){}[0]
}
abstract interface com.revenuecat.purchases.kmp/ReplacementMode { // com.revenuecat.purchases.kmp/ReplacementMode|null[0]
    abstract val name // com.revenuecat.purchases.kmp/ReplacementMode.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // com.revenuecat.purchases.kmp/ReplacementMode.name.<get-name>|<get-name>(){}[0]
}
final class com.revenuecat.purchases.kmp.i18n/Locale { // com.revenuecat.purchases.kmp.i18n/Locale|null[0]
    final object Companion { // com.revenuecat.purchases.kmp.i18n/Locale.Companion|null[0]
        final fun create(kotlin/String, kotlin/String): com.revenuecat.purchases.kmp.i18n/Locale // com.revenuecat.purchases.kmp.i18n/Locale.Companion.create|create(kotlin.String;kotlin.String){}[0]
        final val Default // com.revenuecat.purchases.kmp.i18n/Locale.Companion.Default|{}Default[0]
            final fun <get-Default>(): com.revenuecat.purchases.kmp.i18n/Locale // com.revenuecat.purchases.kmp.i18n/Locale.Companion.Default.<get-Default>|<get-Default>(){}[0]
    }
    final val countryCode // com.revenuecat.purchases.kmp.i18n/Locale.countryCode|{}countryCode[0]
        final fun <get-countryCode>(): kotlin/String // com.revenuecat.purchases.kmp.i18n/Locale.countryCode.<get-countryCode>|<get-countryCode>(){}[0]
    final val languageCode // com.revenuecat.purchases.kmp.i18n/Locale.languageCode|{}languageCode[0]
        final fun <get-languageCode>(): kotlin/String // com.revenuecat.purchases.kmp.i18n/Locale.languageCode.<get-languageCode>|<get-languageCode>(){}[0]
}
final class com.revenuecat.purchases.kmp.ktx/SuccessfulLogin { // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin|null[0]
    constructor <init>(cocoapods.PurchasesHybridCommon/RCCustomerInfo, kotlin/Boolean) // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.<init>|<init>(cocoapods.PurchasesHybridCommon.RCCustomerInfo;kotlin.Boolean){}[0]
    final fun component1(): cocoapods.PurchasesHybridCommon/RCCustomerInfo // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.component2|component2(){}[0]
    final fun copy(cocoapods.PurchasesHybridCommon/RCCustomerInfo =..., kotlin/Boolean =...): com.revenuecat.purchases.kmp.ktx/SuccessfulLogin // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.copy|copy(cocoapods.PurchasesHybridCommon.RCCustomerInfo;kotlin.Boolean){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.toString|toString(){}[0]
    final val created // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.created|{}created[0]
        final fun <get-created>(): kotlin/Boolean // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.created.<get-created>|<get-created>(){}[0]
    final val customerInfo // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.customerInfo|{}customerInfo[0]
        final fun <get-customerInfo>(): cocoapods.PurchasesHybridCommon/RCCustomerInfo // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.customerInfo.<get-customerInfo>|<get-customerInfo>(){}[0]
}
final class com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase { // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase|null[0]
    constructor <init>(cocoapods.PurchasesHybridCommon/RCStoreTransaction, cocoapods.PurchasesHybridCommon/RCCustomerInfo) // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.<init>|<init>(cocoapods.PurchasesHybridCommon.RCStoreTransaction;cocoapods.PurchasesHybridCommon.RCCustomerInfo){}[0]
    final fun component1(): cocoapods.PurchasesHybridCommon/RCStoreTransaction // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.component1|component1(){}[0]
    final fun component2(): cocoapods.PurchasesHybridCommon/RCCustomerInfo // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.component2|component2(){}[0]
    final fun copy(cocoapods.PurchasesHybridCommon/RCStoreTransaction =..., cocoapods.PurchasesHybridCommon/RCCustomerInfo =...): com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.copy|copy(cocoapods.PurchasesHybridCommon.RCStoreTransaction;cocoapods.PurchasesHybridCommon.RCCustomerInfo){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.toString|toString(){}[0]
    final val customerInfo // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.customerInfo|{}customerInfo[0]
        final fun <get-customerInfo>(): cocoapods.PurchasesHybridCommon/RCCustomerInfo // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.customerInfo.<get-customerInfo>|<get-customerInfo>(){}[0]
    final val storeTransaction // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.storeTransaction|{}storeTransaction[0]
        final fun <get-storeTransaction>(): cocoapods.PurchasesHybridCommon/RCStoreTransaction // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.storeTransaction.<get-storeTransaction>|<get-storeTransaction>(){}[0]
}
final class com.revenuecat.purchases.kmp.models/Price { // com.revenuecat.purchases.kmp.models/Price|null[0]
    constructor <init>(kotlin/String, kotlin/Long, kotlin/String) // com.revenuecat.purchases.kmp.models/Price.<init>|<init>(kotlin.String;kotlin.Long;kotlin.String){}[0]
    final fun component1(): kotlin/String // com.revenuecat.purchases.kmp.models/Price.component1|component1(){}[0]
    final fun component2(): kotlin/Long // com.revenuecat.purchases.kmp.models/Price.component2|component2(){}[0]
    final fun component3(): kotlin/String // com.revenuecat.purchases.kmp.models/Price.component3|component3(){}[0]
    final fun copy(kotlin/String =..., kotlin/Long =..., kotlin/String =...): com.revenuecat.purchases.kmp.models/Price // com.revenuecat.purchases.kmp.models/Price.copy|copy(kotlin.String;kotlin.Long;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.revenuecat.purchases.kmp.models/Price.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.revenuecat.purchases.kmp.models/Price.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.revenuecat.purchases.kmp.models/Price.toString|toString(){}[0]
    final val amountMicros // com.revenuecat.purchases.kmp.models/Price.amountMicros|{}amountMicros[0]
        final fun <get-amountMicros>(): kotlin/Long // com.revenuecat.purchases.kmp.models/Price.amountMicros.<get-amountMicros>|<get-amountMicros>(){}[0]
    final val currencyCode // com.revenuecat.purchases.kmp.models/Price.currencyCode|{}currencyCode[0]
        final fun <get-currencyCode>(): kotlin/String // com.revenuecat.purchases.kmp.models/Price.currencyCode.<get-currencyCode>|<get-currencyCode>(){}[0]
    final val formatted // com.revenuecat.purchases.kmp.models/Price.formatted|{}formatted[0]
        final fun <get-formatted>(): kotlin/String // com.revenuecat.purchases.kmp.models/Price.formatted.<get-formatted>|<get-formatted>(){}[0]
}
final class com.revenuecat.purchases.kmp.models/PricingPhase { // com.revenuecat.purchases.kmp.models/PricingPhase|null[0]
    constructor <init>(cocoapods.PurchasesHybridCommon/RCSubscriptionPeriod, com.revenuecat.purchases.kmp.models/RecurrenceMode, kotlin/Int?, com.revenuecat.purchases.kmp.models/Price, com.revenuecat.purchases.kmp.models/OfferPaymentMode?) // com.revenuecat.purchases.kmp.models/PricingPhase.<init>|<init>(cocoapods.PurchasesHybridCommon.RCSubscriptionPeriod;com.revenuecat.purchases.kmp.models.RecurrenceMode;kotlin.Int?;com.revenuecat.purchases.kmp.models.Price;com.revenuecat.purchases.kmp.models.OfferPaymentMode?){}[0]
    final fun component1(): cocoapods.PurchasesHybridCommon/RCSubscriptionPeriod // com.revenuecat.purchases.kmp.models/PricingPhase.component1|component1(){}[0]
    final fun component2(): com.revenuecat.purchases.kmp.models/RecurrenceMode // com.revenuecat.purchases.kmp.models/PricingPhase.component2|component2(){}[0]
    final fun component3(): kotlin/Int? // com.revenuecat.purchases.kmp.models/PricingPhase.component3|component3(){}[0]
    final fun component4(): com.revenuecat.purchases.kmp.models/Price // com.revenuecat.purchases.kmp.models/PricingPhase.component4|component4(){}[0]
    final fun component5(): com.revenuecat.purchases.kmp.models/OfferPaymentMode? // com.revenuecat.purchases.kmp.models/PricingPhase.component5|component5(){}[0]
    final fun copy(cocoapods.PurchasesHybridCommon/RCSubscriptionPeriod =..., com.revenuecat.purchases.kmp.models/RecurrenceMode =..., kotlin/Int? =..., com.revenuecat.purchases.kmp.models/Price =..., com.revenuecat.purchases.kmp.models/OfferPaymentMode? =...): com.revenuecat.purchases.kmp.models/PricingPhase // com.revenuecat.purchases.kmp.models/PricingPhase.copy|copy(cocoapods.PurchasesHybridCommon.RCSubscriptionPeriod;com.revenuecat.purchases.kmp.models.RecurrenceMode;kotlin.Int?;com.revenuecat.purchases.kmp.models.Price;com.revenuecat.purchases.kmp.models.OfferPaymentMode?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.revenuecat.purchases.kmp.models/PricingPhase.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.revenuecat.purchases.kmp.models/PricingPhase.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.revenuecat.purchases.kmp.models/PricingPhase.toString|toString(){}[0]
    final val billingCycleCount // com.revenuecat.purchases.kmp.models/PricingPhase.billingCycleCount|{}billingCycleCount[0]
        final fun <get-billingCycleCount>(): kotlin/Int? // com.revenuecat.purchases.kmp.models/PricingPhase.billingCycleCount.<get-billingCycleCount>|<get-billingCycleCount>(){}[0]
    final val billingPeriod // com.revenuecat.purchases.kmp.models/PricingPhase.billingPeriod|{}billingPeriod[0]
        final fun <get-billingPeriod>(): cocoapods.PurchasesHybridCommon/RCSubscriptionPeriod // com.revenuecat.purchases.kmp.models/PricingPhase.billingPeriod.<get-billingPeriod>|<get-billingPeriod>(){}[0]
    final val offerPaymentMode // com.revenuecat.purchases.kmp.models/PricingPhase.offerPaymentMode|{}offerPaymentMode[0]
        final fun <get-offerPaymentMode>(): com.revenuecat.purchases.kmp.models/OfferPaymentMode? // com.revenuecat.purchases.kmp.models/PricingPhase.offerPaymentMode.<get-offerPaymentMode>|<get-offerPaymentMode>(){}[0]
    final val price // com.revenuecat.purchases.kmp.models/PricingPhase.price|{}price[0]
        final fun <get-price>(): com.revenuecat.purchases.kmp.models/Price // com.revenuecat.purchases.kmp.models/PricingPhase.price.<get-price>|<get-price>(){}[0]
    final val recurrenceMode // com.revenuecat.purchases.kmp.models/PricingPhase.recurrenceMode|{}recurrenceMode[0]
        final fun <get-recurrenceMode>(): com.revenuecat.purchases.kmp.models/RecurrenceMode // com.revenuecat.purchases.kmp.models/PricingPhase.recurrenceMode.<get-recurrenceMode>|<get-recurrenceMode>(){}[0]
}
final class com.revenuecat.purchases.kmp.models/SubscriptionOptions { // com.revenuecat.purchases.kmp.models/SubscriptionOptions|null[0]
    final fun withTag(kotlin/String): kotlin.collections/List<com.revenuecat.purchases.kmp.models/SubscriptionOption> // com.revenuecat.purchases.kmp.models/SubscriptionOptions.withTag|withTag(kotlin.String){}[0]
    final val basePlan // com.revenuecat.purchases.kmp.models/SubscriptionOptions.basePlan|{}basePlan[0]
        final fun <get-basePlan>(): com.revenuecat.purchases.kmp.models/SubscriptionOption? // com.revenuecat.purchases.kmp.models/SubscriptionOptions.basePlan.<get-basePlan>|<get-basePlan>(){}[0]
    final val defaultOffer // com.revenuecat.purchases.kmp.models/SubscriptionOptions.defaultOffer|{}defaultOffer[0]
        final fun <get-defaultOffer>(): com.revenuecat.purchases.kmp.models/SubscriptionOption? // com.revenuecat.purchases.kmp.models/SubscriptionOptions.defaultOffer.<get-defaultOffer>|<get-defaultOffer>(){}[0]
    final val freeTrial // com.revenuecat.purchases.kmp.models/SubscriptionOptions.freeTrial|{}freeTrial[0]
        final fun <get-freeTrial>(): com.revenuecat.purchases.kmp.models/SubscriptionOption? // com.revenuecat.purchases.kmp.models/SubscriptionOptions.freeTrial.<get-freeTrial>|<get-freeTrial>(){}[0]
    final val introOffer // com.revenuecat.purchases.kmp.models/SubscriptionOptions.introOffer|{}introOffer[0]
        final fun <get-introOffer>(): com.revenuecat.purchases.kmp.models/SubscriptionOption? // com.revenuecat.purchases.kmp.models/SubscriptionOptions.introOffer.<get-introOffer>|<get-introOffer>(){}[0]
}
final class com.revenuecat.purchases.kmp.models/Transaction // com.revenuecat.purchases.kmp.models/Transaction|null[0]
final class com.revenuecat.purchases.kmp/DangerousSettings { // com.revenuecat.purchases.kmp/DangerousSettings|null[0]
    constructor <init>(kotlin/Boolean =...) // com.revenuecat.purchases.kmp/DangerousSettings.<init>|<init>(kotlin.Boolean){}[0]
    final fun component1(): kotlin/Boolean // com.revenuecat.purchases.kmp/DangerousSettings.component1|component1(){}[0]
    final fun copy(kotlin/Boolean =...): com.revenuecat.purchases.kmp/DangerousSettings // com.revenuecat.purchases.kmp/DangerousSettings.copy|copy(kotlin.Boolean){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.revenuecat.purchases.kmp/DangerousSettings.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.revenuecat.purchases.kmp/DangerousSettings.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.revenuecat.purchases.kmp/DangerousSettings.toString|toString(){}[0]
    final val autoSyncPurchases // com.revenuecat.purchases.kmp/DangerousSettings.autoSyncPurchases|{}autoSyncPurchases[0]
        final fun <get-autoSyncPurchases>(): kotlin/Boolean // com.revenuecat.purchases.kmp/DangerousSettings.autoSyncPurchases.<get-autoSyncPurchases>|<get-autoSyncPurchases>(){}[0]
}
final class com.revenuecat.purchases.kmp/Purchases { // com.revenuecat.purchases.kmp/Purchases|null[0]
    final fun close() // com.revenuecat.purchases.kmp/Purchases.close|close(){}[0]
    final fun collectDeviceIdentifiers() // com.revenuecat.purchases.kmp/Purchases.collectDeviceIdentifiers|collectDeviceIdentifiers(){}[0]
    final fun getCustomerInfo(com.revenuecat.purchases.kmp/CacheFetchPolicy =..., kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function1<cocoapods.PurchasesHybridCommon/RCCustomerInfo, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.getCustomerInfo|getCustomerInfo(com.revenuecat.purchases.kmp.CacheFetchPolicy;kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function1<cocoapods.PurchasesHybridCommon.RCCustomerInfo,kotlin.Unit>){}[0]
    final fun getOfferings(kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function1<cocoapods.PurchasesHybridCommon/RCOfferings, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.getOfferings|getOfferings(kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function1<cocoapods.PurchasesHybridCommon.RCOfferings,kotlin.Unit>){}[0]
    final fun getProducts(kotlin.collections/List<kotlin/String>, kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function1<kotlin.collections/List<cocoapods.PurchasesHybridCommon/RCStoreProduct>, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.getProducts|getProducts(kotlin.collections.List<kotlin.String>;kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function1<kotlin.collections.List<cocoapods.PurchasesHybridCommon.RCStoreProduct>,kotlin.Unit>){}[0]
    final fun getPromotionalOffer(cocoapods.PurchasesHybridCommon/RCStoreProductDiscount, cocoapods.PurchasesHybridCommon/RCStoreProduct, kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function1<cocoapods.PurchasesHybridCommon/RCPromotionalOffer, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.getPromotionalOffer|getPromotionalOffer(cocoapods.PurchasesHybridCommon.RCStoreProductDiscount;cocoapods.PurchasesHybridCommon.RCStoreProduct;kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function1<cocoapods.PurchasesHybridCommon.RCPromotionalOffer,kotlin.Unit>){}[0]
    final fun invalidateCustomerInfoCache() // com.revenuecat.purchases.kmp/Purchases.invalidateCustomerInfoCache|invalidateCustomerInfoCache(){}[0]
    final fun logIn(kotlin/String, kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function2<cocoapods.PurchasesHybridCommon/RCCustomerInfo, kotlin/Boolean, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.logIn|logIn(kotlin.String;kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function2<cocoapods.PurchasesHybridCommon.RCCustomerInfo,kotlin.Boolean,kotlin.Unit>){}[0]
    final fun logOut(kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function1<cocoapods.PurchasesHybridCommon/RCCustomerInfo, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.logOut|logOut(kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function1<cocoapods.PurchasesHybridCommon.RCCustomerInfo,kotlin.Unit>){}[0]
    final fun purchase(cocoapods.PurchasesHybridCommon/RCPackage, cocoapods.PurchasesHybridCommon/RCPromotionalOffer, kotlin/Function2<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Boolean, kotlin/Unit>, kotlin/Function2<cocoapods.PurchasesHybridCommon/RCStoreTransaction, cocoapods.PurchasesHybridCommon/RCCustomerInfo, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.purchase|purchase(cocoapods.PurchasesHybridCommon.RCPackage;cocoapods.PurchasesHybridCommon.RCPromotionalOffer;kotlin.Function2<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Boolean,kotlin.Unit>;kotlin.Function2<cocoapods.PurchasesHybridCommon.RCStoreTransaction,cocoapods.PurchasesHybridCommon.RCCustomerInfo,kotlin.Unit>){}[0]
    final fun purchase(cocoapods.PurchasesHybridCommon/RCPackage, kotlin/Function2<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Boolean, kotlin/Unit>, kotlin/Function2<cocoapods.PurchasesHybridCommon/RCStoreTransaction, cocoapods.PurchasesHybridCommon/RCCustomerInfo, kotlin/Unit>, kotlin/Boolean? =..., kotlin/String? =..., com.revenuecat.purchases.kmp.models/GoogleReplacementMode =...) // com.revenuecat.purchases.kmp/Purchases.purchase|purchase(cocoapods.PurchasesHybridCommon.RCPackage;kotlin.Function2<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Boolean,kotlin.Unit>;kotlin.Function2<cocoapods.PurchasesHybridCommon.RCStoreTransaction,cocoapods.PurchasesHybridCommon.RCCustomerInfo,kotlin.Unit>;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.GoogleReplacementMode){}[0]
    final fun purchase(cocoapods.PurchasesHybridCommon/RCStoreProduct, cocoapods.PurchasesHybridCommon/RCPromotionalOffer, kotlin/Function2<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Boolean, kotlin/Unit>, kotlin/Function2<cocoapods.PurchasesHybridCommon/RCStoreTransaction, cocoapods.PurchasesHybridCommon/RCCustomerInfo, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.purchase|purchase(cocoapods.PurchasesHybridCommon.RCStoreProduct;cocoapods.PurchasesHybridCommon.RCPromotionalOffer;kotlin.Function2<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Boolean,kotlin.Unit>;kotlin.Function2<cocoapods.PurchasesHybridCommon.RCStoreTransaction,cocoapods.PurchasesHybridCommon.RCCustomerInfo,kotlin.Unit>){}[0]
    final fun purchase(cocoapods.PurchasesHybridCommon/RCStoreProduct, kotlin/Function2<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Boolean, kotlin/Unit>, kotlin/Function2<cocoapods.PurchasesHybridCommon/RCStoreTransaction, cocoapods.PurchasesHybridCommon/RCCustomerInfo, kotlin/Unit>, kotlin/Boolean? =..., kotlin/String? =..., com.revenuecat.purchases.kmp.models/GoogleReplacementMode =...) // com.revenuecat.purchases.kmp/Purchases.purchase|purchase(cocoapods.PurchasesHybridCommon.RCStoreProduct;kotlin.Function2<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Boolean,kotlin.Unit>;kotlin.Function2<cocoapods.PurchasesHybridCommon.RCStoreTransaction,cocoapods.PurchasesHybridCommon.RCCustomerInfo,kotlin.Unit>;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.GoogleReplacementMode){}[0]
    final fun purchase(com.revenuecat.purchases.kmp.models/SubscriptionOption, kotlin/Function2<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Boolean, kotlin/Unit>, kotlin/Function2<cocoapods.PurchasesHybridCommon/RCStoreTransaction, cocoapods.PurchasesHybridCommon/RCCustomerInfo, kotlin/Unit>, kotlin/Boolean? =..., kotlin/String? =..., com.revenuecat.purchases.kmp.models/GoogleReplacementMode =...) // com.revenuecat.purchases.kmp/Purchases.purchase|purchase(com.revenuecat.purchases.kmp.models.SubscriptionOption;kotlin.Function2<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Boolean,kotlin.Unit>;kotlin.Function2<cocoapods.PurchasesHybridCommon.RCStoreTransaction,cocoapods.PurchasesHybridCommon.RCCustomerInfo,kotlin.Unit>;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.GoogleReplacementMode){}[0]
    final fun restorePurchases(kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function1<cocoapods.PurchasesHybridCommon/RCCustomerInfo, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.restorePurchases|restorePurchases(kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function1<cocoapods.PurchasesHybridCommon.RCCustomerInfo,kotlin.Unit>){}[0]
    final fun setAd(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setAd|setAd(kotlin.String?){}[0]
    final fun setAdGroup(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setAdGroup|setAdGroup(kotlin.String?){}[0]
    final fun setAdjustID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setAdjustID|setAdjustID(kotlin.String?){}[0]
    final fun setAirshipChannelID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setAirshipChannelID|setAirshipChannelID(kotlin.String?){}[0]
    final fun setAppsflyerID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setAppsflyerID|setAppsflyerID(kotlin.String?){}[0]
    final fun setAttributes(kotlin.collections/Map<kotlin/String, kotlin/String?>) // com.revenuecat.purchases.kmp/Purchases.setAttributes|setAttributes(kotlin.collections.Map<kotlin.String,kotlin.String?>){}[0]
    final fun setCampaign(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setCampaign|setCampaign(kotlin.String?){}[0]
    final fun setCleverTapID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setCleverTapID|setCleverTapID(kotlin.String?){}[0]
    final fun setCreative(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setCreative|setCreative(kotlin.String?){}[0]
    final fun setDisplayName(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setDisplayName|setDisplayName(kotlin.String?){}[0]
    final fun setEmail(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setEmail|setEmail(kotlin.String?){}[0]
    final fun setFBAnonymousID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setFBAnonymousID|setFBAnonymousID(kotlin.String?){}[0]
    final fun setFirebaseAppInstanceID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setFirebaseAppInstanceID|setFirebaseAppInstanceID(kotlin.String?){}[0]
    final fun setKeyword(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setKeyword|setKeyword(kotlin.String?){}[0]
    final fun setMediaSource(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setMediaSource|setMediaSource(kotlin.String?){}[0]
    final fun setMixpanelDistinctID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setMixpanelDistinctID|setMixpanelDistinctID(kotlin.String?){}[0]
    final fun setMparticleID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setMparticleID|setMparticleID(kotlin.String?){}[0]
    final fun setOnesignalID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setOnesignalID|setOnesignalID(kotlin.String?){}[0]
    final fun setOnesignalUserID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setOnesignalUserID|setOnesignalUserID(kotlin.String?){}[0]
    final fun setPhoneNumber(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setPhoneNumber|setPhoneNumber(kotlin.String?){}[0]
    final fun setPushToken(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setPushToken|setPushToken(kotlin.String?){}[0]
    final fun showInAppMessagesIfNeeded(kotlin.collections/List<com.revenuecat.purchases.kmp.models/StoreMessageType> =...) // com.revenuecat.purchases.kmp/Purchases.showInAppMessagesIfNeeded|showInAppMessagesIfNeeded(kotlin.collections.List<com.revenuecat.purchases.kmp.models.StoreMessageType>){}[0]
    final fun syncAmazonPurchase(kotlin/String, kotlin/String, kotlin/String, kotlin/String?, kotlin/Double?) // com.revenuecat.purchases.kmp/Purchases.syncAmazonPurchase|syncAmazonPurchase(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlin.Double?){}[0]
    final fun syncAttributesAndOfferingsIfNeeded(kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function1<cocoapods.PurchasesHybridCommon/RCOfferings, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.syncAttributesAndOfferingsIfNeeded|syncAttributesAndOfferingsIfNeeded(kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function1<cocoapods.PurchasesHybridCommon.RCOfferings,kotlin.Unit>){}[0]
    final fun syncPurchases(kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function1<cocoapods.PurchasesHybridCommon/RCCustomerInfo, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.syncPurchases|syncPurchases(kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function1<cocoapods.PurchasesHybridCommon.RCCustomerInfo,kotlin.Unit>){}[0]
    final object Companion { // com.revenuecat.purchases.kmp/Purchases.Companion|null[0]
        final fun canMakePayments(kotlin.collections/List<com.revenuecat.purchases.kmp.models/BillingFeature> =..., kotlin/Function1<kotlin/Boolean, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.Companion.canMakePayments|canMakePayments(kotlin.collections.List<com.revenuecat.purchases.kmp.models.BillingFeature>;kotlin.Function1<kotlin.Boolean,kotlin.Unit>){}[0]
        final fun configure(com.revenuecat.purchases.kmp/PurchasesConfiguration): com.revenuecat.purchases.kmp/Purchases // com.revenuecat.purchases.kmp/Purchases.Companion.configure|configure(com.revenuecat.purchases.kmp.PurchasesConfiguration){}[0]
        final val isConfigured // com.revenuecat.purchases.kmp/Purchases.Companion.isConfigured|{}isConfigured[0]
            final fun <get-isConfigured>(): kotlin/Boolean // com.revenuecat.purchases.kmp/Purchases.Companion.isConfigured.<get-isConfigured>|<get-isConfigured>(){}[0]
        final val sharedInstance // com.revenuecat.purchases.kmp/Purchases.Companion.sharedInstance|{}sharedInstance[0]
            final fun <get-sharedInstance>(): com.revenuecat.purchases.kmp/Purchases // com.revenuecat.purchases.kmp/Purchases.Companion.sharedInstance.<get-sharedInstance>|<get-sharedInstance>(){}[0]
        final var forceUniversalAppStore // com.revenuecat.purchases.kmp/Purchases.Companion.forceUniversalAppStore|{}forceUniversalAppStore[0]
            final fun <get-forceUniversalAppStore>(): kotlin/Boolean // com.revenuecat.purchases.kmp/Purchases.Companion.forceUniversalAppStore.<get-forceUniversalAppStore>|<get-forceUniversalAppStore>(){}[0]
            final fun <set-forceUniversalAppStore>(kotlin/Boolean) // com.revenuecat.purchases.kmp/Purchases.Companion.forceUniversalAppStore.<set-forceUniversalAppStore>|<set-forceUniversalAppStore>(kotlin.Boolean){}[0]
        final var logHandler // com.revenuecat.purchases.kmp/Purchases.Companion.logHandler|{}logHandler[0]
            final fun <get-logHandler>(): com.revenuecat.purchases.kmp/LogHandler // com.revenuecat.purchases.kmp/Purchases.Companion.logHandler.<get-logHandler>|<get-logHandler>(){}[0]
            final fun <set-logHandler>(com.revenuecat.purchases.kmp/LogHandler) // com.revenuecat.purchases.kmp/Purchases.Companion.logHandler.<set-logHandler>|<set-logHandler>(com.revenuecat.purchases.kmp.LogHandler){}[0]
        final var logLevel // com.revenuecat.purchases.kmp/Purchases.Companion.logLevel|{}logLevel[0]
            final fun <get-logLevel>(): com.revenuecat.purchases.kmp/LogLevel // com.revenuecat.purchases.kmp/Purchases.Companion.logLevel.<get-logLevel>|<get-logLevel>(){}[0]
            final fun <set-logLevel>(com.revenuecat.purchases.kmp/LogLevel) // com.revenuecat.purchases.kmp/Purchases.Companion.logLevel.<set-logLevel>|<set-logLevel>(com.revenuecat.purchases.kmp.LogLevel){}[0]
        final var proxyURL // com.revenuecat.purchases.kmp/Purchases.Companion.proxyURL|{}proxyURL[0]
            final fun <get-proxyURL>(): kotlin/String? // com.revenuecat.purchases.kmp/Purchases.Companion.proxyURL.<get-proxyURL>|<get-proxyURL>(){}[0]
            final fun <set-proxyURL>(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.Companion.proxyURL.<set-proxyURL>|<set-proxyURL>(kotlin.String?){}[0]
        final var simulatesAskToBuyInSandbox // com.revenuecat.purchases.kmp/Purchases.Companion.simulatesAskToBuyInSandbox|{}simulatesAskToBuyInSandbox[0]
            final fun <get-simulatesAskToBuyInSandbox>(): kotlin/Boolean // com.revenuecat.purchases.kmp/Purchases.Companion.simulatesAskToBuyInSandbox.<get-simulatesAskToBuyInSandbox>|<get-simulatesAskToBuyInSandbox>(){}[0]
            final fun <set-simulatesAskToBuyInSandbox>(kotlin/Boolean) // com.revenuecat.purchases.kmp/Purchases.Companion.simulatesAskToBuyInSandbox.<set-simulatesAskToBuyInSandbox>|<set-simulatesAskToBuyInSandbox>(kotlin.Boolean){}[0]
    }
    final val appUserID // com.revenuecat.purchases.kmp/Purchases.appUserID|{}appUserID[0]
        final fun <get-appUserID>(): kotlin/String // com.revenuecat.purchases.kmp/Purchases.appUserID.<get-appUserID>|<get-appUserID>(){}[0]
    final val isAnonymous // com.revenuecat.purchases.kmp/Purchases.isAnonymous|{}isAnonymous[0]
        final fun <get-isAnonymous>(): kotlin/Boolean // com.revenuecat.purchases.kmp/Purchases.isAnonymous.<get-isAnonymous>|<get-isAnonymous>(){}[0]
    final val store // com.revenuecat.purchases.kmp/Purchases.store|{}store[0]
        final fun <get-store>(): com.revenuecat.purchases.kmp/Store // com.revenuecat.purchases.kmp/Purchases.store.<get-store>|<get-store>(){}[0]
    final var delegate // com.revenuecat.purchases.kmp/Purchases.delegate|{}delegate[0]
        final fun <get-delegate>(): com.revenuecat.purchases.kmp/PurchasesDelegate? // com.revenuecat.purchases.kmp/Purchases.delegate.<get-delegate>|<get-delegate>(){}[0]
        final fun <set-delegate>(com.revenuecat.purchases.kmp/PurchasesDelegate?) // com.revenuecat.purchases.kmp/Purchases.delegate.<set-delegate>|<set-delegate>(com.revenuecat.purchases.kmp.PurchasesDelegate?){}[0]
    final var purchasesAreCompletedBy // com.revenuecat.purchases.kmp/Purchases.purchasesAreCompletedBy|{}purchasesAreCompletedBy[0]
        final fun <get-purchasesAreCompletedBy>(): com.revenuecat.purchases.kmp/PurchasesAreCompletedBy // com.revenuecat.purchases.kmp/Purchases.purchasesAreCompletedBy.<get-purchasesAreCompletedBy>|<get-purchasesAreCompletedBy>(){}[0]
        final fun <set-purchasesAreCompletedBy>(com.revenuecat.purchases.kmp/PurchasesAreCompletedBy) // com.revenuecat.purchases.kmp/Purchases.purchasesAreCompletedBy.<set-purchasesAreCompletedBy>|<set-purchasesAreCompletedBy>(com.revenuecat.purchases.kmp.PurchasesAreCompletedBy){}[0]
}
final class com.revenuecat.purchases.kmp/PurchasesConfiguration { // com.revenuecat.purchases.kmp/PurchasesConfiguration|null[0]
    final class Builder { // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder|null[0]
        constructor <init>(kotlin/String) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.<init>|<init>(kotlin.String){}[0]
        final fun apiKey(kotlin/String): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.apiKey|apiKey(kotlin.String){}[0]
        final fun appUserId(kotlin/String): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.appUserId|appUserId(kotlin.String){}[0]
        final fun build(): com.revenuecat.purchases.kmp/PurchasesConfiguration // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.build|build(){}[0]
        final fun dangerousSettings(com.revenuecat.purchases.kmp/DangerousSettings): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.dangerousSettings|dangerousSettings(com.revenuecat.purchases.kmp.DangerousSettings){}[0]
        final fun diagnosticsEnabled(kotlin/Boolean): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.diagnosticsEnabled|diagnosticsEnabled(kotlin.Boolean){}[0]
        final fun purchasesAreCompletedBy(com.revenuecat.purchases.kmp/PurchasesAreCompletedBy): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.purchasesAreCompletedBy|purchasesAreCompletedBy(com.revenuecat.purchases.kmp.PurchasesAreCompletedBy){}[0]
        final fun showInAppMessagesAutomatically(kotlin/Boolean): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.showInAppMessagesAutomatically|showInAppMessagesAutomatically(kotlin.Boolean){}[0]
        final fun store(com.revenuecat.purchases.kmp/Store?): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.store|store(com.revenuecat.purchases.kmp.Store?){}[0]
        final fun userDefaultsSuiteName(kotlin/String?): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.userDefaultsSuiteName|userDefaultsSuiteName(kotlin.String?){}[0]
        final fun verificationMode(com.revenuecat.purchases.kmp/EntitlementVerificationMode): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.verificationMode|verificationMode(com.revenuecat.purchases.kmp.EntitlementVerificationMode){}[0]
        final var apiKey // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.apiKey|{}apiKey[0]
            final fun <get-apiKey>(): kotlin/String // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.apiKey.<get-apiKey>|<get-apiKey>(){}[0]
            final fun <set-apiKey>(kotlin/String) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.apiKey.<set-apiKey>|<set-apiKey>(kotlin.String){}[0]
        final var appUserId // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.appUserId|{}appUserId[0]
            final fun <get-appUserId>(): kotlin/String? // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.appUserId.<get-appUserId>|<get-appUserId>(){}[0]
            final fun <set-appUserId>(kotlin/String?) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.appUserId.<set-appUserId>|<set-appUserId>(kotlin.String?){}[0]
        final var dangerousSettings // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.dangerousSettings|{}dangerousSettings[0]
            final fun <get-dangerousSettings>(): com.revenuecat.purchases.kmp/DangerousSettings // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.dangerousSettings.<get-dangerousSettings>|<get-dangerousSettings>(){}[0]
            final fun <set-dangerousSettings>(com.revenuecat.purchases.kmp/DangerousSettings) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.dangerousSettings.<set-dangerousSettings>|<set-dangerousSettings>(com.revenuecat.purchases.kmp.DangerousSettings){}[0]
        final var diagnosticsEnabled // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.diagnosticsEnabled|{}diagnosticsEnabled[0]
            final fun <get-diagnosticsEnabled>(): kotlin/Boolean // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.diagnosticsEnabled.<get-diagnosticsEnabled>|<get-diagnosticsEnabled>(){}[0]
            final fun <set-diagnosticsEnabled>(kotlin/Boolean) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.diagnosticsEnabled.<set-diagnosticsEnabled>|<set-diagnosticsEnabled>(kotlin.Boolean){}[0]
        final var purchasesAreCompletedBy // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.purchasesAreCompletedBy|{}purchasesAreCompletedBy[0]
            final fun <get-purchasesAreCompletedBy>(): com.revenuecat.purchases.kmp/PurchasesAreCompletedBy // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.purchasesAreCompletedBy.<get-purchasesAreCompletedBy>|<get-purchasesAreCompletedBy>(){}[0]
            final fun <set-purchasesAreCompletedBy>(com.revenuecat.purchases.kmp/PurchasesAreCompletedBy) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.purchasesAreCompletedBy.<set-purchasesAreCompletedBy>|<set-purchasesAreCompletedBy>(com.revenuecat.purchases.kmp.PurchasesAreCompletedBy){}[0]
        final var showInAppMessagesAutomatically // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.showInAppMessagesAutomatically|{}showInAppMessagesAutomatically[0]
            final fun <get-showInAppMessagesAutomatically>(): kotlin/Boolean // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.showInAppMessagesAutomatically.<get-showInAppMessagesAutomatically>|<get-showInAppMessagesAutomatically>(){}[0]
            final fun <set-showInAppMessagesAutomatically>(kotlin/Boolean) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.showInAppMessagesAutomatically.<set-showInAppMessagesAutomatically>|<set-showInAppMessagesAutomatically>(kotlin.Boolean){}[0]
        final var store // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.store|{}store[0]
            final fun <get-store>(): com.revenuecat.purchases.kmp/Store? // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.store.<get-store>|<get-store>(){}[0]
            final fun <set-store>(com.revenuecat.purchases.kmp/Store?) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.store.<set-store>|<set-store>(com.revenuecat.purchases.kmp.Store?){}[0]
        final var userDefaultsSuiteName // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.userDefaultsSuiteName|{}userDefaultsSuiteName[0]
            final fun <get-userDefaultsSuiteName>(): kotlin/String? // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.userDefaultsSuiteName.<get-userDefaultsSuiteName>|<get-userDefaultsSuiteName>(){}[0]
            final fun <set-userDefaultsSuiteName>(kotlin/String?) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.userDefaultsSuiteName.<set-userDefaultsSuiteName>|<set-userDefaultsSuiteName>(kotlin.String?){}[0]
        final var verificationMode // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.verificationMode|{}verificationMode[0]
            final fun <get-verificationMode>(): com.revenuecat.purchases.kmp/EntitlementVerificationMode // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.verificationMode.<get-verificationMode>|<get-verificationMode>(){}[0]
            final fun <set-verificationMode>(com.revenuecat.purchases.kmp/EntitlementVerificationMode) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.verificationMode.<set-verificationMode>|<set-verificationMode>(com.revenuecat.purchases.kmp.EntitlementVerificationMode){}[0]
    }
    final fun toString(): kotlin/String // com.revenuecat.purchases.kmp/PurchasesConfiguration.toString|toString(){}[0]
    final val apiKey // com.revenuecat.purchases.kmp/PurchasesConfiguration.apiKey|{}apiKey[0]
        final fun <get-apiKey>(): kotlin/String // com.revenuecat.purchases.kmp/PurchasesConfiguration.apiKey.<get-apiKey>|<get-apiKey>(){}[0]
    final val appUserId // com.revenuecat.purchases.kmp/PurchasesConfiguration.appUserId|{}appUserId[0]
        final fun <get-appUserId>(): kotlin/String? // com.revenuecat.purchases.kmp/PurchasesConfiguration.appUserId.<get-appUserId>|<get-appUserId>(){}[0]
    final val dangerousSettings // com.revenuecat.purchases.kmp/PurchasesConfiguration.dangerousSettings|{}dangerousSettings[0]
        final fun <get-dangerousSettings>(): com.revenuecat.purchases.kmp/DangerousSettings // com.revenuecat.purchases.kmp/PurchasesConfiguration.dangerousSettings.<get-dangerousSettings>|<get-dangerousSettings>(){}[0]
    final val diagnosticsEnabled // com.revenuecat.purchases.kmp/PurchasesConfiguration.diagnosticsEnabled|{}diagnosticsEnabled[0]
        final fun <get-diagnosticsEnabled>(): kotlin/Boolean // com.revenuecat.purchases.kmp/PurchasesConfiguration.diagnosticsEnabled.<get-diagnosticsEnabled>|<get-diagnosticsEnabled>(){}[0]
    final val purchasesAreCompletedBy // com.revenuecat.purchases.kmp/PurchasesConfiguration.purchasesAreCompletedBy|{}purchasesAreCompletedBy[0]
        final fun <get-purchasesAreCompletedBy>(): com.revenuecat.purchases.kmp/PurchasesAreCompletedBy // com.revenuecat.purchases.kmp/PurchasesConfiguration.purchasesAreCompletedBy.<get-purchasesAreCompletedBy>|<get-purchasesAreCompletedBy>(){}[0]
    final val showInAppMessagesAutomatically // com.revenuecat.purchases.kmp/PurchasesConfiguration.showInAppMessagesAutomatically|{}showInAppMessagesAutomatically[0]
        final fun <get-showInAppMessagesAutomatically>(): kotlin/Boolean // com.revenuecat.purchases.kmp/PurchasesConfiguration.showInAppMessagesAutomatically.<get-showInAppMessagesAutomatically>|<get-showInAppMessagesAutomatically>(){}[0]
    final val store // com.revenuecat.purchases.kmp/PurchasesConfiguration.store|{}store[0]
        final fun <get-store>(): com.revenuecat.purchases.kmp/Store? // com.revenuecat.purchases.kmp/PurchasesConfiguration.store.<get-store>|<get-store>(){}[0]
    final val userDefaultsSuiteName // com.revenuecat.purchases.kmp/PurchasesConfiguration.userDefaultsSuiteName|{}userDefaultsSuiteName[0]
        final fun <get-userDefaultsSuiteName>(): kotlin/String? // com.revenuecat.purchases.kmp/PurchasesConfiguration.userDefaultsSuiteName.<get-userDefaultsSuiteName>|<get-userDefaultsSuiteName>(){}[0]
    final val verificationMode // com.revenuecat.purchases.kmp/PurchasesConfiguration.verificationMode|{}verificationMode[0]
        final fun <get-verificationMode>(): com.revenuecat.purchases.kmp/EntitlementVerificationMode // com.revenuecat.purchases.kmp/PurchasesConfiguration.verificationMode.<get-verificationMode>|<get-verificationMode>(){}[0]
}
final class com.revenuecat.purchases.kmp/PurchasesError { // com.revenuecat.purchases.kmp/PurchasesError|null[0]
    constructor <init>(com.revenuecat.purchases.kmp/PurchasesErrorCode, kotlin/String? =...) // com.revenuecat.purchases.kmp/PurchasesError.<init>|<init>(com.revenuecat.purchases.kmp.PurchasesErrorCode;kotlin.String?){}[0]
    final fun toString(): kotlin/String // com.revenuecat.purchases.kmp/PurchasesError.toString|toString(){}[0]
    final val code // com.revenuecat.purchases.kmp/PurchasesError.code|{}code[0]
        final fun <get-code>(): com.revenuecat.purchases.kmp/PurchasesErrorCode // com.revenuecat.purchases.kmp/PurchasesError.code.<get-code>|<get-code>(){}[0]
    final val message // com.revenuecat.purchases.kmp/PurchasesError.message|{}message[0]
        final fun <get-message>(): kotlin/String // com.revenuecat.purchases.kmp/PurchasesError.message.<get-message>|<get-message>(){}[0]
    final val underlyingErrorMessage // com.revenuecat.purchases.kmp/PurchasesError.underlyingErrorMessage|{}underlyingErrorMessage[0]
        final fun <get-underlyingErrorMessage>(): kotlin/String? // com.revenuecat.purchases.kmp/PurchasesError.underlyingErrorMessage.<get-underlyingErrorMessage>|<get-underlyingErrorMessage>(){}[0]
}
final class com.revenuecat.purchases.kmp/PurchasesTransactionException : com.revenuecat.purchases.kmp/PurchasesException { // com.revenuecat.purchases.kmp/PurchasesTransactionException|null[0]
    constructor <init>(com.revenuecat.purchases.kmp/PurchasesError, kotlin/Boolean) // com.revenuecat.purchases.kmp/PurchasesTransactionException.<init>|<init>(com.revenuecat.purchases.kmp.PurchasesError;kotlin.Boolean){}[0]
    final val userCancelled // com.revenuecat.purchases.kmp/PurchasesTransactionException.userCancelled|{}userCancelled[0]
        final fun <get-userCancelled>(): kotlin/Boolean // com.revenuecat.purchases.kmp/PurchasesTransactionException.userCancelled.<get-userCancelled>|<get-userCancelled>(){}[0]
}
final enum class com.revenuecat.purchases.kmp.models/BillingFeature : kotlin/Enum<com.revenuecat.purchases.kmp.models/BillingFeature> { // com.revenuecat.purchases.kmp.models/BillingFeature|null[0]
    enum entry PRICE_CHANGE_CONFIRMATION // com.revenuecat.purchases.kmp.models/BillingFeature.PRICE_CHANGE_CONFIRMATION|null[0]
    enum entry SUBSCRIPTIONS // com.revenuecat.purchases.kmp.models/BillingFeature.SUBSCRIPTIONS|null[0]
    enum entry SUBSCRIPTIONS_UPDATE // com.revenuecat.purchases.kmp.models/BillingFeature.SUBSCRIPTIONS_UPDATE|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp.models/BillingFeature // com.revenuecat.purchases.kmp.models/BillingFeature.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp.models/BillingFeature> // com.revenuecat.purchases.kmp.models/BillingFeature.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp.models/BillingFeature.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp.models/BillingFeature> // com.revenuecat.purchases.kmp.models/BillingFeature.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp.models/DiscountPaymentMode : kotlin/Enum<com.revenuecat.purchases.kmp.models/DiscountPaymentMode> { // com.revenuecat.purchases.kmp.models/DiscountPaymentMode|null[0]
    enum entry FREE_TRIAL // com.revenuecat.purchases.kmp.models/DiscountPaymentMode.FREE_TRIAL|null[0]
    enum entry PAY_AS_YOU_GO // com.revenuecat.purchases.kmp.models/DiscountPaymentMode.PAY_AS_YOU_GO|null[0]
    enum entry PAY_UP_FRONT // com.revenuecat.purchases.kmp.models/DiscountPaymentMode.PAY_UP_FRONT|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp.models/DiscountPaymentMode // com.revenuecat.purchases.kmp.models/DiscountPaymentMode.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp.models/DiscountPaymentMode> // com.revenuecat.purchases.kmp.models/DiscountPaymentMode.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp.models/DiscountPaymentMode.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp.models/DiscountPaymentMode> // com.revenuecat.purchases.kmp.models/DiscountPaymentMode.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp.models/DiscountType : kotlin/Enum<com.revenuecat.purchases.kmp.models/DiscountType> { // com.revenuecat.purchases.kmp.models/DiscountType|null[0]
    enum entry INTRODUCTORY // com.revenuecat.purchases.kmp.models/DiscountType.INTRODUCTORY|null[0]
    enum entry PROMOTIONAL // com.revenuecat.purchases.kmp.models/DiscountType.PROMOTIONAL|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp.models/DiscountType // com.revenuecat.purchases.kmp.models/DiscountType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp.models/DiscountType> // com.revenuecat.purchases.kmp.models/DiscountType.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp.models/DiscountType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp.models/DiscountType> // com.revenuecat.purchases.kmp.models/DiscountType.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp.models/GoogleReplacementMode : com.revenuecat.purchases.kmp/ReplacementMode, kotlin/Enum<com.revenuecat.purchases.kmp.models/GoogleReplacementMode> { // com.revenuecat.purchases.kmp.models/GoogleReplacementMode|null[0]
    enum entry CHARGE_FULL_PRICE // com.revenuecat.purchases.kmp.models/GoogleReplacementMode.CHARGE_FULL_PRICE|null[0]
    enum entry CHARGE_PRORATED_PRICE // com.revenuecat.purchases.kmp.models/GoogleReplacementMode.CHARGE_PRORATED_PRICE|null[0]
    enum entry WITHOUT_PRORATION // com.revenuecat.purchases.kmp.models/GoogleReplacementMode.WITHOUT_PRORATION|null[0]
    enum entry WITH_TIME_PRORATION // com.revenuecat.purchases.kmp.models/GoogleReplacementMode.WITH_TIME_PRORATION|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp.models/GoogleReplacementMode // com.revenuecat.purchases.kmp.models/GoogleReplacementMode.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp.models/GoogleReplacementMode> // com.revenuecat.purchases.kmp.models/GoogleReplacementMode.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp.models/GoogleReplacementMode.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp.models/GoogleReplacementMode> // com.revenuecat.purchases.kmp.models/GoogleReplacementMode.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp.models/OfferPaymentMode : kotlin/Enum<com.revenuecat.purchases.kmp.models/OfferPaymentMode> { // com.revenuecat.purchases.kmp.models/OfferPaymentMode|null[0]
    enum entry DISCOUNTED_RECURRING_PAYMENT // com.revenuecat.purchases.kmp.models/OfferPaymentMode.DISCOUNTED_RECURRING_PAYMENT|null[0]
    enum entry FREE_TRIAL // com.revenuecat.purchases.kmp.models/OfferPaymentMode.FREE_TRIAL|null[0]
    enum entry SINGLE_PAYMENT // com.revenuecat.purchases.kmp.models/OfferPaymentMode.SINGLE_PAYMENT|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp.models/OfferPaymentMode // com.revenuecat.purchases.kmp.models/OfferPaymentMode.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp.models/OfferPaymentMode> // com.revenuecat.purchases.kmp.models/OfferPaymentMode.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp.models/OfferPaymentMode.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp.models/OfferPaymentMode> // com.revenuecat.purchases.kmp.models/OfferPaymentMode.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp.models/PeriodUnit : kotlin/Enum<com.revenuecat.purchases.kmp.models/PeriodUnit> { // com.revenuecat.purchases.kmp.models/PeriodUnit|null[0]
    enum entry DAY // com.revenuecat.purchases.kmp.models/PeriodUnit.DAY|null[0]
    enum entry MONTH // com.revenuecat.purchases.kmp.models/PeriodUnit.MONTH|null[0]
    enum entry UNKNOWN // com.revenuecat.purchases.kmp.models/PeriodUnit.UNKNOWN|null[0]
    enum entry WEEK // com.revenuecat.purchases.kmp.models/PeriodUnit.WEEK|null[0]
    enum entry YEAR // com.revenuecat.purchases.kmp.models/PeriodUnit.YEAR|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp.models/PeriodUnit // com.revenuecat.purchases.kmp.models/PeriodUnit.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp.models/PeriodUnit> // com.revenuecat.purchases.kmp.models/PeriodUnit.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp.models/PeriodUnit.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp.models/PeriodUnit> // com.revenuecat.purchases.kmp.models/PeriodUnit.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp.models/ProductCategory : kotlin/Enum<com.revenuecat.purchases.kmp.models/ProductCategory> { // com.revenuecat.purchases.kmp.models/ProductCategory|null[0]
    enum entry NON_SUBSCRIPTION // com.revenuecat.purchases.kmp.models/ProductCategory.NON_SUBSCRIPTION|null[0]
    enum entry SUBSCRIPTION // com.revenuecat.purchases.kmp.models/ProductCategory.SUBSCRIPTION|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp.models/ProductCategory // com.revenuecat.purchases.kmp.models/ProductCategory.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp.models/ProductCategory> // com.revenuecat.purchases.kmp.models/ProductCategory.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp.models/ProductCategory.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp.models/ProductCategory> // com.revenuecat.purchases.kmp.models/ProductCategory.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp.models/RecurrenceMode : kotlin/Enum<com.revenuecat.purchases.kmp.models/RecurrenceMode> { // com.revenuecat.purchases.kmp.models/RecurrenceMode|null[0]
    enum entry FINITE_RECURRING // com.revenuecat.purchases.kmp.models/RecurrenceMode.FINITE_RECURRING|null[0]
    enum entry INFINITE_RECURRING // com.revenuecat.purchases.kmp.models/RecurrenceMode.INFINITE_RECURRING|null[0]
    enum entry NON_RECURRING // com.revenuecat.purchases.kmp.models/RecurrenceMode.NON_RECURRING|null[0]
    enum entry UNKNOWN // com.revenuecat.purchases.kmp.models/RecurrenceMode.UNKNOWN|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp.models/RecurrenceMode // com.revenuecat.purchases.kmp.models/RecurrenceMode.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp.models/RecurrenceMode> // com.revenuecat.purchases.kmp.models/RecurrenceMode.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp.models/RecurrenceMode.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp.models/RecurrenceMode> // com.revenuecat.purchases.kmp.models/RecurrenceMode.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp.models/StoreMessageType : kotlin/Enum<com.revenuecat.purchases.kmp.models/StoreMessageType> { // com.revenuecat.purchases.kmp.models/StoreMessageType|null[0]
    enum entry BILLING_ISSUES // com.revenuecat.purchases.kmp.models/StoreMessageType.BILLING_ISSUES|null[0]
    enum entry GENERIC // com.revenuecat.purchases.kmp.models/StoreMessageType.GENERIC|null[0]
    enum entry PRICE_INCREASE_CONSENT // com.revenuecat.purchases.kmp.models/StoreMessageType.PRICE_INCREASE_CONSENT|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp.models/StoreMessageType // com.revenuecat.purchases.kmp.models/StoreMessageType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp.models/StoreMessageType> // com.revenuecat.purchases.kmp.models/StoreMessageType.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp.models/StoreMessageType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp.models/StoreMessageType> // com.revenuecat.purchases.kmp.models/StoreMessageType.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp/CacheFetchPolicy : kotlin/Enum<com.revenuecat.purchases.kmp/CacheFetchPolicy> { // com.revenuecat.purchases.kmp/CacheFetchPolicy|null[0]
    enum entry CACHED_OR_FETCHED // com.revenuecat.purchases.kmp/CacheFetchPolicy.CACHED_OR_FETCHED|null[0]
    enum entry CACHE_ONLY // com.revenuecat.purchases.kmp/CacheFetchPolicy.CACHE_ONLY|null[0]
    enum entry FETCH_CURRENT // com.revenuecat.purchases.kmp/CacheFetchPolicy.FETCH_CURRENT|null[0]
    enum entry NOT_STALE_CACHED_OR_CURRENT // com.revenuecat.purchases.kmp/CacheFetchPolicy.NOT_STALE_CACHED_OR_CURRENT|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp/CacheFetchPolicy // com.revenuecat.purchases.kmp/CacheFetchPolicy.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp/CacheFetchPolicy> // com.revenuecat.purchases.kmp/CacheFetchPolicy.values|values#static(){}[0]
    final object Companion { // com.revenuecat.purchases.kmp/CacheFetchPolicy.Companion|null[0]
        final fun default(): com.revenuecat.purchases.kmp/CacheFetchPolicy // com.revenuecat.purchases.kmp/CacheFetchPolicy.Companion.default|default(){}[0]
    }
    final val entries // com.revenuecat.purchases.kmp/CacheFetchPolicy.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp/CacheFetchPolicy> // com.revenuecat.purchases.kmp/CacheFetchPolicy.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp/EntitlementVerificationMode : kotlin/Enum<com.revenuecat.purchases.kmp/EntitlementVerificationMode> { // com.revenuecat.purchases.kmp/EntitlementVerificationMode|null[0]
    enum entry DISABLED // com.revenuecat.purchases.kmp/EntitlementVerificationMode.DISABLED|null[0]
    enum entry INFORMATIONAL // com.revenuecat.purchases.kmp/EntitlementVerificationMode.INFORMATIONAL|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp/EntitlementVerificationMode // com.revenuecat.purchases.kmp/EntitlementVerificationMode.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp/EntitlementVerificationMode> // com.revenuecat.purchases.kmp/EntitlementVerificationMode.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp/EntitlementVerificationMode.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp/EntitlementVerificationMode> // com.revenuecat.purchases.kmp/EntitlementVerificationMode.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp/LogLevel : kotlin/Enum<com.revenuecat.purchases.kmp/LogLevel> { // com.revenuecat.purchases.kmp/LogLevel|null[0]
    enum entry DEBUG // com.revenuecat.purchases.kmp/LogLevel.DEBUG|null[0]
    enum entry ERROR // com.revenuecat.purchases.kmp/LogLevel.ERROR|null[0]
    enum entry INFO // com.revenuecat.purchases.kmp/LogLevel.INFO|null[0]
    enum entry VERBOSE // com.revenuecat.purchases.kmp/LogLevel.VERBOSE|null[0]
    enum entry WARN // com.revenuecat.purchases.kmp/LogLevel.WARN|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp/LogLevel // com.revenuecat.purchases.kmp/LogLevel.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp/LogLevel> // com.revenuecat.purchases.kmp/LogLevel.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp/LogLevel.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp/LogLevel> // com.revenuecat.purchases.kmp/LogLevel.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp/OwnershipType : kotlin/Enum<com.revenuecat.purchases.kmp/OwnershipType> { // com.revenuecat.purchases.kmp/OwnershipType|null[0]
    enum entry FAMILY_SHARED // com.revenuecat.purchases.kmp/OwnershipType.FAMILY_SHARED|null[0]
    enum entry PURCHASED // com.revenuecat.purchases.kmp/OwnershipType.PURCHASED|null[0]
    enum entry UNKNOWN // com.revenuecat.purchases.kmp/OwnershipType.UNKNOWN|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp/OwnershipType // com.revenuecat.purchases.kmp/OwnershipType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp/OwnershipType> // com.revenuecat.purchases.kmp/OwnershipType.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp/OwnershipType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp/OwnershipType> // com.revenuecat.purchases.kmp/OwnershipType.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp/PackageType : kotlin/Enum<com.revenuecat.purchases.kmp/PackageType> { // com.revenuecat.purchases.kmp/PackageType|null[0]
    enum entry ANNUAL // com.revenuecat.purchases.kmp/PackageType.ANNUAL|null[0]
    enum entry CUSTOM // com.revenuecat.purchases.kmp/PackageType.CUSTOM|null[0]
    enum entry LIFETIME // com.revenuecat.purchases.kmp/PackageType.LIFETIME|null[0]
    enum entry MONTHLY // com.revenuecat.purchases.kmp/PackageType.MONTHLY|null[0]
    enum entry SIX_MONTH // com.revenuecat.purchases.kmp/PackageType.SIX_MONTH|null[0]
    enum entry THREE_MONTH // com.revenuecat.purchases.kmp/PackageType.THREE_MONTH|null[0]
    enum entry TWO_MONTH // com.revenuecat.purchases.kmp/PackageType.TWO_MONTH|null[0]
    enum entry UNKNOWN // com.revenuecat.purchases.kmp/PackageType.UNKNOWN|null[0]
    enum entry WEEKLY // com.revenuecat.purchases.kmp/PackageType.WEEKLY|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp/PackageType // com.revenuecat.purchases.kmp/PackageType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp/PackageType> // com.revenuecat.purchases.kmp/PackageType.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp/PackageType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp/PackageType> // com.revenuecat.purchases.kmp/PackageType.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp/PeriodType : kotlin/Enum<com.revenuecat.purchases.kmp/PeriodType> { // com.revenuecat.purchases.kmp/PeriodType|null[0]
    enum entry INTRO // com.revenuecat.purchases.kmp/PeriodType.INTRO|null[0]
    enum entry NORMAL // com.revenuecat.purchases.kmp/PeriodType.NORMAL|null[0]
    enum entry TRIAL // com.revenuecat.purchases.kmp/PeriodType.TRIAL|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp/PeriodType // com.revenuecat.purchases.kmp/PeriodType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp/PeriodType> // com.revenuecat.purchases.kmp/PeriodType.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp/PeriodType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp/PeriodType> // com.revenuecat.purchases.kmp/PeriodType.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp/ProductType : kotlin/Enum<com.revenuecat.purchases.kmp/ProductType> { // com.revenuecat.purchases.kmp/ProductType|null[0]
    enum entry INAPP // com.revenuecat.purchases.kmp/ProductType.INAPP|null[0]
    enum entry SUBS // com.revenuecat.purchases.kmp/ProductType.SUBS|null[0]
    enum entry UNKNOWN // com.revenuecat.purchases.kmp/ProductType.UNKNOWN|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp/ProductType // com.revenuecat.purchases.kmp/ProductType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp/ProductType> // com.revenuecat.purchases.kmp/ProductType.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp/ProductType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp/ProductType> // com.revenuecat.purchases.kmp/ProductType.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp/PurchasesAreCompletedBy : kotlin/Enum<com.revenuecat.purchases.kmp/PurchasesAreCompletedBy> { // com.revenuecat.purchases.kmp/PurchasesAreCompletedBy|null[0]
    enum entry MY_APP // com.revenuecat.purchases.kmp/PurchasesAreCompletedBy.MY_APP|null[0]
    enum entry REVENUECAT // com.revenuecat.purchases.kmp/PurchasesAreCompletedBy.REVENUECAT|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp/PurchasesAreCompletedBy // com.revenuecat.purchases.kmp/PurchasesAreCompletedBy.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp/PurchasesAreCompletedBy> // com.revenuecat.purchases.kmp/PurchasesAreCompletedBy.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp/PurchasesAreCompletedBy.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp/PurchasesAreCompletedBy> // com.revenuecat.purchases.kmp/PurchasesAreCompletedBy.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp/PurchasesErrorCode : kotlin/Enum<com.revenuecat.purchases.kmp/PurchasesErrorCode> { // com.revenuecat.purchases.kmp/PurchasesErrorCode|null[0]
    enum entry ApiEndpointBlocked // com.revenuecat.purchases.kmp/PurchasesErrorCode.ApiEndpointBlocked|null[0]
    enum entry BeginRefundRequestError // com.revenuecat.purchases.kmp/PurchasesErrorCode.BeginRefundRequestError|null[0]
    enum entry ConfigurationError // com.revenuecat.purchases.kmp/PurchasesErrorCode.ConfigurationError|null[0]
    enum entry CustomerInfoError // com.revenuecat.purchases.kmp/PurchasesErrorCode.CustomerInfoError|null[0]
    enum entry EmptySubscriberAttributesError // com.revenuecat.purchases.kmp/PurchasesErrorCode.EmptySubscriberAttributesError|null[0]
    enum entry FeatureNotAvailableInCustomEntitlementsComputationMode // com.revenuecat.purchases.kmp/PurchasesErrorCode.FeatureNotAvailableInCustomEntitlementsComputationMode|null[0]
    enum entry IneligibleError // com.revenuecat.purchases.kmp/PurchasesErrorCode.IneligibleError|null[0]
    enum entry InsufficientPermissionsError // com.revenuecat.purchases.kmp/PurchasesErrorCode.InsufficientPermissionsError|null[0]
    enum entry InvalidAppUserIdError // com.revenuecat.purchases.kmp/PurchasesErrorCode.InvalidAppUserIdError|null[0]
    enum entry InvalidAppleSubscriptionKeyError // com.revenuecat.purchases.kmp/PurchasesErrorCode.InvalidAppleSubscriptionKeyError|null[0]
    enum entry InvalidCredentialsError // com.revenuecat.purchases.kmp/PurchasesErrorCode.InvalidCredentialsError|null[0]
    enum entry InvalidPromotionalOfferError // com.revenuecat.purchases.kmp/PurchasesErrorCode.InvalidPromotionalOfferError|null[0]
    enum entry InvalidReceiptError // com.revenuecat.purchases.kmp/PurchasesErrorCode.InvalidReceiptError|null[0]
    enum entry InvalidSubscriberAttributesError // com.revenuecat.purchases.kmp/PurchasesErrorCode.InvalidSubscriberAttributesError|null[0]
    enum entry LogOutWithAnonymousUserError // com.revenuecat.purchases.kmp/PurchasesErrorCode.LogOutWithAnonymousUserError|null[0]
    enum entry MissingReceiptFileError // com.revenuecat.purchases.kmp/PurchasesErrorCode.MissingReceiptFileError|null[0]
    enum entry NetworkError // com.revenuecat.purchases.kmp/PurchasesErrorCode.NetworkError|null[0]
    enum entry OfflineConnectionError // com.revenuecat.purchases.kmp/PurchasesErrorCode.OfflineConnectionError|null[0]
    enum entry OperationAlreadyInProgressError // com.revenuecat.purchases.kmp/PurchasesErrorCode.OperationAlreadyInProgressError|null[0]
    enum entry PaymentPendingError // com.revenuecat.purchases.kmp/PurchasesErrorCode.PaymentPendingError|null[0]
    enum entry ProductAlreadyPurchasedError // com.revenuecat.purchases.kmp/PurchasesErrorCode.ProductAlreadyPurchasedError|null[0]
    enum entry ProductDiscountMissingIdentifierError // com.revenuecat.purchases.kmp/PurchasesErrorCode.ProductDiscountMissingIdentifierError|null[0]
    enum entry ProductDiscountMissingSubscriptionGroupIdentifierError // com.revenuecat.purchases.kmp/PurchasesErrorCode.ProductDiscountMissingSubscriptionGroupIdentifierError|null[0]
    enum entry ProductNotAvailableForPurchaseError // com.revenuecat.purchases.kmp/PurchasesErrorCode.ProductNotAvailableForPurchaseError|null[0]
    enum entry ProductRequestTimedOut // com.revenuecat.purchases.kmp/PurchasesErrorCode.ProductRequestTimedOut|null[0]
    enum entry PurchaseCancelledError // com.revenuecat.purchases.kmp/PurchasesErrorCode.PurchaseCancelledError|null[0]
    enum entry PurchaseInvalidError // com.revenuecat.purchases.kmp/PurchasesErrorCode.PurchaseInvalidError|null[0]
    enum entry PurchaseNotAllowedError // com.revenuecat.purchases.kmp/PurchasesErrorCode.PurchaseNotAllowedError|null[0]
    enum entry ReceiptAlreadyInUseError // com.revenuecat.purchases.kmp/PurchasesErrorCode.ReceiptAlreadyInUseError|null[0]
    enum entry ReceiptInUseByOtherSubscriberError // com.revenuecat.purchases.kmp/PurchasesErrorCode.ReceiptInUseByOtherSubscriberError|null[0]
    enum entry SignatureVerificationError // com.revenuecat.purchases.kmp/PurchasesErrorCode.SignatureVerificationError|null[0]
    enum entry StoreProblemError // com.revenuecat.purchases.kmp/PurchasesErrorCode.StoreProblemError|null[0]
    enum entry SystemInfoError // com.revenuecat.purchases.kmp/PurchasesErrorCode.SystemInfoError|null[0]
    enum entry UnexpectedBackendResponseError // com.revenuecat.purchases.kmp/PurchasesErrorCode.UnexpectedBackendResponseError|null[0]
    enum entry UnknownBackendError // com.revenuecat.purchases.kmp/PurchasesErrorCode.UnknownBackendError|null[0]
    enum entry UnknownError // com.revenuecat.purchases.kmp/PurchasesErrorCode.UnknownError|null[0]
    enum entry UnsupportedError // com.revenuecat.purchases.kmp/PurchasesErrorCode.UnsupportedError|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp/PurchasesErrorCode // com.revenuecat.purchases.kmp/PurchasesErrorCode.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp/PurchasesErrorCode> // com.revenuecat.purchases.kmp/PurchasesErrorCode.values|values#static(){}[0]
    final val code // com.revenuecat.purchases.kmp/PurchasesErrorCode.code|{}code[0]
        final fun <get-code>(): kotlin/Int // com.revenuecat.purchases.kmp/PurchasesErrorCode.code.<get-code>|<get-code>(){}[0]
    final val description // com.revenuecat.purchases.kmp/PurchasesErrorCode.description|<get-description>(){}[0]
        final fun <get-description>(): kotlin/String // com.revenuecat.purchases.kmp/PurchasesErrorCode.description.<get-description>|<get-description>(){}[0]
    final val entries // com.revenuecat.purchases.kmp/PurchasesErrorCode.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp/PurchasesErrorCode> // com.revenuecat.purchases.kmp/PurchasesErrorCode.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp/Store : kotlin/Enum<com.revenuecat.purchases.kmp/Store> { // com.revenuecat.purchases.kmp/Store|null[0]
    enum entry AMAZON // com.revenuecat.purchases.kmp/Store.AMAZON|null[0]
    enum entry APP_STORE // com.revenuecat.purchases.kmp/Store.APP_STORE|null[0]
    enum entry EXTERNAL // com.revenuecat.purchases.kmp/Store.EXTERNAL|null[0]
    enum entry MAC_APP_STORE // com.revenuecat.purchases.kmp/Store.MAC_APP_STORE|null[0]
    enum entry PLAY_STORE // com.revenuecat.purchases.kmp/Store.PLAY_STORE|null[0]
    enum entry PROMOTIONAL // com.revenuecat.purchases.kmp/Store.PROMOTIONAL|null[0]
    enum entry RC_BILLING // com.revenuecat.purchases.kmp/Store.RC_BILLING|null[0]
    enum entry STRIPE // com.revenuecat.purchases.kmp/Store.STRIPE|null[0]
    enum entry UNKNOWN_STORE // com.revenuecat.purchases.kmp/Store.UNKNOWN_STORE|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp/Store // com.revenuecat.purchases.kmp/Store.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp/Store> // com.revenuecat.purchases.kmp/Store.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp/Store.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp/Store> // com.revenuecat.purchases.kmp/Store.entries.<get-entries>|<get-entries>#static(){}[0]
}
final enum class com.revenuecat.purchases.kmp/VerificationResult : kotlin/Enum<com.revenuecat.purchases.kmp/VerificationResult> { // com.revenuecat.purchases.kmp/VerificationResult|null[0]
    enum entry FAILED // com.revenuecat.purchases.kmp/VerificationResult.FAILED|null[0]
    enum entry NOT_REQUESTED // com.revenuecat.purchases.kmp/VerificationResult.NOT_REQUESTED|null[0]
    enum entry VERIFIED // com.revenuecat.purchases.kmp/VerificationResult.VERIFIED|null[0]
    enum entry VERIFIED_ON_DEVICE // com.revenuecat.purchases.kmp/VerificationResult.VERIFIED_ON_DEVICE|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp/VerificationResult // com.revenuecat.purchases.kmp/VerificationResult.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp/VerificationResult> // com.revenuecat.purchases.kmp/VerificationResult.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp/VerificationResult.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp/VerificationResult> // com.revenuecat.purchases.kmp/VerificationResult.entries.<get-entries>|<get-entries>#static(){}[0]
}
final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfos).com.revenuecat.purchases.kmp/get(kotlin/String): cocoapods.PurchasesHybridCommon/RCEntitlementInfo? // com.revenuecat.purchases.kmp/get|get@cocoapods.PurchasesHybridCommon.RCEntitlementInfos(kotlin.String){}[0]
final fun (cocoapods.PurchasesHybridCommon/RCOffering).com.revenuecat.purchases.kmp/get(kotlin/String): cocoapods.PurchasesHybridCommon/RCPackage? // com.revenuecat.purchases.kmp/get|get@cocoapods.PurchasesHybridCommon.RCOffering(kotlin.String){}[0]
final fun (cocoapods.PurchasesHybridCommon/RCOffering).com.revenuecat.purchases.kmp/getMetadataString(kotlin/String, kotlin/String): kotlin/String // com.revenuecat.purchases.kmp/getMetadataString|getMetadataString@cocoapods.PurchasesHybridCommon.RCOffering(kotlin.String;kotlin.String){}[0]
final fun (cocoapods.PurchasesHybridCommon/RCOffering).com.revenuecat.purchases.kmp/getPackage(kotlin/String): cocoapods.PurchasesHybridCommon/RCPackage? // com.revenuecat.purchases.kmp/getPackage|getPackage@cocoapods.PurchasesHybridCommon.RCOffering(kotlin.String){}[0]
final fun (cocoapods.PurchasesHybridCommon/RCOfferings).com.revenuecat.purchases.kmp/get(kotlin/String): cocoapods.PurchasesHybridCommon/RCOffering? // com.revenuecat.purchases.kmp/get|get@cocoapods.PurchasesHybridCommon.RCOfferings(kotlin.String){}[0]
final fun (cocoapods.PurchasesHybridCommon/RCOfferings).com.revenuecat.purchases.kmp/getOffering(kotlin/String): cocoapods.PurchasesHybridCommon/RCOffering? // com.revenuecat.purchases.kmp/getOffering|getOffering@cocoapods.PurchasesHybridCommon.RCOfferings(kotlin.String){}[0]
final fun (cocoapods.PurchasesHybridCommon/RCStoreProductDiscount).com.revenuecat.purchases.kmp.models/price(cocoapods.PurchasesHybridCommon/RCStoreProduct): com.revenuecat.purchases.kmp.models/Price // com.revenuecat.purchases.kmp.models/price|price@cocoapods.PurchasesHybridCommon.RCStoreProductDiscount(cocoapods.PurchasesHybridCommon.RCStoreProduct){}[0]
final fun (com.revenuecat.purchases.kmp.i18n/Locale).com.revenuecat.purchases.kmp.i18n/toNsLocale(): platform.Foundation/NSLocale // com.revenuecat.purchases.kmp.i18n/toNsLocale|toNsLocale@com.revenuecat.purchases.kmp.i18n.Locale(){}[0]
final fun (com.revenuecat.purchases.kmp/Purchases.Companion).com.revenuecat.purchases.kmp/configure(kotlin/String, kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder, kotlin/Unit> =...): com.revenuecat.purchases.kmp/Purchases // com.revenuecat.purchases.kmp/configure|configure@com.revenuecat.purchases.kmp.Purchases.Companion(kotlin.String;kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesConfiguration.Builder,kotlin.Unit>){}[0]
final fun (platform.Foundation/NSError).com.revenuecat.purchases.kmp/toPurchasesErrorOrThrow(): com.revenuecat.purchases.kmp/PurchasesError // com.revenuecat.purchases.kmp/toPurchasesErrorOrThrow|toPurchasesErrorOrThrow@platform.Foundation.NSError(){}[0]
final fun (platform.Foundation/NSLocale).com.revenuecat.purchases.kmp.i18n/toLocale(): com.revenuecat.purchases.kmp.i18n/Locale // com.revenuecat.purchases.kmp.i18n/toLocale|toLocale@platform.Foundation.NSLocale(){}[0]
final fun com.revenuecat.purchases.kmp/PurchasesConfiguration(kotlin/String, kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder, kotlin/Unit> =...): com.revenuecat.purchases.kmp/PurchasesConfiguration // com.revenuecat.purchases.kmp/PurchasesConfiguration|PurchasesConfiguration(kotlin.String;kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesConfiguration.Builder,kotlin.Unit>){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitCustomerInfo(com.revenuecat.purchases.kmp/CacheFetchPolicy =...): cocoapods.PurchasesHybridCommon/RCCustomerInfo // com.revenuecat.purchases.kmp.ktx/awaitCustomerInfo|awaitCustomerInfo@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.CacheFetchPolicy){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitGetProducts(kotlin.collections/List<kotlin/String>): kotlin.collections/List<cocoapods.PurchasesHybridCommon/RCStoreProduct> // com.revenuecat.purchases.kmp.ktx/awaitGetProducts|awaitGetProducts@com.revenuecat.purchases.kmp.Purchases(kotlin.collections.List<kotlin.String>){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitLogIn(kotlin/String): com.revenuecat.purchases.kmp.ktx/SuccessfulLogin // com.revenuecat.purchases.kmp.ktx/awaitLogIn|awaitLogIn@com.revenuecat.purchases.kmp.Purchases(kotlin.String){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitLogOut(): cocoapods.PurchasesHybridCommon/RCCustomerInfo // com.revenuecat.purchases.kmp.ktx/awaitLogOut|awaitLogOut@com.revenuecat.purchases.kmp.Purchases(){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitOfferings(): cocoapods.PurchasesHybridCommon/RCOfferings // com.revenuecat.purchases.kmp.ktx/awaitOfferings|awaitOfferings@com.revenuecat.purchases.kmp.Purchases(){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitPromotionalOffer(cocoapods.PurchasesHybridCommon/RCStoreProductDiscount, cocoapods.PurchasesHybridCommon/RCStoreProduct): cocoapods.PurchasesHybridCommon/RCPromotionalOffer // com.revenuecat.purchases.kmp.ktx/awaitPromotionalOffer|awaitPromotionalOffer@com.revenuecat.purchases.kmp.Purchases(cocoapods.PurchasesHybridCommon.RCStoreProductDiscount;cocoapods.PurchasesHybridCommon.RCStoreProduct){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitPurchase(cocoapods.PurchasesHybridCommon/RCPackage, cocoapods.PurchasesHybridCommon/RCPromotionalOffer): com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase // com.revenuecat.purchases.kmp.ktx/awaitPurchase|awaitPurchase@com.revenuecat.purchases.kmp.Purchases(cocoapods.PurchasesHybridCommon.RCPackage;cocoapods.PurchasesHybridCommon.RCPromotionalOffer){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitPurchase(cocoapods.PurchasesHybridCommon/RCPackage, kotlin/Boolean? =..., kotlin/String? =..., com.revenuecat.purchases.kmp.models/GoogleReplacementMode =...): com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase // com.revenuecat.purchases.kmp.ktx/awaitPurchase|awaitPurchase@com.revenuecat.purchases.kmp.Purchases(cocoapods.PurchasesHybridCommon.RCPackage;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.GoogleReplacementMode){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitPurchase(cocoapods.PurchasesHybridCommon/RCStoreProduct, cocoapods.PurchasesHybridCommon/RCPromotionalOffer): com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase // com.revenuecat.purchases.kmp.ktx/awaitPurchase|awaitPurchase@com.revenuecat.purchases.kmp.Purchases(cocoapods.PurchasesHybridCommon.RCStoreProduct;cocoapods.PurchasesHybridCommon.RCPromotionalOffer){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitPurchase(cocoapods.PurchasesHybridCommon/RCStoreProduct, kotlin/Boolean? =..., kotlin/String? =..., com.revenuecat.purchases.kmp.models/GoogleReplacementMode =...): com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase // com.revenuecat.purchases.kmp.ktx/awaitPurchase|awaitPurchase@com.revenuecat.purchases.kmp.Purchases(cocoapods.PurchasesHybridCommon.RCStoreProduct;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.GoogleReplacementMode){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitPurchase(com.revenuecat.purchases.kmp.models/SubscriptionOption, kotlin/Boolean? =..., kotlin/String? =..., com.revenuecat.purchases.kmp.models/GoogleReplacementMode =...): com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase // com.revenuecat.purchases.kmp.ktx/awaitPurchase|awaitPurchase@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.SubscriptionOption;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.GoogleReplacementMode){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitRestore(): cocoapods.PurchasesHybridCommon/RCCustomerInfo // com.revenuecat.purchases.kmp.ktx/awaitRestore|awaitRestore@com.revenuecat.purchases.kmp.Purchases(){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitSyncAttributesAndOfferingsIfNeeded(): cocoapods.PurchasesHybridCommon/RCOfferings // com.revenuecat.purchases.kmp.ktx/awaitSyncAttributesAndOfferingsIfNeeded|awaitSyncAttributesAndOfferingsIfNeeded@com.revenuecat.purchases.kmp.Purchases(){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitSyncPurchases(): cocoapods.PurchasesHybridCommon/RCCustomerInfo // com.revenuecat.purchases.kmp.ktx/awaitSyncPurchases|awaitSyncPurchases@com.revenuecat.purchases.kmp.Purchases(){}[0]
final val com.revenuecat.purchases.kmp.models/billingPeriod // com.revenuecat.purchases.kmp.models/billingPeriod|@com.revenuecat.purchases.kmp.models.SubscriptionOption{}billingPeriod[0]
    final fun (com.revenuecat.purchases.kmp.models/SubscriptionOption).<get-billingPeriod>(): cocoapods.PurchasesHybridCommon/RCSubscriptionPeriod? // com.revenuecat.purchases.kmp.models/billingPeriod.<get-billingPeriod>|<get-billingPeriod>@com.revenuecat.purchases.kmp.models.SubscriptionOption(){}[0]
final val com.revenuecat.purchases.kmp.models/category // com.revenuecat.purchases.kmp.models/category|@cocoapods.PurchasesHybridCommon.RCStoreProduct{}category[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreProduct).<get-category>(): com.revenuecat.purchases.kmp.models/ProductCategory? // com.revenuecat.purchases.kmp.models/category.<get-category>|<get-category>@cocoapods.PurchasesHybridCommon.RCStoreProduct(){}[0]
final val com.revenuecat.purchases.kmp.models/defaultOption // com.revenuecat.purchases.kmp.models/defaultOption|@cocoapods.PurchasesHybridCommon.RCStoreProduct{}defaultOption[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreProduct).<get-defaultOption>(): com.revenuecat.purchases.kmp.models/SubscriptionOption? // com.revenuecat.purchases.kmp.models/defaultOption.<get-defaultOption>|<get-defaultOption>@cocoapods.PurchasesHybridCommon.RCStoreProduct(){}[0]
final val com.revenuecat.purchases.kmp.models/discount // com.revenuecat.purchases.kmp.models/discount|@cocoapods.PurchasesHybridCommon.RCPromotionalOffer{}discount[0]
    final fun (cocoapods.PurchasesHybridCommon/RCPromotionalOffer).<get-discount>(): cocoapods.PurchasesHybridCommon/RCStoreProductDiscount // com.revenuecat.purchases.kmp.models/discount.<get-discount>|<get-discount>@cocoapods.PurchasesHybridCommon.RCPromotionalOffer(){}[0]
final val com.revenuecat.purchases.kmp.models/discounts // com.revenuecat.purchases.kmp.models/discounts|@cocoapods.PurchasesHybridCommon.RCStoreProduct{}discounts[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreProduct).<get-discounts>(): kotlin.collections/List<cocoapods.PurchasesHybridCommon/RCStoreProductDiscount> // com.revenuecat.purchases.kmp.models/discounts.<get-discounts>|<get-discounts>@cocoapods.PurchasesHybridCommon.RCStoreProduct(){}[0]
final val com.revenuecat.purchases.kmp.models/freePhase // com.revenuecat.purchases.kmp.models/freePhase|@com.revenuecat.purchases.kmp.models.SubscriptionOption{}freePhase[0]
    final fun (com.revenuecat.purchases.kmp.models/SubscriptionOption).<get-freePhase>(): com.revenuecat.purchases.kmp.models/PricingPhase? // com.revenuecat.purchases.kmp.models/freePhase.<get-freePhase>|<get-freePhase>@com.revenuecat.purchases.kmp.models.SubscriptionOption(){}[0]
final val com.revenuecat.purchases.kmp.models/fullPricePhase // com.revenuecat.purchases.kmp.models/fullPricePhase|<get-fullPricePhase>@com.revenuecat.purchases.kmp.models.SubscriptionOption(){}[0]
    final fun (com.revenuecat.purchases.kmp.models/SubscriptionOption).<get-fullPricePhase>(): com.revenuecat.purchases.kmp.models/PricingPhase? // com.revenuecat.purchases.kmp.models/fullPricePhase.<get-fullPricePhase>|<get-fullPricePhase>@com.revenuecat.purchases.kmp.models.SubscriptionOption(){}[0]
final val com.revenuecat.purchases.kmp.models/id // com.revenuecat.purchases.kmp.models/id|@cocoapods.PurchasesHybridCommon.RCStoreProduct{}id[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreProduct).<get-id>(): kotlin/String // com.revenuecat.purchases.kmp.models/id.<get-id>|<get-id>@cocoapods.PurchasesHybridCommon.RCStoreProduct(){}[0]
final val com.revenuecat.purchases.kmp.models/identifier // com.revenuecat.purchases.kmp.models/identifier|@com.revenuecat.purchases.kmp.models.RecurrenceMode{}identifier[0]
    final fun (com.revenuecat.purchases.kmp.models/RecurrenceMode).<get-identifier>(): kotlin/Int? // com.revenuecat.purchases.kmp.models/identifier.<get-identifier>|<get-identifier>@com.revenuecat.purchases.kmp.models.RecurrenceMode(){}[0]
final val com.revenuecat.purchases.kmp.models/introPhase // com.revenuecat.purchases.kmp.models/introPhase|@com.revenuecat.purchases.kmp.models.SubscriptionOption{}introPhase[0]
    final fun (com.revenuecat.purchases.kmp.models/SubscriptionOption).<get-introPhase>(): com.revenuecat.purchases.kmp.models/PricingPhase? // com.revenuecat.purchases.kmp.models/introPhase.<get-introPhase>|<get-introPhase>@com.revenuecat.purchases.kmp.models.SubscriptionOption(){}[0]
final val com.revenuecat.purchases.kmp.models/introductoryDiscount // com.revenuecat.purchases.kmp.models/introductoryDiscount|@cocoapods.PurchasesHybridCommon.RCStoreProduct{}introductoryDiscount[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreProduct).<get-introductoryDiscount>(): cocoapods.PurchasesHybridCommon/RCStoreProductDiscount? // com.revenuecat.purchases.kmp.models/introductoryDiscount.<get-introductoryDiscount>|<get-introductoryDiscount>@cocoapods.PurchasesHybridCommon.RCStoreProduct(){}[0]
final val com.revenuecat.purchases.kmp.models/isBasePlan // com.revenuecat.purchases.kmp.models/isBasePlan|@com.revenuecat.purchases.kmp.models.SubscriptionOption{}isBasePlan[0]
    final fun (com.revenuecat.purchases.kmp.models/SubscriptionOption).<get-isBasePlan>(): kotlin/Boolean // com.revenuecat.purchases.kmp.models/isBasePlan.<get-isBasePlan>|<get-isBasePlan>@com.revenuecat.purchases.kmp.models.SubscriptionOption(){}[0]
final val com.revenuecat.purchases.kmp.models/isPrepaid // com.revenuecat.purchases.kmp.models/isPrepaid|@com.revenuecat.purchases.kmp.models.SubscriptionOption{}isPrepaid[0]
    final fun (com.revenuecat.purchases.kmp.models/SubscriptionOption).<get-isPrepaid>(): kotlin/Boolean // com.revenuecat.purchases.kmp.models/isPrepaid.<get-isPrepaid>|<get-isPrepaid>@com.revenuecat.purchases.kmp.models.SubscriptionOption(){}[0]
final val com.revenuecat.purchases.kmp.models/localizedDescription // com.revenuecat.purchases.kmp.models/localizedDescription|@cocoapods.PurchasesHybridCommon.RCStoreProduct{}localizedDescription[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreProduct).<get-localizedDescription>(): kotlin/String? // com.revenuecat.purchases.kmp.models/localizedDescription.<get-localizedDescription>|<get-localizedDescription>@cocoapods.PurchasesHybridCommon.RCStoreProduct(){}[0]
final val com.revenuecat.purchases.kmp.models/numberOfPeriods // com.revenuecat.purchases.kmp.models/numberOfPeriods|@cocoapods.PurchasesHybridCommon.RCStoreProductDiscount{}numberOfPeriods[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreProductDiscount).<get-numberOfPeriods>(): kotlin/Long // com.revenuecat.purchases.kmp.models/numberOfPeriods.<get-numberOfPeriods>|<get-numberOfPeriods>@cocoapods.PurchasesHybridCommon.RCStoreProductDiscount(){}[0]
final val com.revenuecat.purchases.kmp.models/offerIdentifier // com.revenuecat.purchases.kmp.models/offerIdentifier|@cocoapods.PurchasesHybridCommon.RCStoreProductDiscount{}offerIdentifier[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreProductDiscount).<get-offerIdentifier>(): kotlin/String? // com.revenuecat.purchases.kmp.models/offerIdentifier.<get-offerIdentifier>|<get-offerIdentifier>@cocoapods.PurchasesHybridCommon.RCStoreProductDiscount(){}[0]
final val com.revenuecat.purchases.kmp.models/paymentMode // com.revenuecat.purchases.kmp.models/paymentMode|@cocoapods.PurchasesHybridCommon.RCStoreProductDiscount{}paymentMode[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreProductDiscount).<get-paymentMode>(): com.revenuecat.purchases.kmp.models/DiscountPaymentMode // com.revenuecat.purchases.kmp.models/paymentMode.<get-paymentMode>|<get-paymentMode>@cocoapods.PurchasesHybridCommon.RCStoreProductDiscount(){}[0]
final val com.revenuecat.purchases.kmp.models/period // com.revenuecat.purchases.kmp.models/period|@cocoapods.PurchasesHybridCommon.RCStoreProduct{}period[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreProduct).<get-period>(): cocoapods.PurchasesHybridCommon/RCSubscriptionPeriod? // com.revenuecat.purchases.kmp.models/period.<get-period>|<get-period>@cocoapods.PurchasesHybridCommon.RCStoreProduct(){}[0]
final val com.revenuecat.purchases.kmp.models/playBillingClientMode // com.revenuecat.purchases.kmp.models/playBillingClientMode|@com.revenuecat.purchases.kmp.models.GoogleReplacementMode{}playBillingClientMode[0]
    final fun (com.revenuecat.purchases.kmp.models/GoogleReplacementMode).<get-playBillingClientMode>(): kotlin/Int // com.revenuecat.purchases.kmp.models/playBillingClientMode.<get-playBillingClientMode>|<get-playBillingClientMode>@com.revenuecat.purchases.kmp.models.GoogleReplacementMode(){}[0]
final val com.revenuecat.purchases.kmp.models/playBillingClientName // com.revenuecat.purchases.kmp.models/playBillingClientName|@com.revenuecat.purchases.kmp.models.BillingFeature{}playBillingClientName[0]
    final fun (com.revenuecat.purchases.kmp.models/BillingFeature).<get-playBillingClientName>(): kotlin/String // com.revenuecat.purchases.kmp.models/playBillingClientName.<get-playBillingClientName>|<get-playBillingClientName>@com.revenuecat.purchases.kmp.models.BillingFeature(){}[0]
final val com.revenuecat.purchases.kmp.models/presentedOfferingContext // com.revenuecat.purchases.kmp.models/presentedOfferingContext|@cocoapods.PurchasesHybridCommon.RCStoreProduct{}presentedOfferingContext[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreProduct).<get-presentedOfferingContext>(): cocoapods.PurchasesHybridCommon/RCPresentedOfferingContext? // com.revenuecat.purchases.kmp.models/presentedOfferingContext.<get-presentedOfferingContext>|<get-presentedOfferingContext>@cocoapods.PurchasesHybridCommon.RCStoreProduct(){}[0]
final val com.revenuecat.purchases.kmp.models/price // com.revenuecat.purchases.kmp.models/price|@cocoapods.PurchasesHybridCommon.RCStoreProduct{}price[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreProduct).<get-price>(): com.revenuecat.purchases.kmp.models/Price // com.revenuecat.purchases.kmp.models/price.<get-price>|<get-price>@cocoapods.PurchasesHybridCommon.RCStoreProduct(){}[0]
final val com.revenuecat.purchases.kmp.models/productIdentifier // com.revenuecat.purchases.kmp.models/productIdentifier|@com.revenuecat.purchases.kmp.models.Transaction{}productIdentifier[0]
    final fun (com.revenuecat.purchases.kmp.models/Transaction).<get-productIdentifier>(): kotlin/String // com.revenuecat.purchases.kmp.models/productIdentifier.<get-productIdentifier>|<get-productIdentifier>@com.revenuecat.purchases.kmp.models.Transaction(){}[0]
final val com.revenuecat.purchases.kmp.models/productIds // com.revenuecat.purchases.kmp.models/productIds|@cocoapods.PurchasesHybridCommon.RCStoreTransaction{}productIds[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreTransaction).<get-productIds>(): kotlin.collections/List<kotlin/String> // com.revenuecat.purchases.kmp.models/productIds.<get-productIds>|<get-productIds>@cocoapods.PurchasesHybridCommon.RCStoreTransaction(){}[0]
final val com.revenuecat.purchases.kmp.models/purchaseDateMillis // com.revenuecat.purchases.kmp.models/purchaseDateMillis|@com.revenuecat.purchases.kmp.models.Transaction{}purchaseDateMillis[0]
    final fun (com.revenuecat.purchases.kmp.models/Transaction).<get-purchaseDateMillis>(): kotlin/Long // com.revenuecat.purchases.kmp.models/purchaseDateMillis.<get-purchaseDateMillis>|<get-purchaseDateMillis>@com.revenuecat.purchases.kmp.models.Transaction(){}[0]
final val com.revenuecat.purchases.kmp.models/purchaseTime // com.revenuecat.purchases.kmp.models/purchaseTime|@cocoapods.PurchasesHybridCommon.RCStoreTransaction{}purchaseTime[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreTransaction).<get-purchaseTime>(): kotlin/Long // com.revenuecat.purchases.kmp.models/purchaseTime.<get-purchaseTime>|<get-purchaseTime>@cocoapods.PurchasesHybridCommon.RCStoreTransaction(){}[0]
final val com.revenuecat.purchases.kmp.models/purchasingData // com.revenuecat.purchases.kmp.models/purchasingData|@cocoapods.PurchasesHybridCommon.RCStoreProduct{}purchasingData[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreProduct).<get-purchasingData>(): com.revenuecat.purchases.kmp.models/PurchasingData // com.revenuecat.purchases.kmp.models/purchasingData.<get-purchasingData>|<get-purchasingData>@cocoapods.PurchasesHybridCommon.RCStoreProduct(){}[0]
final val com.revenuecat.purchases.kmp.models/subscriptionOptions // com.revenuecat.purchases.kmp.models/subscriptionOptions|@cocoapods.PurchasesHybridCommon.RCStoreProduct{}subscriptionOptions[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreProduct).<get-subscriptionOptions>(): com.revenuecat.purchases.kmp.models/SubscriptionOptions? // com.revenuecat.purchases.kmp.models/subscriptionOptions.<get-subscriptionOptions>|<get-subscriptionOptions>@cocoapods.PurchasesHybridCommon.RCStoreProduct(){}[0]
final val com.revenuecat.purchases.kmp.models/subscriptionPeriod // com.revenuecat.purchases.kmp.models/subscriptionPeriod|@cocoapods.PurchasesHybridCommon.RCStoreProductDiscount{}subscriptionPeriod[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreProductDiscount).<get-subscriptionPeriod>(): cocoapods.PurchasesHybridCommon/RCSubscriptionPeriod // com.revenuecat.purchases.kmp.models/subscriptionPeriod.<get-subscriptionPeriod>|<get-subscriptionPeriod>@cocoapods.PurchasesHybridCommon.RCStoreProductDiscount(){}[0]
final val com.revenuecat.purchases.kmp.models/title // com.revenuecat.purchases.kmp.models/title|@cocoapods.PurchasesHybridCommon.RCStoreProduct{}title[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreProduct).<get-title>(): kotlin/String // com.revenuecat.purchases.kmp.models/title.<get-title>|<get-title>@cocoapods.PurchasesHybridCommon.RCStoreProduct(){}[0]
final val com.revenuecat.purchases.kmp.models/transactionId // com.revenuecat.purchases.kmp.models/transactionId|@cocoapods.PurchasesHybridCommon.RCStoreTransaction{}transactionId[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreTransaction).<get-transactionId>(): kotlin/String? // com.revenuecat.purchases.kmp.models/transactionId.<get-transactionId>|<get-transactionId>@cocoapods.PurchasesHybridCommon.RCStoreTransaction(){}[0]
final val com.revenuecat.purchases.kmp.models/transactionIdentifier // com.revenuecat.purchases.kmp.models/transactionIdentifier|@com.revenuecat.purchases.kmp.models.Transaction{}transactionIdentifier[0]
    final fun (com.revenuecat.purchases.kmp.models/Transaction).<get-transactionIdentifier>(): kotlin/String // com.revenuecat.purchases.kmp.models/transactionIdentifier.<get-transactionIdentifier>|<get-transactionIdentifier>@com.revenuecat.purchases.kmp.models.Transaction(){}[0]
final val com.revenuecat.purchases.kmp.models/type // com.revenuecat.purchases.kmp.models/type|@cocoapods.PurchasesHybridCommon.RCStoreProductDiscount{}type[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreProductDiscount).<get-type>(): com.revenuecat.purchases.kmp.models/DiscountType // com.revenuecat.purchases.kmp.models/type.<get-type>|<get-type>@cocoapods.PurchasesHybridCommon.RCStoreProductDiscount(){}[0]
final val com.revenuecat.purchases.kmp.models/type // com.revenuecat.purchases.kmp.models/type|@cocoapods.PurchasesHybridCommon.RCStoreProduct{}type[0]
    final fun (cocoapods.PurchasesHybridCommon/RCStoreProduct).<get-type>(): com.revenuecat.purchases.kmp/ProductType // com.revenuecat.purchases.kmp.models/type.<get-type>|<get-type>@cocoapods.PurchasesHybridCommon.RCStoreProduct(){}[0]
final val com.revenuecat.purchases.kmp.models/unit // com.revenuecat.purchases.kmp.models/unit|@cocoapods.PurchasesHybridCommon.RCSubscriptionPeriod{}unit[0]
    final fun (cocoapods.PurchasesHybridCommon/RCSubscriptionPeriod).<get-unit>(): com.revenuecat.purchases.kmp.models/PeriodUnit // com.revenuecat.purchases.kmp.models/unit.<get-unit>|<get-unit>@cocoapods.PurchasesHybridCommon.RCSubscriptionPeriod(){}[0]
final val com.revenuecat.purchases.kmp.models/value // com.revenuecat.purchases.kmp.models/value|@cocoapods.PurchasesHybridCommon.RCSubscriptionPeriod{}value[0]
    final fun (cocoapods.PurchasesHybridCommon/RCSubscriptionPeriod).<get-value>(): kotlin/Int // com.revenuecat.purchases.kmp.models/value.<get-value>|<get-value>@cocoapods.PurchasesHybridCommon.RCSubscriptionPeriod(){}[0]
final val com.revenuecat.purchases.kmp.models/valueInMonths // com.revenuecat.purchases.kmp.models/valueInMonths|@cocoapods.PurchasesHybridCommon.RCSubscriptionPeriod{}valueInMonths[0]
    final fun (cocoapods.PurchasesHybridCommon/RCSubscriptionPeriod).<get-valueInMonths>(): kotlin/Double // com.revenuecat.purchases.kmp.models/valueInMonths.<get-valueInMonths>|<get-valueInMonths>@cocoapods.PurchasesHybridCommon.RCSubscriptionPeriod(){}[0]
final val com.revenuecat.purchases.kmp/active // com.revenuecat.purchases.kmp/active|@cocoapods.PurchasesHybridCommon.RCEntitlementInfos{}active[0]
    final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfos).<get-active>(): kotlin.collections/Map<kotlin/String, cocoapods.PurchasesHybridCommon/RCEntitlementInfo> // com.revenuecat.purchases.kmp/active.<get-active>|<get-active>@cocoapods.PurchasesHybridCommon.RCEntitlementInfos(){}[0]
final val com.revenuecat.purchases.kmp/activeSubscriptions // com.revenuecat.purchases.kmp/activeSubscriptions|@cocoapods.PurchasesHybridCommon.RCCustomerInfo{}activeSubscriptions[0]
    final fun (cocoapods.PurchasesHybridCommon/RCCustomerInfo).<get-activeSubscriptions>(): kotlin.collections/Set<kotlin/String> // com.revenuecat.purchases.kmp/activeSubscriptions.<get-activeSubscriptions>|<get-activeSubscriptions>@cocoapods.PurchasesHybridCommon.RCCustomerInfo(){}[0]
final val com.revenuecat.purchases.kmp/all // com.revenuecat.purchases.kmp/all|@cocoapods.PurchasesHybridCommon.RCEntitlementInfos{}all[0]
    final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfos).<get-all>(): kotlin.collections/Map<kotlin/String, cocoapods.PurchasesHybridCommon/RCEntitlementInfo> // com.revenuecat.purchases.kmp/all.<get-all>|<get-all>@cocoapods.PurchasesHybridCommon.RCEntitlementInfos(){}[0]
final val com.revenuecat.purchases.kmp/all // com.revenuecat.purchases.kmp/all|@cocoapods.PurchasesHybridCommon.RCOfferings{}all[0]
    final fun (cocoapods.PurchasesHybridCommon/RCOfferings).<get-all>(): kotlin.collections/Map<kotlin/String, cocoapods.PurchasesHybridCommon/RCOffering> // com.revenuecat.purchases.kmp/all.<get-all>|<get-all>@cocoapods.PurchasesHybridCommon.RCOfferings(){}[0]
final val com.revenuecat.purchases.kmp/allExpirationDateMillis // com.revenuecat.purchases.kmp/allExpirationDateMillis|@cocoapods.PurchasesHybridCommon.RCCustomerInfo{}allExpirationDateMillis[0]
    final fun (cocoapods.PurchasesHybridCommon/RCCustomerInfo).<get-allExpirationDateMillis>(): kotlin.collections/Map<kotlin/String, kotlin/Long?> // com.revenuecat.purchases.kmp/allExpirationDateMillis.<get-allExpirationDateMillis>|<get-allExpirationDateMillis>@cocoapods.PurchasesHybridCommon.RCCustomerInfo(){}[0]
final val com.revenuecat.purchases.kmp/allPurchaseDateMillis // com.revenuecat.purchases.kmp/allPurchaseDateMillis|@cocoapods.PurchasesHybridCommon.RCCustomerInfo{}allPurchaseDateMillis[0]
    final fun (cocoapods.PurchasesHybridCommon/RCCustomerInfo).<get-allPurchaseDateMillis>(): kotlin.collections/Map<kotlin/String, kotlin/Long?> // com.revenuecat.purchases.kmp/allPurchaseDateMillis.<get-allPurchaseDateMillis>|<get-allPurchaseDateMillis>@cocoapods.PurchasesHybridCommon.RCCustomerInfo(){}[0]
final val com.revenuecat.purchases.kmp/allPurchasedProductIdentifiers // com.revenuecat.purchases.kmp/allPurchasedProductIdentifiers|@cocoapods.PurchasesHybridCommon.RCCustomerInfo{}allPurchasedProductIdentifiers[0]
    final fun (cocoapods.PurchasesHybridCommon/RCCustomerInfo).<get-allPurchasedProductIdentifiers>(): kotlin.collections/Set<kotlin/String> // com.revenuecat.purchases.kmp/allPurchasedProductIdentifiers.<get-allPurchasedProductIdentifiers>|<get-allPurchasedProductIdentifiers>@cocoapods.PurchasesHybridCommon.RCCustomerInfo(){}[0]
final val com.revenuecat.purchases.kmp/annual // com.revenuecat.purchases.kmp/annual|@cocoapods.PurchasesHybridCommon.RCOffering{}annual[0]
    final fun (cocoapods.PurchasesHybridCommon/RCOffering).<get-annual>(): cocoapods.PurchasesHybridCommon/RCPackage? // com.revenuecat.purchases.kmp/annual.<get-annual>|<get-annual>@cocoapods.PurchasesHybridCommon.RCOffering(){}[0]
final val com.revenuecat.purchases.kmp/availablePackages // com.revenuecat.purchases.kmp/availablePackages|@cocoapods.PurchasesHybridCommon.RCOffering{}availablePackages[0]
    final fun (cocoapods.PurchasesHybridCommon/RCOffering).<get-availablePackages>(): kotlin.collections/List<cocoapods.PurchasesHybridCommon/RCPackage> // com.revenuecat.purchases.kmp/availablePackages.<get-availablePackages>|<get-availablePackages>@cocoapods.PurchasesHybridCommon.RCOffering(){}[0]
final val com.revenuecat.purchases.kmp/billingIssueDetectedAtMillis // com.revenuecat.purchases.kmp/billingIssueDetectedAtMillis|@cocoapods.PurchasesHybridCommon.RCEntitlementInfo{}billingIssueDetectedAtMillis[0]
    final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfo).<get-billingIssueDetectedAtMillis>(): kotlin/Long? // com.revenuecat.purchases.kmp/billingIssueDetectedAtMillis.<get-billingIssueDetectedAtMillis>|<get-billingIssueDetectedAtMillis>@cocoapods.PurchasesHybridCommon.RCEntitlementInfo(){}[0]
final val com.revenuecat.purchases.kmp/current // com.revenuecat.purchases.kmp/current|@cocoapods.PurchasesHybridCommon.RCOfferings{}current[0]
    final fun (cocoapods.PurchasesHybridCommon/RCOfferings).<get-current>(): cocoapods.PurchasesHybridCommon/RCOffering? // com.revenuecat.purchases.kmp/current.<get-current>|<get-current>@cocoapods.PurchasesHybridCommon.RCOfferings(){}[0]
final val com.revenuecat.purchases.kmp/entitlements // com.revenuecat.purchases.kmp/entitlements|@cocoapods.PurchasesHybridCommon.RCCustomerInfo{}entitlements[0]
    final fun (cocoapods.PurchasesHybridCommon/RCCustomerInfo).<get-entitlements>(): cocoapods.PurchasesHybridCommon/RCEntitlementInfos // com.revenuecat.purchases.kmp/entitlements.<get-entitlements>|<get-entitlements>@cocoapods.PurchasesHybridCommon.RCCustomerInfo(){}[0]
final val com.revenuecat.purchases.kmp/expirationDateMillis // com.revenuecat.purchases.kmp/expirationDateMillis|@cocoapods.PurchasesHybridCommon.RCEntitlementInfo{}expirationDateMillis[0]
    final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfo).<get-expirationDateMillis>(): kotlin/Long? // com.revenuecat.purchases.kmp/expirationDateMillis.<get-expirationDateMillis>|<get-expirationDateMillis>@cocoapods.PurchasesHybridCommon.RCEntitlementInfo(){}[0]
final val com.revenuecat.purchases.kmp/firstSeenMillis // com.revenuecat.purchases.kmp/firstSeenMillis|@cocoapods.PurchasesHybridCommon.RCCustomerInfo{}firstSeenMillis[0]
    final fun (cocoapods.PurchasesHybridCommon/RCCustomerInfo).<get-firstSeenMillis>(): kotlin/Long // com.revenuecat.purchases.kmp/firstSeenMillis.<get-firstSeenMillis>|<get-firstSeenMillis>@cocoapods.PurchasesHybridCommon.RCCustomerInfo(){}[0]
final val com.revenuecat.purchases.kmp/frameworkVersion // com.revenuecat.purchases.kmp/frameworkVersion|@com.revenuecat.purchases.kmp.Purchases.Companion{}frameworkVersion[0]
    final fun (com.revenuecat.purchases.kmp/Purchases.Companion).<get-frameworkVersion>(): kotlin/String // com.revenuecat.purchases.kmp/frameworkVersion.<get-frameworkVersion>|<get-frameworkVersion>@com.revenuecat.purchases.kmp.Purchases.Companion(){}[0]
final val com.revenuecat.purchases.kmp/identifier // com.revenuecat.purchases.kmp/identifier|@cocoapods.PurchasesHybridCommon.RCEntitlementInfo{}identifier[0]
    final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfo).<get-identifier>(): kotlin/String // com.revenuecat.purchases.kmp/identifier.<get-identifier>|<get-identifier>@cocoapods.PurchasesHybridCommon.RCEntitlementInfo(){}[0]
final val com.revenuecat.purchases.kmp/identifier // com.revenuecat.purchases.kmp/identifier|@cocoapods.PurchasesHybridCommon.RCOffering{}identifier[0]
    final fun (cocoapods.PurchasesHybridCommon/RCOffering).<get-identifier>(): kotlin/String // com.revenuecat.purchases.kmp/identifier.<get-identifier>|<get-identifier>@cocoapods.PurchasesHybridCommon.RCOffering(){}[0]
final val com.revenuecat.purchases.kmp/identifier // com.revenuecat.purchases.kmp/identifier|@cocoapods.PurchasesHybridCommon.RCPackage{}identifier[0]
    final fun (cocoapods.PurchasesHybridCommon/RCPackage).<get-identifier>(): kotlin/String // com.revenuecat.purchases.kmp/identifier.<get-identifier>|<get-identifier>@cocoapods.PurchasesHybridCommon.RCPackage(){}[0]
final val com.revenuecat.purchases.kmp/identifier // com.revenuecat.purchases.kmp/identifier|@com.revenuecat.purchases.kmp.PackageType{}identifier[0]
    final fun (com.revenuecat.purchases.kmp/PackageType).<get-identifier>(): kotlin/String? // com.revenuecat.purchases.kmp/identifier.<get-identifier>|<get-identifier>@com.revenuecat.purchases.kmp.PackageType(){}[0]
final val com.revenuecat.purchases.kmp/isActive // com.revenuecat.purchases.kmp/isActive|@cocoapods.PurchasesHybridCommon.RCEntitlementInfo{}isActive[0]
    final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfo).<get-isActive>(): kotlin/Boolean // com.revenuecat.purchases.kmp/isActive.<get-isActive>|<get-isActive>@cocoapods.PurchasesHybridCommon.RCEntitlementInfo(){}[0]
final val com.revenuecat.purchases.kmp/isSandbox // com.revenuecat.purchases.kmp/isSandbox|@cocoapods.PurchasesHybridCommon.RCEntitlementInfo{}isSandbox[0]
    final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfo).<get-isSandbox>(): kotlin/Boolean // com.revenuecat.purchases.kmp/isSandbox.<get-isSandbox>|<get-isSandbox>@cocoapods.PurchasesHybridCommon.RCEntitlementInfo(){}[0]
final val com.revenuecat.purchases.kmp/isVerified // com.revenuecat.purchases.kmp/isVerified|@com.revenuecat.purchases.kmp.VerificationResult{}isVerified[0]
    final fun (com.revenuecat.purchases.kmp/VerificationResult).<get-isVerified>(): kotlin/Boolean // com.revenuecat.purchases.kmp/isVerified.<get-isVerified>|<get-isVerified>@com.revenuecat.purchases.kmp.VerificationResult(){}[0]
final val com.revenuecat.purchases.kmp/latestExpirationDateMillis // com.revenuecat.purchases.kmp/latestExpirationDateMillis|@cocoapods.PurchasesHybridCommon.RCCustomerInfo{}latestExpirationDateMillis[0]
    final fun (cocoapods.PurchasesHybridCommon/RCCustomerInfo).<get-latestExpirationDateMillis>(): kotlin/Long? // com.revenuecat.purchases.kmp/latestExpirationDateMillis.<get-latestExpirationDateMillis>|<get-latestExpirationDateMillis>@cocoapods.PurchasesHybridCommon.RCCustomerInfo(){}[0]
final val com.revenuecat.purchases.kmp/latestPurchaseDateMillis // com.revenuecat.purchases.kmp/latestPurchaseDateMillis|@cocoapods.PurchasesHybridCommon.RCEntitlementInfo{}latestPurchaseDateMillis[0]
    final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfo).<get-latestPurchaseDateMillis>(): kotlin/Long? // com.revenuecat.purchases.kmp/latestPurchaseDateMillis.<get-latestPurchaseDateMillis>|<get-latestPurchaseDateMillis>@cocoapods.PurchasesHybridCommon.RCEntitlementInfo(){}[0]
final val com.revenuecat.purchases.kmp/lifetime // com.revenuecat.purchases.kmp/lifetime|@cocoapods.PurchasesHybridCommon.RCOffering{}lifetime[0]
    final fun (cocoapods.PurchasesHybridCommon/RCOffering).<get-lifetime>(): cocoapods.PurchasesHybridCommon/RCPackage? // com.revenuecat.purchases.kmp/lifetime.<get-lifetime>|<get-lifetime>@cocoapods.PurchasesHybridCommon.RCOffering(){}[0]
final val com.revenuecat.purchases.kmp/managementUrlString // com.revenuecat.purchases.kmp/managementUrlString|@cocoapods.PurchasesHybridCommon.RCCustomerInfo{}managementUrlString[0]
    final fun (cocoapods.PurchasesHybridCommon/RCCustomerInfo).<get-managementUrlString>(): kotlin/String? // com.revenuecat.purchases.kmp/managementUrlString.<get-managementUrlString>|<get-managementUrlString>@cocoapods.PurchasesHybridCommon.RCCustomerInfo(){}[0]
final val com.revenuecat.purchases.kmp/metadata // com.revenuecat.purchases.kmp/metadata|@cocoapods.PurchasesHybridCommon.RCOffering{}metadata[0]
    final fun (cocoapods.PurchasesHybridCommon/RCOffering).<get-metadata>(): kotlin.collections/Map<kotlin/String, kotlin/Any> // com.revenuecat.purchases.kmp/metadata.<get-metadata>|<get-metadata>@cocoapods.PurchasesHybridCommon.RCOffering(){}[0]
final val com.revenuecat.purchases.kmp/monthly // com.revenuecat.purchases.kmp/monthly|@cocoapods.PurchasesHybridCommon.RCOffering{}monthly[0]
    final fun (cocoapods.PurchasesHybridCommon/RCOffering).<get-monthly>(): cocoapods.PurchasesHybridCommon/RCPackage? // com.revenuecat.purchases.kmp/monthly.<get-monthly>|<get-monthly>@cocoapods.PurchasesHybridCommon.RCOffering(){}[0]
final val com.revenuecat.purchases.kmp/nonSubscriptionTransactions // com.revenuecat.purchases.kmp/nonSubscriptionTransactions|@cocoapods.PurchasesHybridCommon.RCCustomerInfo{}nonSubscriptionTransactions[0]
    final fun (cocoapods.PurchasesHybridCommon/RCCustomerInfo).<get-nonSubscriptionTransactions>(): kotlin.collections/List<com.revenuecat.purchases.kmp.models/Transaction> // com.revenuecat.purchases.kmp/nonSubscriptionTransactions.<get-nonSubscriptionTransactions>|<get-nonSubscriptionTransactions>@cocoapods.PurchasesHybridCommon.RCCustomerInfo(){}[0]
final val com.revenuecat.purchases.kmp/offeringIdentifier // com.revenuecat.purchases.kmp/offeringIdentifier|@cocoapods.PurchasesHybridCommon.RCPresentedOfferingContext{}offeringIdentifier[0]
    final fun (cocoapods.PurchasesHybridCommon/RCPresentedOfferingContext).<get-offeringIdentifier>(): kotlin/String // com.revenuecat.purchases.kmp/offeringIdentifier.<get-offeringIdentifier>|<get-offeringIdentifier>@cocoapods.PurchasesHybridCommon.RCPresentedOfferingContext(){}[0]
final val com.revenuecat.purchases.kmp/originalAppUserId // com.revenuecat.purchases.kmp/originalAppUserId|@cocoapods.PurchasesHybridCommon.RCCustomerInfo{}originalAppUserId[0]
    final fun (cocoapods.PurchasesHybridCommon/RCCustomerInfo).<get-originalAppUserId>(): kotlin/String // com.revenuecat.purchases.kmp/originalAppUserId.<get-originalAppUserId>|<get-originalAppUserId>@cocoapods.PurchasesHybridCommon.RCCustomerInfo(){}[0]
final val com.revenuecat.purchases.kmp/originalApplicationVersion // com.revenuecat.purchases.kmp/originalApplicationVersion|@cocoapods.PurchasesHybridCommon.RCCustomerInfo{}originalApplicationVersion[0]
    final fun (cocoapods.PurchasesHybridCommon/RCCustomerInfo).<get-originalApplicationVersion>(): kotlin/String? // com.revenuecat.purchases.kmp/originalApplicationVersion.<get-originalApplicationVersion>|<get-originalApplicationVersion>@cocoapods.PurchasesHybridCommon.RCCustomerInfo(){}[0]
final val com.revenuecat.purchases.kmp/originalPurchaseDateMillis // com.revenuecat.purchases.kmp/originalPurchaseDateMillis|@cocoapods.PurchasesHybridCommon.RCCustomerInfo{}originalPurchaseDateMillis[0]
    final fun (cocoapods.PurchasesHybridCommon/RCCustomerInfo).<get-originalPurchaseDateMillis>(): kotlin/Long? // com.revenuecat.purchases.kmp/originalPurchaseDateMillis.<get-originalPurchaseDateMillis>|<get-originalPurchaseDateMillis>@cocoapods.PurchasesHybridCommon.RCCustomerInfo(){}[0]
final val com.revenuecat.purchases.kmp/originalPurchaseDateMillis // com.revenuecat.purchases.kmp/originalPurchaseDateMillis|@cocoapods.PurchasesHybridCommon.RCEntitlementInfo{}originalPurchaseDateMillis[0]
    final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfo).<get-originalPurchaseDateMillis>(): kotlin/Long? // com.revenuecat.purchases.kmp/originalPurchaseDateMillis.<get-originalPurchaseDateMillis>|<get-originalPurchaseDateMillis>@cocoapods.PurchasesHybridCommon.RCEntitlementInfo(){}[0]
final val com.revenuecat.purchases.kmp/ownershipType // com.revenuecat.purchases.kmp/ownershipType|@cocoapods.PurchasesHybridCommon.RCEntitlementInfo{}ownershipType[0]
    final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfo).<get-ownershipType>(): com.revenuecat.purchases.kmp/OwnershipType // com.revenuecat.purchases.kmp/ownershipType.<get-ownershipType>|<get-ownershipType>@cocoapods.PurchasesHybridCommon.RCEntitlementInfo(){}[0]
final val com.revenuecat.purchases.kmp/packageType // com.revenuecat.purchases.kmp/packageType|@cocoapods.PurchasesHybridCommon.RCPackage{}packageType[0]
    final fun (cocoapods.PurchasesHybridCommon/RCPackage).<get-packageType>(): com.revenuecat.purchases.kmp/PackageType // com.revenuecat.purchases.kmp/packageType.<get-packageType>|<get-packageType>@cocoapods.PurchasesHybridCommon.RCPackage(){}[0]
final val com.revenuecat.purchases.kmp/periodType // com.revenuecat.purchases.kmp/periodType|@cocoapods.PurchasesHybridCommon.RCEntitlementInfo{}periodType[0]
    final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfo).<get-periodType>(): com.revenuecat.purchases.kmp/PeriodType // com.revenuecat.purchases.kmp/periodType.<get-periodType>|<get-periodType>@cocoapods.PurchasesHybridCommon.RCEntitlementInfo(){}[0]
final val com.revenuecat.purchases.kmp/placementIdentifier // com.revenuecat.purchases.kmp/placementIdentifier|@cocoapods.PurchasesHybridCommon.RCPresentedOfferingContext{}placementIdentifier[0]
    final fun (cocoapods.PurchasesHybridCommon/RCPresentedOfferingContext).<get-placementIdentifier>(): kotlin/String? // com.revenuecat.purchases.kmp/placementIdentifier.<get-placementIdentifier>|<get-placementIdentifier>@cocoapods.PurchasesHybridCommon.RCPresentedOfferingContext(){}[0]
final val com.revenuecat.purchases.kmp/presentedOfferingContext // com.revenuecat.purchases.kmp/presentedOfferingContext|@cocoapods.PurchasesHybridCommon.RCPackage{}presentedOfferingContext[0]
    final fun (cocoapods.PurchasesHybridCommon/RCPackage).<get-presentedOfferingContext>(): cocoapods.PurchasesHybridCommon/RCPresentedOfferingContext // com.revenuecat.purchases.kmp/presentedOfferingContext.<get-presentedOfferingContext>|<get-presentedOfferingContext>@cocoapods.PurchasesHybridCommon.RCPackage(){}[0]
final val com.revenuecat.purchases.kmp/productIdentifier // com.revenuecat.purchases.kmp/productIdentifier|@cocoapods.PurchasesHybridCommon.RCEntitlementInfo{}productIdentifier[0]
    final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfo).<get-productIdentifier>(): kotlin/String // com.revenuecat.purchases.kmp/productIdentifier.<get-productIdentifier>|<get-productIdentifier>@cocoapods.PurchasesHybridCommon.RCEntitlementInfo(){}[0]
final val com.revenuecat.purchases.kmp/productPlanIdentifier // com.revenuecat.purchases.kmp/productPlanIdentifier|@cocoapods.PurchasesHybridCommon.RCEntitlementInfo{}productPlanIdentifier[0]
    final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfo).<get-productPlanIdentifier>(): kotlin/String? // com.revenuecat.purchases.kmp/productPlanIdentifier.<get-productPlanIdentifier>|<get-productPlanIdentifier>@cocoapods.PurchasesHybridCommon.RCEntitlementInfo(){}[0]
final val com.revenuecat.purchases.kmp/requestDateMillis // com.revenuecat.purchases.kmp/requestDateMillis|@cocoapods.PurchasesHybridCommon.RCCustomerInfo{}requestDateMillis[0]
    final fun (cocoapods.PurchasesHybridCommon/RCCustomerInfo).<get-requestDateMillis>(): kotlin/Long // com.revenuecat.purchases.kmp/requestDateMillis.<get-requestDateMillis>|<get-requestDateMillis>@cocoapods.PurchasesHybridCommon.RCCustomerInfo(){}[0]
final val com.revenuecat.purchases.kmp/revision // com.revenuecat.purchases.kmp/revision|@cocoapods.PurchasesHybridCommon.RCTargetingContext{}revision[0]
    final fun (cocoapods.PurchasesHybridCommon/RCTargetingContext).<get-revision>(): kotlin/Int // com.revenuecat.purchases.kmp/revision.<get-revision>|<get-revision>@cocoapods.PurchasesHybridCommon.RCTargetingContext(){}[0]
final val com.revenuecat.purchases.kmp/ruleId // com.revenuecat.purchases.kmp/ruleId|@cocoapods.PurchasesHybridCommon.RCTargetingContext{}ruleId[0]
    final fun (cocoapods.PurchasesHybridCommon/RCTargetingContext).<get-ruleId>(): kotlin/String // com.revenuecat.purchases.kmp/ruleId.<get-ruleId>|<get-ruleId>@cocoapods.PurchasesHybridCommon.RCTargetingContext(){}[0]
final val com.revenuecat.purchases.kmp/serverDescription // com.revenuecat.purchases.kmp/serverDescription|@cocoapods.PurchasesHybridCommon.RCOffering{}serverDescription[0]
    final fun (cocoapods.PurchasesHybridCommon/RCOffering).<get-serverDescription>(): kotlin/String // com.revenuecat.purchases.kmp/serverDescription.<get-serverDescription>|<get-serverDescription>@cocoapods.PurchasesHybridCommon.RCOffering(){}[0]
final val com.revenuecat.purchases.kmp/sixMonth // com.revenuecat.purchases.kmp/sixMonth|@cocoapods.PurchasesHybridCommon.RCOffering{}sixMonth[0]
    final fun (cocoapods.PurchasesHybridCommon/RCOffering).<get-sixMonth>(): cocoapods.PurchasesHybridCommon/RCPackage? // com.revenuecat.purchases.kmp/sixMonth.<get-sixMonth>|<get-sixMonth>@cocoapods.PurchasesHybridCommon.RCOffering(){}[0]
final val com.revenuecat.purchases.kmp/store // com.revenuecat.purchases.kmp/store|@cocoapods.PurchasesHybridCommon.RCEntitlementInfo{}store[0]
    final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfo).<get-store>(): com.revenuecat.purchases.kmp/Store // com.revenuecat.purchases.kmp/store.<get-store>|<get-store>@cocoapods.PurchasesHybridCommon.RCEntitlementInfo(){}[0]
final val com.revenuecat.purchases.kmp/storeProduct // com.revenuecat.purchases.kmp/storeProduct|@cocoapods.PurchasesHybridCommon.RCPackage{}storeProduct[0]
    final fun (cocoapods.PurchasesHybridCommon/RCPackage).<get-storeProduct>(): cocoapods.PurchasesHybridCommon/RCStoreProduct // com.revenuecat.purchases.kmp/storeProduct.<get-storeProduct>|<get-storeProduct>@cocoapods.PurchasesHybridCommon.RCPackage(){}[0]
final val com.revenuecat.purchases.kmp/targetingContext // com.revenuecat.purchases.kmp/targetingContext|@cocoapods.PurchasesHybridCommon.RCPresentedOfferingContext{}targetingContext[0]
    final fun (cocoapods.PurchasesHybridCommon/RCPresentedOfferingContext).<get-targetingContext>(): cocoapods.PurchasesHybridCommon/RCTargetingContext? // com.revenuecat.purchases.kmp/targetingContext.<get-targetingContext>|<get-targetingContext>@cocoapods.PurchasesHybridCommon.RCPresentedOfferingContext(){}[0]
final val com.revenuecat.purchases.kmp/threeMonth // com.revenuecat.purchases.kmp/threeMonth|@cocoapods.PurchasesHybridCommon.RCOffering{}threeMonth[0]
    final fun (cocoapods.PurchasesHybridCommon/RCOffering).<get-threeMonth>(): cocoapods.PurchasesHybridCommon/RCPackage? // com.revenuecat.purchases.kmp/threeMonth.<get-threeMonth>|<get-threeMonth>@cocoapods.PurchasesHybridCommon.RCOffering(){}[0]
final val com.revenuecat.purchases.kmp/twoMonth // com.revenuecat.purchases.kmp/twoMonth|@cocoapods.PurchasesHybridCommon.RCOffering{}twoMonth[0]
    final fun (cocoapods.PurchasesHybridCommon/RCOffering).<get-twoMonth>(): cocoapods.PurchasesHybridCommon/RCPackage? // com.revenuecat.purchases.kmp/twoMonth.<get-twoMonth>|<get-twoMonth>@cocoapods.PurchasesHybridCommon.RCOffering(){}[0]
final val com.revenuecat.purchases.kmp/unsubscribeDetectedAtMillis // com.revenuecat.purchases.kmp/unsubscribeDetectedAtMillis|@cocoapods.PurchasesHybridCommon.RCEntitlementInfo{}unsubscribeDetectedAtMillis[0]
    final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfo).<get-unsubscribeDetectedAtMillis>(): kotlin/Long? // com.revenuecat.purchases.kmp/unsubscribeDetectedAtMillis.<get-unsubscribeDetectedAtMillis>|<get-unsubscribeDetectedAtMillis>@cocoapods.PurchasesHybridCommon.RCEntitlementInfo(){}[0]
final val com.revenuecat.purchases.kmp/verification // com.revenuecat.purchases.kmp/verification|@cocoapods.PurchasesHybridCommon.RCEntitlementInfos{}verification[0]
    final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfos).<get-verification>(): com.revenuecat.purchases.kmp/VerificationResult // com.revenuecat.purchases.kmp/verification.<get-verification>|<get-verification>@cocoapods.PurchasesHybridCommon.RCEntitlementInfos(){}[0]
final val com.revenuecat.purchases.kmp/verification // com.revenuecat.purchases.kmp/verification|@cocoapods.PurchasesHybridCommon.RCEntitlementInfo{}verification[0]
    final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfo).<get-verification>(): com.revenuecat.purchases.kmp/VerificationResult // com.revenuecat.purchases.kmp/verification.<get-verification>|<get-verification>@cocoapods.PurchasesHybridCommon.RCEntitlementInfo(){}[0]
final val com.revenuecat.purchases.kmp/weekly // com.revenuecat.purchases.kmp/weekly|@cocoapods.PurchasesHybridCommon.RCOffering{}weekly[0]
    final fun (cocoapods.PurchasesHybridCommon/RCOffering).<get-weekly>(): cocoapods.PurchasesHybridCommon/RCPackage? // com.revenuecat.purchases.kmp/weekly.<get-weekly>|<get-weekly>@cocoapods.PurchasesHybridCommon.RCOffering(){}[0]
final val com.revenuecat.purchases.kmp/willRenew // com.revenuecat.purchases.kmp/willRenew|@cocoapods.PurchasesHybridCommon.RCEntitlementInfo{}willRenew[0]
    final fun (cocoapods.PurchasesHybridCommon/RCEntitlementInfo).<get-willRenew>(): kotlin/Boolean // com.revenuecat.purchases.kmp/willRenew.<get-willRenew>|<get-willRenew>@cocoapods.PurchasesHybridCommon.RCEntitlementInfo(){}[0]
open class com.revenuecat.purchases.kmp/PurchasesException : kotlin/Exception { // com.revenuecat.purchases.kmp/PurchasesException|null[0]
    constructor <init>(com.revenuecat.purchases.kmp/PurchasesError) // com.revenuecat.purchases.kmp/PurchasesException.<init>|<init>(com.revenuecat.purchases.kmp.PurchasesError){}[0]
    final val code // com.revenuecat.purchases.kmp/PurchasesException.code|{}code[0]
        final fun <get-code>(): com.revenuecat.purchases.kmp/PurchasesErrorCode // com.revenuecat.purchases.kmp/PurchasesException.code.<get-code>|<get-code>(){}[0]
    final val error // com.revenuecat.purchases.kmp/PurchasesException.error|{}error[0]
        final fun <get-error>(): com.revenuecat.purchases.kmp/PurchasesError // com.revenuecat.purchases.kmp/PurchasesException.error.<get-error>|<get-error>(){}[0]
    final val underlyingErrorMessage // com.revenuecat.purchases.kmp/PurchasesException.underlyingErrorMessage|{}underlyingErrorMessage[0]
        final fun <get-underlyingErrorMessage>(): kotlin/String? // com.revenuecat.purchases.kmp/PurchasesException.underlyingErrorMessage.<get-underlyingErrorMessage>|<get-underlyingErrorMessage>(){}[0]
    open val message // com.revenuecat.purchases.kmp/PurchasesException.message|{}message[0]
        open fun <get-message>(): kotlin/String // com.revenuecat.purchases.kmp/PurchasesException.message.<get-message>|<get-message>(){}[0]
}
