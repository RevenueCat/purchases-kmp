// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.revenuecat.purchases:core>
final class com.revenuecat.purchases.kmp.i18n/Locale { // com.revenuecat.purchases.kmp.i18n/Locale|null[0]
    final object Companion { // com.revenuecat.purchases.kmp.i18n/Locale.Companion|null[0]
        final fun create(kotlin/String, kotlin/String): com.revenuecat.purchases.kmp.i18n/Locale // com.revenuecat.purchases.kmp.i18n/Locale.Companion.create|create(kotlin.String;kotlin.String){}[0]
        final val Default // com.revenuecat.purchases.kmp.i18n/Locale.Companion.Default|{}Default[0]
            final fun <get-Default>(): com.revenuecat.purchases.kmp.i18n/Locale // com.revenuecat.purchases.kmp.i18n/Locale.Companion.Default.<get-Default>|<get-Default>(){}[0]
    }
    final val countryCode // com.revenuecat.purchases.kmp.i18n/Locale.countryCode|{}countryCode[0]
        final fun <get-countryCode>(): kotlin/String // com.revenuecat.purchases.kmp.i18n/Locale.countryCode.<get-countryCode>|<get-countryCode>(){}[0]
    final val languageCode // com.revenuecat.purchases.kmp.i18n/Locale.languageCode|{}languageCode[0]
        final fun <get-languageCode>(): kotlin/String // com.revenuecat.purchases.kmp.i18n/Locale.languageCode.<get-languageCode>|<get-languageCode>(){}[0]
}
final class com.revenuecat.purchases.kmp.ktx/SuccessfulLogin { // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin|null[0]
    constructor <init>(com.revenuecat.purchases.kmp/CustomerInfo, kotlin/Boolean) // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.<init>|<init>(com.revenuecat.purchases.kmp.CustomerInfo;kotlin.Boolean){}[0]
    final fun component1(): com.revenuecat.purchases.kmp/CustomerInfo // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.component2|component2(){}[0]
    final fun copy(com.revenuecat.purchases.kmp/CustomerInfo =..., kotlin/Boolean =...): com.revenuecat.purchases.kmp.ktx/SuccessfulLogin // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.copy|copy(com.revenuecat.purchases.kmp.CustomerInfo;kotlin.Boolean){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.toString|toString(){}[0]
    final val created // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.created|{}created[0]
        final fun <get-created>(): kotlin/Boolean // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.created.<get-created>|<get-created>(){}[0]
    final val customerInfo // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.customerInfo|{}customerInfo[0]
        final fun <get-customerInfo>(): com.revenuecat.purchases.kmp/CustomerInfo // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.customerInfo.<get-customerInfo>|<get-customerInfo>(){}[0]
}
final class com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase { // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase|null[0]
    constructor <init>(com.revenuecat.purchases.kmp.models/StoreTransaction, com.revenuecat.purchases.kmp/CustomerInfo) // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.<init>|<init>(com.revenuecat.purchases.kmp.models.StoreTransaction;com.revenuecat.purchases.kmp.CustomerInfo){}[0]
    final fun component1(): com.revenuecat.purchases.kmp.models/StoreTransaction // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.component1|component1(){}[0]
    final fun component2(): com.revenuecat.purchases.kmp/CustomerInfo // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.component2|component2(){}[0]
    final fun copy(com.revenuecat.purchases.kmp.models/StoreTransaction =..., com.revenuecat.purchases.kmp/CustomerInfo =...): com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.copy|copy(com.revenuecat.purchases.kmp.models.StoreTransaction;com.revenuecat.purchases.kmp.CustomerInfo){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.toString|toString(){}[0]
    final val customerInfo // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.customerInfo|{}customerInfo[0]
        final fun <get-customerInfo>(): com.revenuecat.purchases.kmp/CustomerInfo // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.customerInfo.<get-customerInfo>|<get-customerInfo>(){}[0]
    final val storeTransaction // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.storeTransaction|{}storeTransaction[0]
        final fun <get-storeTransaction>(): com.revenuecat.purchases.kmp.models/StoreTransaction // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.storeTransaction.<get-storeTransaction>|<get-storeTransaction>(){}[0]
}
final class com.revenuecat.purchases.kmp/Purchases { // com.revenuecat.purchases.kmp/Purchases|null[0]
    final fun close() // com.revenuecat.purchases.kmp/Purchases.close|close(){}[0]
    final fun collectDeviceIdentifiers() // com.revenuecat.purchases.kmp/Purchases.collectDeviceIdentifiers|collectDeviceIdentifiers(){}[0]
    final fun getCustomerInfo(com.revenuecat.purchases.kmp/CacheFetchPolicy =..., kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function1<com.revenuecat.purchases.kmp/CustomerInfo, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.getCustomerInfo|getCustomerInfo(com.revenuecat.purchases.kmp.CacheFetchPolicy;kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function1<com.revenuecat.purchases.kmp.CustomerInfo,kotlin.Unit>){}[0]
    final fun getOfferings(kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function1<com.revenuecat.purchases.kmp/Offerings, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.getOfferings|getOfferings(kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function1<com.revenuecat.purchases.kmp.Offerings,kotlin.Unit>){}[0]
    final fun getProducts(kotlin.collections/List<kotlin/String>, kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function1<kotlin.collections/List<com.revenuecat.purchases.kmp.models/StoreProduct>, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.getProducts|getProducts(kotlin.collections.List<kotlin.String>;kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function1<kotlin.collections.List<com.revenuecat.purchases.kmp.models.StoreProduct>,kotlin.Unit>){}[0]
    final fun getPromotionalOffer(com.revenuecat.purchases.kmp.models/StoreProductDiscount, com.revenuecat.purchases.kmp.models/StoreProduct, kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function1<com.revenuecat.purchases.kmp.models/PromotionalOffer, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.getPromotionalOffer|getPromotionalOffer(com.revenuecat.purchases.kmp.models.StoreProductDiscount;com.revenuecat.purchases.kmp.models.StoreProduct;kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function1<com.revenuecat.purchases.kmp.models.PromotionalOffer,kotlin.Unit>){}[0]
    final fun invalidateCustomerInfoCache() // com.revenuecat.purchases.kmp/Purchases.invalidateCustomerInfoCache|invalidateCustomerInfoCache(){}[0]
    final fun logIn(kotlin/String, kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function2<com.revenuecat.purchases.kmp/CustomerInfo, kotlin/Boolean, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.logIn|logIn(kotlin.String;kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function2<com.revenuecat.purchases.kmp.CustomerInfo,kotlin.Boolean,kotlin.Unit>){}[0]
    final fun logOut(kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function1<com.revenuecat.purchases.kmp/CustomerInfo, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.logOut|logOut(kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function1<com.revenuecat.purchases.kmp.CustomerInfo,kotlin.Unit>){}[0]
    final fun purchase(com.revenuecat.purchases.kmp.models/StoreProduct, com.revenuecat.purchases.kmp.models/PromotionalOffer, kotlin/Function2<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Boolean, kotlin/Unit>, kotlin/Function2<com.revenuecat.purchases.kmp.models/StoreTransaction, com.revenuecat.purchases.kmp/CustomerInfo, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.purchase|purchase(com.revenuecat.purchases.kmp.models.StoreProduct;com.revenuecat.purchases.kmp.models.PromotionalOffer;kotlin.Function2<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Boolean,kotlin.Unit>;kotlin.Function2<com.revenuecat.purchases.kmp.models.StoreTransaction,com.revenuecat.purchases.kmp.CustomerInfo,kotlin.Unit>){}[0]
    final fun purchase(com.revenuecat.purchases.kmp.models/StoreProduct, kotlin/Function2<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Boolean, kotlin/Unit>, kotlin/Function2<com.revenuecat.purchases.kmp.models/StoreTransaction, com.revenuecat.purchases.kmp/CustomerInfo, kotlin/Unit>, kotlin/Boolean? =..., kotlin/String? =..., com.revenuecat.purchases.kmp/ReplacementMode? =...) // com.revenuecat.purchases.kmp/Purchases.purchase|purchase(com.revenuecat.purchases.kmp.models.StoreProduct;kotlin.Function2<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Boolean,kotlin.Unit>;kotlin.Function2<com.revenuecat.purchases.kmp.models.StoreTransaction,com.revenuecat.purchases.kmp.CustomerInfo,kotlin.Unit>;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.ReplacementMode?){}[0]
    final fun purchase(com.revenuecat.purchases.kmp.models/SubscriptionOption, kotlin/Function2<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Boolean, kotlin/Unit>, kotlin/Function2<com.revenuecat.purchases.kmp.models/StoreTransaction, com.revenuecat.purchases.kmp/CustomerInfo, kotlin/Unit>, kotlin/Boolean? =..., kotlin/String? =..., com.revenuecat.purchases.kmp/ReplacementMode? =...) // com.revenuecat.purchases.kmp/Purchases.purchase|purchase(com.revenuecat.purchases.kmp.models.SubscriptionOption;kotlin.Function2<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Boolean,kotlin.Unit>;kotlin.Function2<com.revenuecat.purchases.kmp.models.StoreTransaction,com.revenuecat.purchases.kmp.CustomerInfo,kotlin.Unit>;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.ReplacementMode?){}[0]
    final fun purchase(com.revenuecat.purchases.kmp/Package, com.revenuecat.purchases.kmp.models/PromotionalOffer, kotlin/Function2<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Boolean, kotlin/Unit>, kotlin/Function2<com.revenuecat.purchases.kmp.models/StoreTransaction, com.revenuecat.purchases.kmp/CustomerInfo, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.purchase|purchase(com.revenuecat.purchases.kmp.Package;com.revenuecat.purchases.kmp.models.PromotionalOffer;kotlin.Function2<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Boolean,kotlin.Unit>;kotlin.Function2<com.revenuecat.purchases.kmp.models.StoreTransaction,com.revenuecat.purchases.kmp.CustomerInfo,kotlin.Unit>){}[0]
    final fun purchase(com.revenuecat.purchases.kmp/Package, kotlin/Function2<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Boolean, kotlin/Unit>, kotlin/Function2<com.revenuecat.purchases.kmp.models/StoreTransaction, com.revenuecat.purchases.kmp/CustomerInfo, kotlin/Unit>, kotlin/Boolean? =..., kotlin/String? =..., com.revenuecat.purchases.kmp/ReplacementMode? =...) // com.revenuecat.purchases.kmp/Purchases.purchase|purchase(com.revenuecat.purchases.kmp.Package;kotlin.Function2<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Boolean,kotlin.Unit>;kotlin.Function2<com.revenuecat.purchases.kmp.models.StoreTransaction,com.revenuecat.purchases.kmp.CustomerInfo,kotlin.Unit>;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.ReplacementMode?){}[0]
    final fun recordPurchase(kotlin/String, kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function1<com.revenuecat.purchases.kmp.models/StoreTransaction, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.recordPurchase|recordPurchase(kotlin.String;kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function1<com.revenuecat.purchases.kmp.models.StoreTransaction,kotlin.Unit>){}[0]
    final fun restorePurchases(kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function1<com.revenuecat.purchases.kmp/CustomerInfo, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.restorePurchases|restorePurchases(kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function1<com.revenuecat.purchases.kmp.CustomerInfo,kotlin.Unit>){}[0]
    final fun setAd(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setAd|setAd(kotlin.String?){}[0]
    final fun setAdGroup(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setAdGroup|setAdGroup(kotlin.String?){}[0]
    final fun setAdjustID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setAdjustID|setAdjustID(kotlin.String?){}[0]
    final fun setAirshipChannelID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setAirshipChannelID|setAirshipChannelID(kotlin.String?){}[0]
    final fun setAppsflyerID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setAppsflyerID|setAppsflyerID(kotlin.String?){}[0]
    final fun setAttributes(kotlin.collections/Map<kotlin/String, kotlin/String?>) // com.revenuecat.purchases.kmp/Purchases.setAttributes|setAttributes(kotlin.collections.Map<kotlin.String,kotlin.String?>){}[0]
    final fun setCampaign(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setCampaign|setCampaign(kotlin.String?){}[0]
    final fun setCleverTapID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setCleverTapID|setCleverTapID(kotlin.String?){}[0]
    final fun setCreative(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setCreative|setCreative(kotlin.String?){}[0]
    final fun setDisplayName(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setDisplayName|setDisplayName(kotlin.String?){}[0]
    final fun setEmail(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setEmail|setEmail(kotlin.String?){}[0]
    final fun setFBAnonymousID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setFBAnonymousID|setFBAnonymousID(kotlin.String?){}[0]
    final fun setFirebaseAppInstanceID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setFirebaseAppInstanceID|setFirebaseAppInstanceID(kotlin.String?){}[0]
    final fun setKeyword(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setKeyword|setKeyword(kotlin.String?){}[0]
    final fun setMediaSource(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setMediaSource|setMediaSource(kotlin.String?){}[0]
    final fun setMixpanelDistinctID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setMixpanelDistinctID|setMixpanelDistinctID(kotlin.String?){}[0]
    final fun setMparticleID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setMparticleID|setMparticleID(kotlin.String?){}[0]
    final fun setOnesignalID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setOnesignalID|setOnesignalID(kotlin.String?){}[0]
    final fun setOnesignalUserID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setOnesignalUserID|setOnesignalUserID(kotlin.String?){}[0]
    final fun setPhoneNumber(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setPhoneNumber|setPhoneNumber(kotlin.String?){}[0]
    final fun setPushToken(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setPushToken|setPushToken(kotlin.String?){}[0]
    final fun showInAppMessagesIfNeeded(kotlin.collections/List<com.revenuecat.purchases.kmp.models/StoreMessageType> =...) // com.revenuecat.purchases.kmp/Purchases.showInAppMessagesIfNeeded|showInAppMessagesIfNeeded(kotlin.collections.List<com.revenuecat.purchases.kmp.models.StoreMessageType>){}[0]
    final fun syncAmazonPurchase(kotlin/String, kotlin/String, kotlin/String, kotlin/String?, kotlin/Double?) // com.revenuecat.purchases.kmp/Purchases.syncAmazonPurchase|syncAmazonPurchase(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlin.Double?){}[0]
    final fun syncAttributesAndOfferingsIfNeeded(kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function1<com.revenuecat.purchases.kmp/Offerings, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.syncAttributesAndOfferingsIfNeeded|syncAttributesAndOfferingsIfNeeded(kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function1<com.revenuecat.purchases.kmp.Offerings,kotlin.Unit>){}[0]
    final fun syncPurchases(kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesError, kotlin/Unit>, kotlin/Function1<com.revenuecat.purchases.kmp/CustomerInfo, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.syncPurchases|syncPurchases(kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesError,kotlin.Unit>;kotlin.Function1<com.revenuecat.purchases.kmp.CustomerInfo,kotlin.Unit>){}[0]
    final object Companion { // com.revenuecat.purchases.kmp/Purchases.Companion|null[0]
        final fun canMakePayments(kotlin.collections/List<com.revenuecat.purchases.kmp.models/BillingFeature> =..., kotlin/Function1<kotlin/Boolean, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.Companion.canMakePayments|canMakePayments(kotlin.collections.List<com.revenuecat.purchases.kmp.models.BillingFeature>;kotlin.Function1<kotlin.Boolean,kotlin.Unit>){}[0]
        final fun configure(com.revenuecat.purchases.kmp/PurchasesConfiguration): com.revenuecat.purchases.kmp/Purchases // com.revenuecat.purchases.kmp/Purchases.Companion.configure|configure(com.revenuecat.purchases.kmp.PurchasesConfiguration){}[0]
        final val isConfigured // com.revenuecat.purchases.kmp/Purchases.Companion.isConfigured|{}isConfigured[0]
            final fun <get-isConfigured>(): kotlin/Boolean // com.revenuecat.purchases.kmp/Purchases.Companion.isConfigured.<get-isConfigured>|<get-isConfigured>(){}[0]
        final val sharedInstance // com.revenuecat.purchases.kmp/Purchases.Companion.sharedInstance|{}sharedInstance[0]
            final fun <get-sharedInstance>(): com.revenuecat.purchases.kmp/Purchases // com.revenuecat.purchases.kmp/Purchases.Companion.sharedInstance.<get-sharedInstance>|<get-sharedInstance>(){}[0]
        final var forceUniversalAppStore // com.revenuecat.purchases.kmp/Purchases.Companion.forceUniversalAppStore|{}forceUniversalAppStore[0]
            final fun <get-forceUniversalAppStore>(): kotlin/Boolean // com.revenuecat.purchases.kmp/Purchases.Companion.forceUniversalAppStore.<get-forceUniversalAppStore>|<get-forceUniversalAppStore>(){}[0]
            final fun <set-forceUniversalAppStore>(kotlin/Boolean) // com.revenuecat.purchases.kmp/Purchases.Companion.forceUniversalAppStore.<set-forceUniversalAppStore>|<set-forceUniversalAppStore>(kotlin.Boolean){}[0]
        final var logHandler // com.revenuecat.purchases.kmp/Purchases.Companion.logHandler|{}logHandler[0]
            final fun <get-logHandler>(): com.revenuecat.purchases.kmp/LogHandler // com.revenuecat.purchases.kmp/Purchases.Companion.logHandler.<get-logHandler>|<get-logHandler>(){}[0]
            final fun <set-logHandler>(com.revenuecat.purchases.kmp/LogHandler) // com.revenuecat.purchases.kmp/Purchases.Companion.logHandler.<set-logHandler>|<set-logHandler>(com.revenuecat.purchases.kmp.LogHandler){}[0]
        final var logLevel // com.revenuecat.purchases.kmp/Purchases.Companion.logLevel|{}logLevel[0]
            final fun <get-logLevel>(): com.revenuecat.purchases.kmp/LogLevel // com.revenuecat.purchases.kmp/Purchases.Companion.logLevel.<get-logLevel>|<get-logLevel>(){}[0]
            final fun <set-logLevel>(com.revenuecat.purchases.kmp/LogLevel) // com.revenuecat.purchases.kmp/Purchases.Companion.logLevel.<set-logLevel>|<set-logLevel>(com.revenuecat.purchases.kmp.LogLevel){}[0]
        final var proxyURL // com.revenuecat.purchases.kmp/Purchases.Companion.proxyURL|{}proxyURL[0]
            final fun <get-proxyURL>(): kotlin/String? // com.revenuecat.purchases.kmp/Purchases.Companion.proxyURL.<get-proxyURL>|<get-proxyURL>(){}[0]
            final fun <set-proxyURL>(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.Companion.proxyURL.<set-proxyURL>|<set-proxyURL>(kotlin.String?){}[0]
        final var simulatesAskToBuyInSandbox // com.revenuecat.purchases.kmp/Purchases.Companion.simulatesAskToBuyInSandbox|{}simulatesAskToBuyInSandbox[0]
            final fun <get-simulatesAskToBuyInSandbox>(): kotlin/Boolean // com.revenuecat.purchases.kmp/Purchases.Companion.simulatesAskToBuyInSandbox.<get-simulatesAskToBuyInSandbox>|<get-simulatesAskToBuyInSandbox>(){}[0]
            final fun <set-simulatesAskToBuyInSandbox>(kotlin/Boolean) // com.revenuecat.purchases.kmp/Purchases.Companion.simulatesAskToBuyInSandbox.<set-simulatesAskToBuyInSandbox>|<set-simulatesAskToBuyInSandbox>(kotlin.Boolean){}[0]
    }
    final val appUserID // com.revenuecat.purchases.kmp/Purchases.appUserID|{}appUserID[0]
        final fun <get-appUserID>(): kotlin/String // com.revenuecat.purchases.kmp/Purchases.appUserID.<get-appUserID>|<get-appUserID>(){}[0]
    final val isAnonymous // com.revenuecat.purchases.kmp/Purchases.isAnonymous|{}isAnonymous[0]
        final fun <get-isAnonymous>(): kotlin/Boolean // com.revenuecat.purchases.kmp/Purchases.isAnonymous.<get-isAnonymous>|<get-isAnonymous>(){}[0]
    final val store // com.revenuecat.purchases.kmp/Purchases.store|{}store[0]
        final fun <get-store>(): com.revenuecat.purchases.kmp/Store // com.revenuecat.purchases.kmp/Purchases.store.<get-store>|<get-store>(){}[0]
    final var delegate // com.revenuecat.purchases.kmp/Purchases.delegate|{}delegate[0]
        final fun <get-delegate>(): com.revenuecat.purchases.kmp/PurchasesDelegate? // com.revenuecat.purchases.kmp/Purchases.delegate.<get-delegate>|<get-delegate>(){}[0]
        final fun <set-delegate>(com.revenuecat.purchases.kmp/PurchasesDelegate?) // com.revenuecat.purchases.kmp/Purchases.delegate.<set-delegate>|<set-delegate>(com.revenuecat.purchases.kmp.PurchasesDelegate?){}[0]
}
final fun (com.revenuecat.purchases.kmp.i18n/Locale).com.revenuecat.purchases.kmp.i18n/toNsLocale(): platform.Foundation/NSLocale // com.revenuecat.purchases.kmp.i18n/toNsLocale|toNsLocale@com.revenuecat.purchases.kmp.i18n.Locale(){}[0]
final fun (com.revenuecat.purchases.kmp/Purchases.Companion).com.revenuecat.purchases.kmp/configure(kotlin/String, kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder, kotlin/Unit> =...): com.revenuecat.purchases.kmp/Purchases // com.revenuecat.purchases.kmp/configure|configure@com.revenuecat.purchases.kmp.Purchases.Companion(kotlin.String;kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesConfiguration.Builder,kotlin.Unit>){}[0]
final fun (platform.Foundation/NSLocale).com.revenuecat.purchases.kmp.i18n/toLocale(): com.revenuecat.purchases.kmp.i18n/Locale // com.revenuecat.purchases.kmp.i18n/toLocale|toLocale@platform.Foundation.NSLocale(){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitCustomerInfo(com.revenuecat.purchases.kmp/CacheFetchPolicy =...): com.revenuecat.purchases.kmp/CustomerInfo // com.revenuecat.purchases.kmp.ktx/awaitCustomerInfo|awaitCustomerInfo@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.CacheFetchPolicy){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitGetProducts(kotlin.collections/List<kotlin/String>): kotlin.collections/List<com.revenuecat.purchases.kmp.models/StoreProduct> // com.revenuecat.purchases.kmp.ktx/awaitGetProducts|awaitGetProducts@com.revenuecat.purchases.kmp.Purchases(kotlin.collections.List<kotlin.String>){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitLogIn(kotlin/String): com.revenuecat.purchases.kmp.ktx/SuccessfulLogin // com.revenuecat.purchases.kmp.ktx/awaitLogIn|awaitLogIn@com.revenuecat.purchases.kmp.Purchases(kotlin.String){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitLogOut(): com.revenuecat.purchases.kmp/CustomerInfo // com.revenuecat.purchases.kmp.ktx/awaitLogOut|awaitLogOut@com.revenuecat.purchases.kmp.Purchases(){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitOfferings(): com.revenuecat.purchases.kmp/Offerings // com.revenuecat.purchases.kmp.ktx/awaitOfferings|awaitOfferings@com.revenuecat.purchases.kmp.Purchases(){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitPromotionalOffer(com.revenuecat.purchases.kmp.models/StoreProductDiscount, com.revenuecat.purchases.kmp.models/StoreProduct): com.revenuecat.purchases.kmp.models/PromotionalOffer // com.revenuecat.purchases.kmp.ktx/awaitPromotionalOffer|awaitPromotionalOffer@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.StoreProductDiscount;com.revenuecat.purchases.kmp.models.StoreProduct){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitPurchase(com.revenuecat.purchases.kmp.models/StoreProduct, com.revenuecat.purchases.kmp.models/PromotionalOffer): com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase // com.revenuecat.purchases.kmp.ktx/awaitPurchase|awaitPurchase@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.StoreProduct;com.revenuecat.purchases.kmp.models.PromotionalOffer){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitPurchase(com.revenuecat.purchases.kmp.models/StoreProduct, kotlin/Boolean? =..., kotlin/String? =..., com.revenuecat.purchases.kmp.models/GoogleReplacementMode =...): com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase // com.revenuecat.purchases.kmp.ktx/awaitPurchase|awaitPurchase@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.StoreProduct;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.GoogleReplacementMode){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitPurchase(com.revenuecat.purchases.kmp.models/SubscriptionOption, kotlin/Boolean? =..., kotlin/String? =..., com.revenuecat.purchases.kmp.models/GoogleReplacementMode =...): com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase // com.revenuecat.purchases.kmp.ktx/awaitPurchase|awaitPurchase@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.SubscriptionOption;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.GoogleReplacementMode){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitPurchase(com.revenuecat.purchases.kmp/Package, com.revenuecat.purchases.kmp.models/PromotionalOffer): com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase // com.revenuecat.purchases.kmp.ktx/awaitPurchase|awaitPurchase@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.Package;com.revenuecat.purchases.kmp.models.PromotionalOffer){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitPurchase(com.revenuecat.purchases.kmp/Package, kotlin/Boolean? =..., kotlin/String? =..., com.revenuecat.purchases.kmp.models/GoogleReplacementMode =...): com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase // com.revenuecat.purchases.kmp.ktx/awaitPurchase|awaitPurchase@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.Package;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.GoogleReplacementMode){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitRestore(): com.revenuecat.purchases.kmp/CustomerInfo // com.revenuecat.purchases.kmp.ktx/awaitRestore|awaitRestore@com.revenuecat.purchases.kmp.Purchases(){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitSyncAttributesAndOfferingsIfNeeded(): com.revenuecat.purchases.kmp/Offerings // com.revenuecat.purchases.kmp.ktx/awaitSyncAttributesAndOfferingsIfNeeded|awaitSyncAttributesAndOfferingsIfNeeded@com.revenuecat.purchases.kmp.Purchases(){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitSyncPurchases(): com.revenuecat.purchases.kmp/CustomerInfo // com.revenuecat.purchases.kmp.ktx/awaitSyncPurchases|awaitSyncPurchases@com.revenuecat.purchases.kmp.Purchases(){}[0]
final val com.revenuecat.purchases.kmp/frameworkVersion // com.revenuecat.purchases.kmp/frameworkVersion|@com.revenuecat.purchases.kmp.Purchases.Companion{}frameworkVersion[0]
    final fun (com.revenuecat.purchases.kmp/Purchases.Companion).<get-frameworkVersion>(): kotlin/String // com.revenuecat.purchases.kmp/frameworkVersion.<get-frameworkVersion>|<get-frameworkVersion>@com.revenuecat.purchases.kmp.Purchases.Companion(){}[0]
