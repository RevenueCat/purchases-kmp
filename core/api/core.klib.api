// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.revenuecat.purchases:core>
abstract interface com.revenuecat.purchases.kmp/LogHandler { // com.revenuecat.purchases.kmp/LogHandler|null[0]
    abstract fun d(kotlin/String, kotlin/String) // com.revenuecat.purchases.kmp/LogHandler.d|d(kotlin.String;kotlin.String){}[0]
    abstract fun e(kotlin/String, kotlin/String, kotlin/Throwable?) // com.revenuecat.purchases.kmp/LogHandler.e|e(kotlin.String;kotlin.String;kotlin.Throwable?){}[0]
    abstract fun i(kotlin/String, kotlin/String) // com.revenuecat.purchases.kmp/LogHandler.i|i(kotlin.String;kotlin.String){}[0]
    abstract fun v(kotlin/String, kotlin/String) // com.revenuecat.purchases.kmp/LogHandler.v|v(kotlin.String;kotlin.String){}[0]
    abstract fun w(kotlin/String, kotlin/String) // com.revenuecat.purchases.kmp/LogHandler.w|w(kotlin.String;kotlin.String){}[0]
}
abstract interface com.revenuecat.purchases.kmp/PurchasesDelegate { // com.revenuecat.purchases.kmp/PurchasesDelegate|null[0]
    abstract fun onCustomerInfoUpdated(com.revenuecat.purchases.kmp.models/CustomerInfo) // com.revenuecat.purchases.kmp/PurchasesDelegate.onCustomerInfoUpdated|onCustomerInfoUpdated(com.revenuecat.purchases.kmp.models.CustomerInfo){}[0]
    abstract fun onPurchasePromoProduct(com.revenuecat.purchases.kmp.models/StoreProduct, kotlin/Function2<kotlin/Function2<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin/Boolean, kotlin/Unit>, kotlin/Function2<com.revenuecat.purchases.kmp.models/StoreTransaction, com.revenuecat.purchases.kmp.models/CustomerInfo, kotlin/Unit>, kotlin/Unit>) // com.revenuecat.purchases.kmp/PurchasesDelegate.onPurchasePromoProduct|onPurchasePromoProduct(com.revenuecat.purchases.kmp.models.StoreProduct;kotlin.Function2<kotlin.Function2<com.revenuecat.purchases.kmp.models.PurchasesError,kotlin.Boolean,kotlin.Unit>,kotlin.Function2<com.revenuecat.purchases.kmp.models.StoreTransaction,com.revenuecat.purchases.kmp.models.CustomerInfo,kotlin.Unit>,kotlin.Unit>){}[0]
}
final class com.revenuecat.purchases.kmp.ktx/SuccessfulLogin { // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin|null[0]
    constructor <init>(com.revenuecat.purchases.kmp.models/CustomerInfo, kotlin/Boolean) // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.<init>|<init>(com.revenuecat.purchases.kmp.models.CustomerInfo;kotlin.Boolean){}[0]
    final val created // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.created|{}created[0]
        final fun <get-created>(): kotlin/Boolean // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.created.<get-created>|<get-created>(){}[0]
    final val customerInfo // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.customerInfo|{}customerInfo[0]
        final fun <get-customerInfo>(): com.revenuecat.purchases.kmp.models/CustomerInfo // com.revenuecat.purchases.kmp.ktx/SuccessfulLogin.customerInfo.<get-customerInfo>|<get-customerInfo>(){}[0]
}
final class com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase { // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase|null[0]
    constructor <init>(com.revenuecat.purchases.kmp.models/StoreTransaction, com.revenuecat.purchases.kmp.models/CustomerInfo) // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.<init>|<init>(com.revenuecat.purchases.kmp.models.StoreTransaction;com.revenuecat.purchases.kmp.models.CustomerInfo){}[0]
    final val customerInfo // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.customerInfo|{}customerInfo[0]
        final fun <get-customerInfo>(): com.revenuecat.purchases.kmp.models/CustomerInfo // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.customerInfo.<get-customerInfo>|<get-customerInfo>(){}[0]
    final val storeTransaction // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.storeTransaction|{}storeTransaction[0]
        final fun <get-storeTransaction>(): com.revenuecat.purchases.kmp.models/StoreTransaction // com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase.storeTransaction.<get-storeTransaction>|<get-storeTransaction>(){}[0]
}
final class com.revenuecat.purchases.kmp/Purchases { // com.revenuecat.purchases.kmp/Purchases|null[0]
    final fun close() // com.revenuecat.purchases.kmp/Purchases.close|close(){}[0]
    final fun collectDeviceIdentifiers() // com.revenuecat.purchases.kmp/Purchases.collectDeviceIdentifiers|collectDeviceIdentifiers(){}[0]
    final fun getCustomerInfo(com.revenuecat.purchases.kmp.models/CacheFetchPolicy =..., kotlin/Function1<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin/Unit>, kotlin/Function1<com.revenuecat.purchases.kmp.models/CustomerInfo, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.getCustomerInfo|getCustomerInfo(com.revenuecat.purchases.kmp.models.CacheFetchPolicy;kotlin.Function1<com.revenuecat.purchases.kmp.models.PurchasesError,kotlin.Unit>;kotlin.Function1<com.revenuecat.purchases.kmp.models.CustomerInfo,kotlin.Unit>){}[0]
    final fun getOfferings(kotlin/Function1<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin/Unit>, kotlin/Function1<com.revenuecat.purchases.kmp.models/Offerings, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.getOfferings|getOfferings(kotlin.Function1<com.revenuecat.purchases.kmp.models.PurchasesError,kotlin.Unit>;kotlin.Function1<com.revenuecat.purchases.kmp.models.Offerings,kotlin.Unit>){}[0]
    final fun getProducts(kotlin.collections/List<kotlin/String>, kotlin/Function1<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin/Unit>, kotlin/Function1<kotlin.collections/List<com.revenuecat.purchases.kmp.models/StoreProduct>, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.getProducts|getProducts(kotlin.collections.List<kotlin.String>;kotlin.Function1<com.revenuecat.purchases.kmp.models.PurchasesError,kotlin.Unit>;kotlin.Function1<kotlin.collections.List<com.revenuecat.purchases.kmp.models.StoreProduct>,kotlin.Unit>){}[0]
    final fun getPromotionalOffer(com.revenuecat.purchases.kmp.models/StoreProductDiscount, com.revenuecat.purchases.kmp.models/StoreProduct, kotlin/Function1<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin/Unit>, kotlin/Function1<com.revenuecat.purchases.kmp.models/PromotionalOffer, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.getPromotionalOffer|getPromotionalOffer(com.revenuecat.purchases.kmp.models.StoreProductDiscount;com.revenuecat.purchases.kmp.models.StoreProduct;kotlin.Function1<com.revenuecat.purchases.kmp.models.PurchasesError,kotlin.Unit>;kotlin.Function1<com.revenuecat.purchases.kmp.models.PromotionalOffer,kotlin.Unit>){}[0]
    final fun invalidateCustomerInfoCache() // com.revenuecat.purchases.kmp/Purchases.invalidateCustomerInfoCache|invalidateCustomerInfoCache(){}[0]
    final fun logIn(kotlin/String, kotlin/Function1<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin/Unit>, kotlin/Function2<com.revenuecat.purchases.kmp.models/CustomerInfo, kotlin/Boolean, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.logIn|logIn(kotlin.String;kotlin.Function1<com.revenuecat.purchases.kmp.models.PurchasesError,kotlin.Unit>;kotlin.Function2<com.revenuecat.purchases.kmp.models.CustomerInfo,kotlin.Boolean,kotlin.Unit>){}[0]
    final fun logOut(kotlin/Function1<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin/Unit>, kotlin/Function1<com.revenuecat.purchases.kmp.models/CustomerInfo, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.logOut|logOut(kotlin.Function1<com.revenuecat.purchases.kmp.models.PurchasesError,kotlin.Unit>;kotlin.Function1<com.revenuecat.purchases.kmp.models.CustomerInfo,kotlin.Unit>){}[0]
    final fun purchase(com.revenuecat.purchases.kmp.models/Package, com.revenuecat.purchases.kmp.models/PromotionalOffer, kotlin/Function2<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin/Boolean, kotlin/Unit>, kotlin/Function2<com.revenuecat.purchases.kmp.models/StoreTransaction, com.revenuecat.purchases.kmp.models/CustomerInfo, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.purchase|purchase(com.revenuecat.purchases.kmp.models.Package;com.revenuecat.purchases.kmp.models.PromotionalOffer;kotlin.Function2<com.revenuecat.purchases.kmp.models.PurchasesError,kotlin.Boolean,kotlin.Unit>;kotlin.Function2<com.revenuecat.purchases.kmp.models.StoreTransaction,com.revenuecat.purchases.kmp.models.CustomerInfo,kotlin.Unit>){}[0]
    final fun purchase(com.revenuecat.purchases.kmp.models/Package, kotlin/Function2<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin/Boolean, kotlin/Unit>, kotlin/Function2<com.revenuecat.purchases.kmp.models/StoreTransaction, com.revenuecat.purchases.kmp.models/CustomerInfo, kotlin/Unit>, kotlin/Boolean? =..., kotlin/String? =..., com.revenuecat.purchases.kmp.models/ReplacementMode? =...) // com.revenuecat.purchases.kmp/Purchases.purchase|purchase(com.revenuecat.purchases.kmp.models.Package;kotlin.Function2<com.revenuecat.purchases.kmp.models.PurchasesError,kotlin.Boolean,kotlin.Unit>;kotlin.Function2<com.revenuecat.purchases.kmp.models.StoreTransaction,com.revenuecat.purchases.kmp.models.CustomerInfo,kotlin.Unit>;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.ReplacementMode?){}[0]
    final fun purchase(com.revenuecat.purchases.kmp.models/StoreProduct, com.revenuecat.purchases.kmp.models/PromotionalOffer, kotlin/Function2<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin/Boolean, kotlin/Unit>, kotlin/Function2<com.revenuecat.purchases.kmp.models/StoreTransaction, com.revenuecat.purchases.kmp.models/CustomerInfo, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.purchase|purchase(com.revenuecat.purchases.kmp.models.StoreProduct;com.revenuecat.purchases.kmp.models.PromotionalOffer;kotlin.Function2<com.revenuecat.purchases.kmp.models.PurchasesError,kotlin.Boolean,kotlin.Unit>;kotlin.Function2<com.revenuecat.purchases.kmp.models.StoreTransaction,com.revenuecat.purchases.kmp.models.CustomerInfo,kotlin.Unit>){}[0]
    final fun purchase(com.revenuecat.purchases.kmp.models/StoreProduct, kotlin/Function2<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin/Boolean, kotlin/Unit>, kotlin/Function2<com.revenuecat.purchases.kmp.models/StoreTransaction, com.revenuecat.purchases.kmp.models/CustomerInfo, kotlin/Unit>, kotlin/Boolean? =..., kotlin/String? =..., com.revenuecat.purchases.kmp.models/ReplacementMode? =...) // com.revenuecat.purchases.kmp/Purchases.purchase|purchase(com.revenuecat.purchases.kmp.models.StoreProduct;kotlin.Function2<com.revenuecat.purchases.kmp.models.PurchasesError,kotlin.Boolean,kotlin.Unit>;kotlin.Function2<com.revenuecat.purchases.kmp.models.StoreTransaction,com.revenuecat.purchases.kmp.models.CustomerInfo,kotlin.Unit>;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.ReplacementMode?){}[0]
    final fun purchase(com.revenuecat.purchases.kmp.models/SubscriptionOption, kotlin/Function2<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin/Boolean, kotlin/Unit>, kotlin/Function2<com.revenuecat.purchases.kmp.models/StoreTransaction, com.revenuecat.purchases.kmp.models/CustomerInfo, kotlin/Unit>, kotlin/Boolean? =..., kotlin/String? =..., com.revenuecat.purchases.kmp.models/ReplacementMode? =...) // com.revenuecat.purchases.kmp/Purchases.purchase|purchase(com.revenuecat.purchases.kmp.models.SubscriptionOption;kotlin.Function2<com.revenuecat.purchases.kmp.models.PurchasesError,kotlin.Boolean,kotlin.Unit>;kotlin.Function2<com.revenuecat.purchases.kmp.models.StoreTransaction,com.revenuecat.purchases.kmp.models.CustomerInfo,kotlin.Unit>;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.ReplacementMode?){}[0]
    final fun recordPurchase(kotlin/String, kotlin/Function1<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin/Unit>, kotlin/Function1<com.revenuecat.purchases.kmp.models/StoreTransaction, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.recordPurchase|recordPurchase(kotlin.String;kotlin.Function1<com.revenuecat.purchases.kmp.models.PurchasesError,kotlin.Unit>;kotlin.Function1<com.revenuecat.purchases.kmp.models.StoreTransaction,kotlin.Unit>){}[0]
    final fun restorePurchases(kotlin/Function1<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin/Unit>, kotlin/Function1<com.revenuecat.purchases.kmp.models/CustomerInfo, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.restorePurchases|restorePurchases(kotlin.Function1<com.revenuecat.purchases.kmp.models.PurchasesError,kotlin.Unit>;kotlin.Function1<com.revenuecat.purchases.kmp.models.CustomerInfo,kotlin.Unit>){}[0]
    final fun setAd(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setAd|setAd(kotlin.String?){}[0]
    final fun setAdGroup(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setAdGroup|setAdGroup(kotlin.String?){}[0]
    final fun setAdjustID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setAdjustID|setAdjustID(kotlin.String?){}[0]
    final fun setAirshipChannelID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setAirshipChannelID|setAirshipChannelID(kotlin.String?){}[0]
    final fun setAppsflyerID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setAppsflyerID|setAppsflyerID(kotlin.String?){}[0]
    final fun setAttributes(kotlin.collections/Map<kotlin/String, kotlin/String?>) // com.revenuecat.purchases.kmp/Purchases.setAttributes|setAttributes(kotlin.collections.Map<kotlin.String,kotlin.String?>){}[0]
    final fun setCampaign(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setCampaign|setCampaign(kotlin.String?){}[0]
    final fun setCleverTapID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setCleverTapID|setCleverTapID(kotlin.String?){}[0]
    final fun setCreative(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setCreative|setCreative(kotlin.String?){}[0]
    final fun setDisplayName(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setDisplayName|setDisplayName(kotlin.String?){}[0]
    final fun setEmail(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setEmail|setEmail(kotlin.String?){}[0]
    final fun setFBAnonymousID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setFBAnonymousID|setFBAnonymousID(kotlin.String?){}[0]
    final fun setFirebaseAppInstanceID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setFirebaseAppInstanceID|setFirebaseAppInstanceID(kotlin.String?){}[0]
    final fun setKeyword(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setKeyword|setKeyword(kotlin.String?){}[0]
    final fun setMediaSource(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setMediaSource|setMediaSource(kotlin.String?){}[0]
    final fun setMixpanelDistinctID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setMixpanelDistinctID|setMixpanelDistinctID(kotlin.String?){}[0]
    final fun setMparticleID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setMparticleID|setMparticleID(kotlin.String?){}[0]
    final fun setOnesignalID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setOnesignalID|setOnesignalID(kotlin.String?){}[0]
    final fun setOnesignalUserID(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setOnesignalUserID|setOnesignalUserID(kotlin.String?){}[0]
    final fun setPhoneNumber(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setPhoneNumber|setPhoneNumber(kotlin.String?){}[0]
    final fun setPushToken(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.setPushToken|setPushToken(kotlin.String?){}[0]
    final fun showInAppMessagesIfNeeded(kotlin.collections/List<com.revenuecat.purchases.kmp.models/StoreMessageType> =...) // com.revenuecat.purchases.kmp/Purchases.showInAppMessagesIfNeeded|showInAppMessagesIfNeeded(kotlin.collections.List<com.revenuecat.purchases.kmp.models.StoreMessageType>){}[0]
    final fun syncAmazonPurchase(kotlin/String, kotlin/String, kotlin/String, kotlin/String?, kotlin/Double?) // com.revenuecat.purchases.kmp/Purchases.syncAmazonPurchase|syncAmazonPurchase(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlin.Double?){}[0]
    final fun syncAttributesAndOfferingsIfNeeded(kotlin/Function1<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin/Unit>, kotlin/Function1<com.revenuecat.purchases.kmp.models/Offerings, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.syncAttributesAndOfferingsIfNeeded|syncAttributesAndOfferingsIfNeeded(kotlin.Function1<com.revenuecat.purchases.kmp.models.PurchasesError,kotlin.Unit>;kotlin.Function1<com.revenuecat.purchases.kmp.models.Offerings,kotlin.Unit>){}[0]
    final fun syncPurchases(kotlin/Function1<com.revenuecat.purchases.kmp.models/PurchasesError, kotlin/Unit>, kotlin/Function1<com.revenuecat.purchases.kmp.models/CustomerInfo, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.syncPurchases|syncPurchases(kotlin.Function1<com.revenuecat.purchases.kmp.models.PurchasesError,kotlin.Unit>;kotlin.Function1<com.revenuecat.purchases.kmp.models.CustomerInfo,kotlin.Unit>){}[0]
    final object Companion { // com.revenuecat.purchases.kmp/Purchases.Companion|null[0]
        final fun canMakePayments(kotlin.collections/List<com.revenuecat.purchases.kmp.models/BillingFeature> =..., kotlin/Function1<kotlin/Boolean, kotlin/Unit>) // com.revenuecat.purchases.kmp/Purchases.Companion.canMakePayments|canMakePayments(kotlin.collections.List<com.revenuecat.purchases.kmp.models.BillingFeature>;kotlin.Function1<kotlin.Boolean,kotlin.Unit>){}[0]
        final fun configure(com.revenuecat.purchases.kmp/PurchasesConfiguration): com.revenuecat.purchases.kmp/Purchases // com.revenuecat.purchases.kmp/Purchases.Companion.configure|configure(com.revenuecat.purchases.kmp.PurchasesConfiguration){}[0]
        final val isConfigured // com.revenuecat.purchases.kmp/Purchases.Companion.isConfigured|{}isConfigured[0]
            final fun <get-isConfigured>(): kotlin/Boolean // com.revenuecat.purchases.kmp/Purchases.Companion.isConfigured.<get-isConfigured>|<get-isConfigured>(){}[0]
        final val sharedInstance // com.revenuecat.purchases.kmp/Purchases.Companion.sharedInstance|{}sharedInstance[0]
            final fun <get-sharedInstance>(): com.revenuecat.purchases.kmp/Purchases // com.revenuecat.purchases.kmp/Purchases.Companion.sharedInstance.<get-sharedInstance>|<get-sharedInstance>(){}[0]
        final var forceUniversalAppStore // com.revenuecat.purchases.kmp/Purchases.Companion.forceUniversalAppStore|{}forceUniversalAppStore[0]
            final fun <get-forceUniversalAppStore>(): kotlin/Boolean // com.revenuecat.purchases.kmp/Purchases.Companion.forceUniversalAppStore.<get-forceUniversalAppStore>|<get-forceUniversalAppStore>(){}[0]
            final fun <set-forceUniversalAppStore>(kotlin/Boolean) // com.revenuecat.purchases.kmp/Purchases.Companion.forceUniversalAppStore.<set-forceUniversalAppStore>|<set-forceUniversalAppStore>(kotlin.Boolean){}[0]
        final var logHandler // com.revenuecat.purchases.kmp/Purchases.Companion.logHandler|{}logHandler[0]
            final fun <get-logHandler>(): com.revenuecat.purchases.kmp/LogHandler // com.revenuecat.purchases.kmp/Purchases.Companion.logHandler.<get-logHandler>|<get-logHandler>(){}[0]
            final fun <set-logHandler>(com.revenuecat.purchases.kmp/LogHandler) // com.revenuecat.purchases.kmp/Purchases.Companion.logHandler.<set-logHandler>|<set-logHandler>(com.revenuecat.purchases.kmp.LogHandler){}[0]
        final var logLevel // com.revenuecat.purchases.kmp/Purchases.Companion.logLevel|{}logLevel[0]
            final fun <get-logLevel>(): com.revenuecat.purchases.kmp/LogLevel // com.revenuecat.purchases.kmp/Purchases.Companion.logLevel.<get-logLevel>|<get-logLevel>(){}[0]
            final fun <set-logLevel>(com.revenuecat.purchases.kmp/LogLevel) // com.revenuecat.purchases.kmp/Purchases.Companion.logLevel.<set-logLevel>|<set-logLevel>(com.revenuecat.purchases.kmp.LogLevel){}[0]
        final var proxyURL // com.revenuecat.purchases.kmp/Purchases.Companion.proxyURL|{}proxyURL[0]
            final fun <get-proxyURL>(): kotlin/String? // com.revenuecat.purchases.kmp/Purchases.Companion.proxyURL.<get-proxyURL>|<get-proxyURL>(){}[0]
            final fun <set-proxyURL>(kotlin/String?) // com.revenuecat.purchases.kmp/Purchases.Companion.proxyURL.<set-proxyURL>|<set-proxyURL>(kotlin.String?){}[0]
        final var simulatesAskToBuyInSandbox // com.revenuecat.purchases.kmp/Purchases.Companion.simulatesAskToBuyInSandbox|{}simulatesAskToBuyInSandbox[0]
            final fun <get-simulatesAskToBuyInSandbox>(): kotlin/Boolean // com.revenuecat.purchases.kmp/Purchases.Companion.simulatesAskToBuyInSandbox.<get-simulatesAskToBuyInSandbox>|<get-simulatesAskToBuyInSandbox>(){}[0]
            final fun <set-simulatesAskToBuyInSandbox>(kotlin/Boolean) // com.revenuecat.purchases.kmp/Purchases.Companion.simulatesAskToBuyInSandbox.<set-simulatesAskToBuyInSandbox>|<set-simulatesAskToBuyInSandbox>(kotlin.Boolean){}[0]
    }
    final val appUserID // com.revenuecat.purchases.kmp/Purchases.appUserID|{}appUserID[0]
        final fun <get-appUserID>(): kotlin/String // com.revenuecat.purchases.kmp/Purchases.appUserID.<get-appUserID>|<get-appUserID>(){}[0]
    final val isAnonymous // com.revenuecat.purchases.kmp/Purchases.isAnonymous|{}isAnonymous[0]
        final fun <get-isAnonymous>(): kotlin/Boolean // com.revenuecat.purchases.kmp/Purchases.isAnonymous.<get-isAnonymous>|<get-isAnonymous>(){}[0]
    final val store // com.revenuecat.purchases.kmp/Purchases.store|{}store[0]
        final fun <get-store>(): com.revenuecat.purchases.kmp.models/Store // com.revenuecat.purchases.kmp/Purchases.store.<get-store>|<get-store>(){}[0]
    final var delegate // com.revenuecat.purchases.kmp/Purchases.delegate|{}delegate[0]
        final fun <get-delegate>(): com.revenuecat.purchases.kmp/PurchasesDelegate? // com.revenuecat.purchases.kmp/Purchases.delegate.<get-delegate>|<get-delegate>(){}[0]
        final fun <set-delegate>(com.revenuecat.purchases.kmp/PurchasesDelegate?) // com.revenuecat.purchases.kmp/Purchases.delegate.<set-delegate>|<set-delegate>(com.revenuecat.purchases.kmp.PurchasesDelegate?){}[0]
}
final class com.revenuecat.purchases.kmp/PurchasesConfiguration { // com.revenuecat.purchases.kmp/PurchasesConfiguration|null[0]
    final class Builder { // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder|null[0]
        constructor <init>(kotlin/String) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.<init>|<init>(kotlin.String){}[0]
        final fun apiKey(kotlin/String): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.apiKey|apiKey(kotlin.String){}[0]
        final fun appUserId(kotlin/String): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.appUserId|appUserId(kotlin.String){}[0]
        final fun build(): com.revenuecat.purchases.kmp/PurchasesConfiguration // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.build|build(){}[0]
        final fun dangerousSettings(com.revenuecat.purchases.kmp.models/DangerousSettings): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.dangerousSettings|dangerousSettings(com.revenuecat.purchases.kmp.models.DangerousSettings){}[0]
        final fun diagnosticsEnabled(kotlin/Boolean): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.diagnosticsEnabled|diagnosticsEnabled(kotlin.Boolean){}[0]
        final fun pendingTransactionsForPrepaidPlansEnabled(kotlin/Boolean): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.pendingTransactionsForPrepaidPlansEnabled|pendingTransactionsForPrepaidPlansEnabled(kotlin.Boolean){}[0]
        final fun purchasesAreCompletedBy(com.revenuecat.purchases.kmp.models/PurchasesAreCompletedBy): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.purchasesAreCompletedBy|purchasesAreCompletedBy(com.revenuecat.purchases.kmp.models.PurchasesAreCompletedBy){}[0]
        final fun showInAppMessagesAutomatically(kotlin/Boolean): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.showInAppMessagesAutomatically|showInAppMessagesAutomatically(kotlin.Boolean){}[0]
        final fun store(com.revenuecat.purchases.kmp.models/Store?): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.store|store(com.revenuecat.purchases.kmp.models.Store?){}[0]
        final fun storeKitVersion(com.revenuecat.purchases.kmp.models/StoreKitVersion): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.storeKitVersion|storeKitVersion(com.revenuecat.purchases.kmp.models.StoreKitVersion){}[0]
        final fun userDefaultsSuiteName(kotlin/String?): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.userDefaultsSuiteName|userDefaultsSuiteName(kotlin.String?){}[0]
        final fun verificationMode(com.revenuecat.purchases.kmp.models/EntitlementVerificationMode): com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.verificationMode|verificationMode(com.revenuecat.purchases.kmp.models.EntitlementVerificationMode){}[0]
        final var apiKey // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.apiKey|{}apiKey[0]
            final fun <get-apiKey>(): kotlin/String // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.apiKey.<get-apiKey>|<get-apiKey>(){}[0]
            final fun <set-apiKey>(kotlin/String) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.apiKey.<set-apiKey>|<set-apiKey>(kotlin.String){}[0]
        final var appUserId // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.appUserId|{}appUserId[0]
            final fun <get-appUserId>(): kotlin/String? // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.appUserId.<get-appUserId>|<get-appUserId>(){}[0]
            final fun <set-appUserId>(kotlin/String?) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.appUserId.<set-appUserId>|<set-appUserId>(kotlin.String?){}[0]
        final var dangerousSettings // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.dangerousSettings|{}dangerousSettings[0]
            final fun <get-dangerousSettings>(): com.revenuecat.purchases.kmp.models/DangerousSettings // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.dangerousSettings.<get-dangerousSettings>|<get-dangerousSettings>(){}[0]
            final fun <set-dangerousSettings>(com.revenuecat.purchases.kmp.models/DangerousSettings) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.dangerousSettings.<set-dangerousSettings>|<set-dangerousSettings>(com.revenuecat.purchases.kmp.models.DangerousSettings){}[0]
        final var diagnosticsEnabled // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.diagnosticsEnabled|{}diagnosticsEnabled[0]
            final fun <get-diagnosticsEnabled>(): kotlin/Boolean // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.diagnosticsEnabled.<get-diagnosticsEnabled>|<get-diagnosticsEnabled>(){}[0]
            final fun <set-diagnosticsEnabled>(kotlin/Boolean) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.diagnosticsEnabled.<set-diagnosticsEnabled>|<set-diagnosticsEnabled>(kotlin.Boolean){}[0]
        final var pendingTransactionsForPrepaidPlansEnabled // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.pendingTransactionsForPrepaidPlansEnabled|{}pendingTransactionsForPrepaidPlansEnabled[0]
            final fun <get-pendingTransactionsForPrepaidPlansEnabled>(): kotlin/Boolean? // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.pendingTransactionsForPrepaidPlansEnabled.<get-pendingTransactionsForPrepaidPlansEnabled>|<get-pendingTransactionsForPrepaidPlansEnabled>(){}[0]
            final fun <set-pendingTransactionsForPrepaidPlansEnabled>(kotlin/Boolean?) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.pendingTransactionsForPrepaidPlansEnabled.<set-pendingTransactionsForPrepaidPlansEnabled>|<set-pendingTransactionsForPrepaidPlansEnabled>(kotlin.Boolean?){}[0]
        final var purchasesAreCompletedBy // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.purchasesAreCompletedBy|{}purchasesAreCompletedBy[0]
            final fun <get-purchasesAreCompletedBy>(): com.revenuecat.purchases.kmp.models/PurchasesAreCompletedBy // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.purchasesAreCompletedBy.<get-purchasesAreCompletedBy>|<get-purchasesAreCompletedBy>(){}[0]
            final fun <set-purchasesAreCompletedBy>(com.revenuecat.purchases.kmp.models/PurchasesAreCompletedBy) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.purchasesAreCompletedBy.<set-purchasesAreCompletedBy>|<set-purchasesAreCompletedBy>(com.revenuecat.purchases.kmp.models.PurchasesAreCompletedBy){}[0]
        final var showInAppMessagesAutomatically // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.showInAppMessagesAutomatically|{}showInAppMessagesAutomatically[0]
            final fun <get-showInAppMessagesAutomatically>(): kotlin/Boolean // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.showInAppMessagesAutomatically.<get-showInAppMessagesAutomatically>|<get-showInAppMessagesAutomatically>(){}[0]
            final fun <set-showInAppMessagesAutomatically>(kotlin/Boolean) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.showInAppMessagesAutomatically.<set-showInAppMessagesAutomatically>|<set-showInAppMessagesAutomatically>(kotlin.Boolean){}[0]
        final var store // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.store|{}store[0]
            final fun <get-store>(): com.revenuecat.purchases.kmp.models/Store? // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.store.<get-store>|<get-store>(){}[0]
            final fun <set-store>(com.revenuecat.purchases.kmp.models/Store?) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.store.<set-store>|<set-store>(com.revenuecat.purchases.kmp.models.Store?){}[0]
        final var storeKitVersion // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.storeKitVersion|{}storeKitVersion[0]
            final fun <get-storeKitVersion>(): com.revenuecat.purchases.kmp.models/StoreKitVersion // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.storeKitVersion.<get-storeKitVersion>|<get-storeKitVersion>(){}[0]
            final fun <set-storeKitVersion>(com.revenuecat.purchases.kmp.models/StoreKitVersion) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.storeKitVersion.<set-storeKitVersion>|<set-storeKitVersion>(com.revenuecat.purchases.kmp.models.StoreKitVersion){}[0]
        final var userDefaultsSuiteName // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.userDefaultsSuiteName|{}userDefaultsSuiteName[0]
            final fun <get-userDefaultsSuiteName>(): kotlin/String? // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.userDefaultsSuiteName.<get-userDefaultsSuiteName>|<get-userDefaultsSuiteName>(){}[0]
            final fun <set-userDefaultsSuiteName>(kotlin/String?) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.userDefaultsSuiteName.<set-userDefaultsSuiteName>|<set-userDefaultsSuiteName>(kotlin.String?){}[0]
        final var verificationMode // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.verificationMode|{}verificationMode[0]
            final fun <get-verificationMode>(): com.revenuecat.purchases.kmp.models/EntitlementVerificationMode // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.verificationMode.<get-verificationMode>|<get-verificationMode>(){}[0]
            final fun <set-verificationMode>(com.revenuecat.purchases.kmp.models/EntitlementVerificationMode) // com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder.verificationMode.<set-verificationMode>|<set-verificationMode>(com.revenuecat.purchases.kmp.models.EntitlementVerificationMode){}[0]
    }
    final fun toString(): kotlin/String // com.revenuecat.purchases.kmp/PurchasesConfiguration.toString|toString(){}[0]
    final val apiKey // com.revenuecat.purchases.kmp/PurchasesConfiguration.apiKey|{}apiKey[0]
        final fun <get-apiKey>(): kotlin/String // com.revenuecat.purchases.kmp/PurchasesConfiguration.apiKey.<get-apiKey>|<get-apiKey>(){}[0]
    final val appUserId // com.revenuecat.purchases.kmp/PurchasesConfiguration.appUserId|{}appUserId[0]
        final fun <get-appUserId>(): kotlin/String? // com.revenuecat.purchases.kmp/PurchasesConfiguration.appUserId.<get-appUserId>|<get-appUserId>(){}[0]
    final val dangerousSettings // com.revenuecat.purchases.kmp/PurchasesConfiguration.dangerousSettings|{}dangerousSettings[0]
        final fun <get-dangerousSettings>(): com.revenuecat.purchases.kmp.models/DangerousSettings // com.revenuecat.purchases.kmp/PurchasesConfiguration.dangerousSettings.<get-dangerousSettings>|<get-dangerousSettings>(){}[0]
    final val diagnosticsEnabled // com.revenuecat.purchases.kmp/PurchasesConfiguration.diagnosticsEnabled|{}diagnosticsEnabled[0]
        final fun <get-diagnosticsEnabled>(): kotlin/Boolean // com.revenuecat.purchases.kmp/PurchasesConfiguration.diagnosticsEnabled.<get-diagnosticsEnabled>|<get-diagnosticsEnabled>(){}[0]
    final val pendingTransactionsForPrepaidPlansEnabled // com.revenuecat.purchases.kmp/PurchasesConfiguration.pendingTransactionsForPrepaidPlansEnabled|{}pendingTransactionsForPrepaidPlansEnabled[0]
        final fun <get-pendingTransactionsForPrepaidPlansEnabled>(): kotlin/Boolean? // com.revenuecat.purchases.kmp/PurchasesConfiguration.pendingTransactionsForPrepaidPlansEnabled.<get-pendingTransactionsForPrepaidPlansEnabled>|<get-pendingTransactionsForPrepaidPlansEnabled>(){}[0]
    final val purchasesAreCompletedBy // com.revenuecat.purchases.kmp/PurchasesConfiguration.purchasesAreCompletedBy|{}purchasesAreCompletedBy[0]
        final fun <get-purchasesAreCompletedBy>(): com.revenuecat.purchases.kmp.models/PurchasesAreCompletedBy // com.revenuecat.purchases.kmp/PurchasesConfiguration.purchasesAreCompletedBy.<get-purchasesAreCompletedBy>|<get-purchasesAreCompletedBy>(){}[0]
    final val showInAppMessagesAutomatically // com.revenuecat.purchases.kmp/PurchasesConfiguration.showInAppMessagesAutomatically|{}showInAppMessagesAutomatically[0]
        final fun <get-showInAppMessagesAutomatically>(): kotlin/Boolean // com.revenuecat.purchases.kmp/PurchasesConfiguration.showInAppMessagesAutomatically.<get-showInAppMessagesAutomatically>|<get-showInAppMessagesAutomatically>(){}[0]
    final val store // com.revenuecat.purchases.kmp/PurchasesConfiguration.store|{}store[0]
        final fun <get-store>(): com.revenuecat.purchases.kmp.models/Store? // com.revenuecat.purchases.kmp/PurchasesConfiguration.store.<get-store>|<get-store>(){}[0]
    final val storeKitVersion // com.revenuecat.purchases.kmp/PurchasesConfiguration.storeKitVersion|{}storeKitVersion[0]
        final fun <get-storeKitVersion>(): com.revenuecat.purchases.kmp.models/StoreKitVersion // com.revenuecat.purchases.kmp/PurchasesConfiguration.storeKitVersion.<get-storeKitVersion>|<get-storeKitVersion>(){}[0]
    final val userDefaultsSuiteName // com.revenuecat.purchases.kmp/PurchasesConfiguration.userDefaultsSuiteName|{}userDefaultsSuiteName[0]
        final fun <get-userDefaultsSuiteName>(): kotlin/String? // com.revenuecat.purchases.kmp/PurchasesConfiguration.userDefaultsSuiteName.<get-userDefaultsSuiteName>|<get-userDefaultsSuiteName>(){}[0]
    final val verificationMode // com.revenuecat.purchases.kmp/PurchasesConfiguration.verificationMode|{}verificationMode[0]
        final fun <get-verificationMode>(): com.revenuecat.purchases.kmp.models/EntitlementVerificationMode // com.revenuecat.purchases.kmp/PurchasesConfiguration.verificationMode.<get-verificationMode>|<get-verificationMode>(){}[0]
}
final enum class com.revenuecat.purchases.kmp/LogLevel : kotlin/Enum<com.revenuecat.purchases.kmp/LogLevel> { // com.revenuecat.purchases.kmp/LogLevel|null[0]
    enum entry DEBUG // com.revenuecat.purchases.kmp/LogLevel.DEBUG|null[0]
    enum entry ERROR // com.revenuecat.purchases.kmp/LogLevel.ERROR|null[0]
    enum entry INFO // com.revenuecat.purchases.kmp/LogLevel.INFO|null[0]
    enum entry VERBOSE // com.revenuecat.purchases.kmp/LogLevel.VERBOSE|null[0]
    enum entry WARN // com.revenuecat.purchases.kmp/LogLevel.WARN|null[0]
    final fun valueOf(kotlin/String): com.revenuecat.purchases.kmp/LogLevel // com.revenuecat.purchases.kmp/LogLevel.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.revenuecat.purchases.kmp/LogLevel> // com.revenuecat.purchases.kmp/LogLevel.values|values#static(){}[0]
    final val entries // com.revenuecat.purchases.kmp/LogLevel.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.revenuecat.purchases.kmp/LogLevel> // com.revenuecat.purchases.kmp/LogLevel.entries.<get-entries>|<get-entries>#static(){}[0]
}
final fun (com.revenuecat.purchases.kmp/Purchases.Companion).com.revenuecat.purchases.kmp/configure(kotlin/String, kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder, kotlin/Unit> =...): com.revenuecat.purchases.kmp/Purchases // com.revenuecat.purchases.kmp/configure|configure@com.revenuecat.purchases.kmp.Purchases.Companion(kotlin.String;kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesConfiguration.Builder,kotlin.Unit>){}[0]
final fun com.revenuecat.purchases.kmp/PurchasesConfiguration(kotlin/String, kotlin/Function1<com.revenuecat.purchases.kmp/PurchasesConfiguration.Builder, kotlin/Unit> =...): com.revenuecat.purchases.kmp/PurchasesConfiguration // com.revenuecat.purchases.kmp/PurchasesConfiguration|PurchasesConfiguration(kotlin.String;kotlin.Function1<com.revenuecat.purchases.kmp.PurchasesConfiguration.Builder,kotlin.Unit>){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitCustomerInfo(com.revenuecat.purchases.kmp.models/CacheFetchPolicy =...): com.revenuecat.purchases.kmp.models/CustomerInfo // com.revenuecat.purchases.kmp.ktx/awaitCustomerInfo|awaitCustomerInfo@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.CacheFetchPolicy){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitGetProducts(kotlin.collections/List<kotlin/String>): kotlin.collections/List<com.revenuecat.purchases.kmp.models/StoreProduct> // com.revenuecat.purchases.kmp.ktx/awaitGetProducts|awaitGetProducts@com.revenuecat.purchases.kmp.Purchases(kotlin.collections.List<kotlin.String>){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitLogIn(kotlin/String): com.revenuecat.purchases.kmp.ktx/SuccessfulLogin // com.revenuecat.purchases.kmp.ktx/awaitLogIn|awaitLogIn@com.revenuecat.purchases.kmp.Purchases(kotlin.String){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitLogOut(): com.revenuecat.purchases.kmp.models/CustomerInfo // com.revenuecat.purchases.kmp.ktx/awaitLogOut|awaitLogOut@com.revenuecat.purchases.kmp.Purchases(){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitOfferings(): com.revenuecat.purchases.kmp.models/Offerings // com.revenuecat.purchases.kmp.ktx/awaitOfferings|awaitOfferings@com.revenuecat.purchases.kmp.Purchases(){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitPromotionalOffer(com.revenuecat.purchases.kmp.models/StoreProductDiscount, com.revenuecat.purchases.kmp.models/StoreProduct): com.revenuecat.purchases.kmp.models/PromotionalOffer // com.revenuecat.purchases.kmp.ktx/awaitPromotionalOffer|awaitPromotionalOffer@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.StoreProductDiscount;com.revenuecat.purchases.kmp.models.StoreProduct){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitPurchase(com.revenuecat.purchases.kmp.models/Package, com.revenuecat.purchases.kmp.models/PromotionalOffer): com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase // com.revenuecat.purchases.kmp.ktx/awaitPurchase|awaitPurchase@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.Package;com.revenuecat.purchases.kmp.models.PromotionalOffer){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitPurchase(com.revenuecat.purchases.kmp.models/Package, kotlin/Boolean? =..., kotlin/String? =..., com.revenuecat.purchases.kmp.models/GoogleReplacementMode =...): com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase // com.revenuecat.purchases.kmp.ktx/awaitPurchase|awaitPurchase@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.Package;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.GoogleReplacementMode){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitPurchase(com.revenuecat.purchases.kmp.models/StoreProduct, com.revenuecat.purchases.kmp.models/PromotionalOffer): com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase // com.revenuecat.purchases.kmp.ktx/awaitPurchase|awaitPurchase@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.StoreProduct;com.revenuecat.purchases.kmp.models.PromotionalOffer){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitPurchase(com.revenuecat.purchases.kmp.models/StoreProduct, kotlin/Boolean? =..., kotlin/String? =..., com.revenuecat.purchases.kmp.models/GoogleReplacementMode =...): com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase // com.revenuecat.purchases.kmp.ktx/awaitPurchase|awaitPurchase@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.StoreProduct;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.GoogleReplacementMode){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitPurchase(com.revenuecat.purchases.kmp.models/SubscriptionOption, kotlin/Boolean? =..., kotlin/String? =..., com.revenuecat.purchases.kmp.models/GoogleReplacementMode =...): com.revenuecat.purchases.kmp.ktx/SuccessfulPurchase // com.revenuecat.purchases.kmp.ktx/awaitPurchase|awaitPurchase@com.revenuecat.purchases.kmp.Purchases(com.revenuecat.purchases.kmp.models.SubscriptionOption;kotlin.Boolean?;kotlin.String?;com.revenuecat.purchases.kmp.models.GoogleReplacementMode){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitRestore(): com.revenuecat.purchases.kmp.models/CustomerInfo // com.revenuecat.purchases.kmp.ktx/awaitRestore|awaitRestore@com.revenuecat.purchases.kmp.Purchases(){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitSyncAttributesAndOfferingsIfNeeded(): com.revenuecat.purchases.kmp.models/Offerings // com.revenuecat.purchases.kmp.ktx/awaitSyncAttributesAndOfferingsIfNeeded|awaitSyncAttributesAndOfferingsIfNeeded@com.revenuecat.purchases.kmp.Purchases(){}[0]
final suspend fun (com.revenuecat.purchases.kmp/Purchases).com.revenuecat.purchases.kmp.ktx/awaitSyncPurchases(): com.revenuecat.purchases.kmp.models/CustomerInfo // com.revenuecat.purchases.kmp.ktx/awaitSyncPurchases|awaitSyncPurchases@com.revenuecat.purchases.kmp.Purchases(){}[0]
final val com.revenuecat.purchases.kmp/frameworkVersion // com.revenuecat.purchases.kmp/frameworkVersion|@com.revenuecat.purchases.kmp.Purchases.Companion{}frameworkVersion[0]
    final fun (com.revenuecat.purchases.kmp/Purchases.Companion).<get-frameworkVersion>(): kotlin/String // com.revenuecat.purchases.kmp/frameworkVersion.<get-frameworkVersion>|<get-frameworkVersion>@com.revenuecat.purchases.kmp.Purchases.Companion(){}[0]
